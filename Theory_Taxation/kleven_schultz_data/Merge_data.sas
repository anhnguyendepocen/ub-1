/****************************************************************************************/ 
/* This SAS-program constructs the estimation data set. The program is structured in 4  */
/* steps:                                                                               */ 
/* Step 1: For each year (1984-2005) this step merges data on tax liability status with */
/*         data generated by the programs "TAXSIM1984-2005" and                         */
/*         "TAXSIM1984-2005_Mechanical", rename variables and price-adjust incomes.     */
/* Step 2: Using data from step 1, this step merges data for year t with data for year  */ 
/*         t+3 and select the estimation sample.                                        */
/* Step 3: Using data from step 2, this step constructs income and tax variables for    */
/*         estimation for each year.                                                    */
/* Step 4: Using data from step 3 and administrative data on municipality of living,    */
/*         this step merges yearly datasets into one dataset, add socioeconomic         */ 
/*         controls and construct income controls.                                      */
/****************************************************************************************/

dm log 'clear';
dm output 'clear';
options pageno=1 pagesize=100;
goptions reset=all;
options obs=max;

/* Relevante datasæt indlæses */
libname indk 'D:\Rawdata\702487\indk';
libname fain 'D:\Rawdata\702487\fain';
libname skat 'D:\Workdata\702487\Esben\Skatteberegning';
libname skat2 'D:\Rawdata\702487\indk_skat';
libname idpe 'D:\Rawdata\702487\idpe';
libname udda 'D:\Rawdata\702487\udda';
libname idas 'D:\Rawdata\702487\idas';
libname bif 'D:\Workdata\702487\Esben\Skatteberegning\NYE BEREGNINGER\';
libname cbs 'D:\Workdata\702487\Esben\Final programs\Gather data\';
libname bif2 'D:\Workdata\702487\Esben';

/* STEP 1: FOR EACH YEAR (1984-2005) THIS STEP MERGES DATA ON TAX LIABILITY STATUS WITH DATA GENERATED BY THE
           PROGRAMS "TAXSIM1984-2005" AND "MEC_TAXSIM1984-2005", RENAME VARIABLES AND PRICE-ADJUST INCOMES */

Proc sort data=bif.skat1984; by pnr; run;
Proc sort data=bif.skat1987_Indkomst1984; by pnr; run;
Proc sort data=skat2.skat_indk1984; by pnr; run;

data skat1987_indkomst1984;
set bif.skat1987_indkomst1984
(keep=pnr tau_arb_i tau_apers_i tau_kap_i tau_frad_i tau_arb_h tau_apers_h tau_kap_h
tau_frad_h c_tau_arb_i c_tau_apers_i c_tau_kap_i c_tau_frad_i c_tau_arb_h c_tau_apers_h
c_tau_kap_h c_tau_frad_h tau_akt_h c_tau_akt_h virtuelindk_i virtuelindk_h1 virtuelindk_h2 
top_dummy mellem_dummy bund_dummy notax_dummy);
rename
tau_arb_i=tau_arb_i_mec
tau_apers_i=tau_apers_i_mec
tau_kap_i=tau_kap_i_mec
tau_frad_i=tau_frad_i_mec
tau_arb_h=tau_arb_h_mec
tau_apers_h=tau_apers_h_mec
tau_kap_h=tau_kap_h_mec
tau_frad_h=tau_frad_h_mec
tau_akt_h=tau_akt_h_mec
c_tau_arb_i=c_tau_arb_i_mec 
c_tau_apers_i=c_tau_apers_i_mec
c_tau_kap_i=c_tau_kap_i_mec
c_tau_frad_i=c_tau_frad_i_mec
c_tau_arb_h=c_tau_arb_h_mec
c_tau_apers_h=c_tau_apers_h_mec
c_tau_kap_h=c_tau_kap_h_mec
c_tau_frad_h=c_tau_frad_h_mec
c_tau_akt_h=c_tau_akt_h_mec
virtuelindk_i=virtuelindk_i_mec
virtuelindk_h1=virtuelindk_h1_mec 
virtuelindk_h2=virtuelindk_h2_mec top_dummy=top_dummy_mec mellem_dummy=mellem_dummy_mec bund_dummy=bund_dummy_mec notax_dummy=notax_dummy_mec;
run;

data ska1984;
merge bif.skat1984(in=a) skat1987_Indkomst1984 (in=b) 
 skat2.skat_indk1984(keep=pnr omfskpl in=d);
by pnr;
if a=1 and b=1 and d=1;
run;

data k(keep=year inflation1984_2005);
set bif2.inflation(where=(infl1984_2005=1));
inflation1984_2005=inflation;
run;

data g(keep=year inflation1987_2005);
set bif2.inflation(where=(infl1987_2005=1));
inflation1987_2005=inflation;
year=1984;
run;

data skat1984(drop=per cap dec ear c_per c_cap c_dec c_ear per_income c_per_income virtuelindk_i virtuelindk_h1
virtuelindk_h2 tax1-tax9 c_tax1-c_tax9 h_tax1-h_tax9 x c_arbindk c_kapindk c_apersindk 
c_lignfrad c_qsocyd nybundinc nymelleminc nytopinc);
merge ska1984(in=a) k(in=b) g(in=c);
by year;
tt=0;
tm=0;
tb=0;
tn=0;
mt=0;
mm=0;
mb=0;
mn=0;
bt=0;
bm=0;
bb=0;
bn=0;
nt=0;
nm=0;
nb=0;
nn=0;
/*top*/
if top_dummy=1 and top_dummy_mec=1 then tt=1;
if top_dummy=1 and mellem_dummy_mec=1 then tm=1;
if top_dummy=1 and bund_dummy_mec=1 then tb=1;
if top_dummy=1 and notax_dummy_mec=1 then tn=1;
/*mellem*/
if mellem_dummy=1 and top_dummy_mec=1 then mt=1;
if mellem_dummy=1 and mellem_dummy_mec=1 then mm=1;
if mellem_dummy=1 and bund_dummy_mec=1 then mb=1;
if mellem_dummy=1 and notax_dummy_mec=1 then mn=1;
/*bund*/
if bund_dummy=1 and top_dummy_mec=1 then bt=1;
if bund_dummy=1 and mellem_dummy_mec=1 then bm=1;
if bund_dummy=1 and bund_dummy_mec=1 then bb=1;
if bund_dummy=1 and notax_dummy_mec=1 then bn=1;
/*notax*/
if notax_dummy=1 and bund_dummy_mec=1 then nb=1;
if notax_dummy=1 and notax_dummy_mec=1 then nn=1;
if notax_dummy=1 and mellem_dummy_mec=1 then nm=1;
if notax_dummy=1 and top_dummy_mec=1 then nt=1;

if exp=. then exp=0;
if omfskpl=0 then spligt1984=1; else spligt1984=0;
bkink=nybundinc*inflation1984_2005;
mkink=nymelleminc*inflation1984_2005;
tkink=nytopinc*inflation1984_2005;
per_1984=per*inflation1984_2005;
cap_1984=cap*inflation1984_2005;
dec_1984=dec*inflation1984_2005;
ear_1984=ear*inflation1984_2005;
per_income_1984=per_income*inflation1984_2005;
c_per_income_1984=c_per_income*inflation1984_2005;
c_per_1984=c_per*inflation1984_2005;
c_cap_1984=c_cap*inflation1984_2005;
c_dec_1984=c_dec*inflation1984_2005;
c_ear_1984=c_ear*inflation1984_2005;
virtuelindk_i_1984=virtuelindk_i*inflation1984_2005;
virtuelindk_h1_1984=virtuelindk_h1*inflation1984_2005;
virtuelindk_h2_1984=virtuelindk_h2*inflation1984_2005;
virtuelindk_i_mec1984=virtuelindk_i_mec*inflation1987_2005;
virtuelindk_h1_mec1984=virtuelindk_h1_mec*inflation1987_2005;
virtuelindk_h2_mec1984=virtuelindk_h2_mec*inflation1987_2005;
tax1_1984=tax1*inflation1984_2005;
c_tax1_1984=c_tax1*inflation1984_2005;
h_tax1_1984=h_tax1*inflation1984_2005;
rename tau_arb_i=tau_arb_i1984 
       tau_apers_i=tau_apers_i1984
       tau_kap_i=tau_kap_i1984
	   tau_frad_i=tau_frad_i1984
	   tau_arb_h=tau_arb_h1984 
       tau_apers_h=tau_apers_h1984
       tau_kap_h=tau_kap_h1984
	   tau_frad_h=tau_frad_h1984
	   c_tau_arb_i=c_tau_arb_i1984 
       c_tau_apers_i=c_tau_apers_i1984
       c_tau_kap_i=c_tau_kap_i1984
	   c_tau_frad_i=c_tau_frad_i1984
	   c_tau_arb_h=c_tau_arb_h1984 
       c_tau_apers_h=c_tau_apers_h1984
       c_tau_kap_h=c_tau_kap_h1984
	   c_tau_frad_h=c_tau_frad_h1984
	   tau_arb_i_mec=tau_arb_i_mec1984 
       tau_apers_i_mec=tau_apers_i_mec1984
       tau_kap_i_mec=tau_kap_i_mec1984
	   tau_frad_i_mec=tau_frad_i_mec1984
	   tau_arb_h_mec=tau_arb_h_mec1984 
       tau_apers_h_mec=tau_apers_h_mec1984
       tau_kap_h_mec=tau_kap_h_mec1984
	   tau_frad_h_mec=tau_frad_h_mec1984
	   c_tau_arb_i_mec=c_tau_arb_i_mec1984 
       c_tau_apers_i_mec=c_tau_apers_i_mec1984
       c_tau_kap_i_mec=c_tau_kap_i_mec1984
	   c_tau_frad_i_mec=c_tau_frad_i_mec1984
	   c_tau_arb_h_mec=c_tau_arb_h_mec1984 
       c_tau_apers_h_mec=c_tau_apers_h_mec1984
       c_tau_kap_h_mec=c_tau_kap_h_mec1984
	   c_tau_frad_h_mec=c_tau_frad_h_mec1984
	   tau_akt_h=tau_akt_h1984
	   c_tau_akt_h=c_tau_akt_h1984
	   tau_akt_h_mec=tau_akt_h_mec1984
	   c_tau_akt_h_mec=c_tau_akt_h_mec1984
              bdagp=bdagp1984
       qoffpens=qoffpens1984
       arblhu=arblhu1984
       adagp=adagp1984
       stip=stip1984
       /*gift=gift1984*/
       qsocyd=qsocyd1984;
if a=1 and b=1 and c=1;
run;

proc datasets library=work; delete ska1984 k g skat1987_indkomst1984; 
run;

Proc sort data=bif.skat1985; by pnr; run;
Proc sort data=bif.skat1988_Indkomst1985; by pnr; run;
Proc sort data=skat2.skat_indk1985; by pnr; run;

data skat1988_indkomst1985;
set bif.skat1988_indkomst1985
(keep=pnr tau_arb_i tau_apers_i tau_kap_i tau_frad_i tau_arb_h tau_apers_h tau_kap_h
tau_frad_h c_tau_arb_i c_tau_apers_i c_tau_kap_i c_tau_frad_i c_tau_arb_h c_tau_apers_h
c_tau_kap_h c_tau_frad_h tau_akt_h c_tau_akt_h virtuelindk_i virtuelindk_h1 virtuelindk_h2 
top_dummy mellem_dummy bund_dummy notax_dummy);
rename
tau_arb_i=tau_arb_i_mec
tau_apers_i=tau_apers_i_mec
tau_kap_i=tau_kap_i_mec
tau_frad_i=tau_frad_i_mec
tau_arb_h=tau_arb_h_mec
tau_apers_h=tau_apers_h_mec
tau_kap_h=tau_kap_h_mec
tau_frad_h=tau_frad_h_mec
tau_akt_h=tau_akt_h_mec
c_tau_arb_i=c_tau_arb_i_mec 
c_tau_apers_i=c_tau_apers_i_mec
c_tau_kap_i=c_tau_kap_i_mec
c_tau_frad_i=c_tau_frad_i_mec
c_tau_arb_h=c_tau_arb_h_mec
c_tau_apers_h=c_tau_apers_h_mec
c_tau_kap_h=c_tau_kap_h_mec
c_tau_frad_h=c_tau_frad_h_mec
c_tau_akt_h=c_tau_akt_h_mec
virtuelindk_i=virtuelindk_i_mec
virtuelindk_h1=virtuelindk_h1_mec 
virtuelindk_h2=virtuelindk_h2_mec top_dummy=top_dummy_mec mellem_dummy=mellem_dummy_mec bund_dummy=bund_dummy_mec notax_dummy=notax_dummy_mec;
run;


data ska1985;
merge bif.skat1985(in=a) skat1988_Indkomst1985 (in=b) 
 skat2.skat_indk1985(keep=pnr omfskpl in=d);
by pnr;
if a=1 and b=1 and d=1;
run;

data k(keep=year inflation1985_2005);
set bif2.inflation(where=(infl1985_2005=1));
inflation1985_2005=inflation;
run;

data g(keep=year inflation1988_2005);
set bif2.inflation(where=(infl1988_2005=1));
inflation1988_2005=inflation;
year=1985;
run;

data skat1985(drop=per cap dec ear c_per c_cap c_dec c_ear per_income c_per_income virtuelindk_i virtuelindk_h1
virtuelindk_h2 tax1-tax9 c_tax1-c_tax9 h_tax1-h_tax9 x c_arbindk c_kapindk c_apersindk 
c_lignfrad c_qsocyd nybundinc nymelleminc nytopinc);
merge ska1985(in=a) k(in=b) g(in=c);
by year;
tt=0;
tm=0;
tb=0;
tn=0;
mt=0;
mm=0;
mb=0;
mn=0;
bt=0;
bm=0;
bb=0;
bn=0;
nt=0;
nm=0;
nb=0;
nn=0;
/*top*/
if top_dummy=1 and top_dummy_mec=1 then tt=1;
if top_dummy=1 and mellem_dummy_mec=1 then tm=1;
if top_dummy=1 and bund_dummy_mec=1 then tb=1;
if top_dummy=1 and notax_dummy_mec=1 then tn=1;
/*mellem*/
if mellem_dummy=1 and top_dummy_mec=1 then mt=1;
if mellem_dummy=1 and mellem_dummy_mec=1 then mm=1;
if mellem_dummy=1 and bund_dummy_mec=1 then mb=1;
if mellem_dummy=1 and notax_dummy_mec=1 then mn=1;
/*bund*/
if bund_dummy=1 and top_dummy_mec=1 then bt=1;
if bund_dummy=1 and mellem_dummy_mec=1 then bm=1;
if bund_dummy=1 and bund_dummy_mec=1 then bb=1;
if bund_dummy=1 and notax_dummy_mec=1 then bn=1;
/*notax*/
if notax_dummy=1 and bund_dummy_mec=1 then nb=1;
if notax_dummy=1 and notax_dummy_mec=1 then nn=1;
if notax_dummy=1 and mellem_dummy_mec=1 then nm=1;
if notax_dummy=1 and top_dummy_mec=1 then nt=1;
if exp=. then exp=0;
if omfskpl=0 then spligt1985=1; else spligt1985=0;
bkink=nybundinc*inflation1985_2005;
mkink=nymelleminc*inflation1985_2005;
tkink=nytopinc*inflation1985_2005;
per_1985=per*inflation1985_2005;
cap_1985=cap*inflation1985_2005;
dec_1985=dec*inflation1985_2005;
ear_1985=ear*inflation1985_2005;
per_income_1985=per_income*inflation1985_2005;
c_per_income_1985=c_per_income*inflation1985_2005;
c_per_1985=c_per*inflation1985_2005;
c_cap_1985=c_cap*inflation1985_2005;
c_dec_1985=c_dec*inflation1985_2005;
c_ear_1985=c_ear*inflation1985_2005;
virtuelindk_i_1985=virtuelindk_i*inflation1985_2005;
virtuelindk_h1_1985=virtuelindk_h1*inflation1985_2005;
virtuelindk_h2_1985=virtuelindk_h2*inflation1985_2005;
virtuelindk_i_mec1985=virtuelindk_i_mec*inflation1988_2005;
virtuelindk_h1_mec1985=virtuelindk_h1_mec*inflation1988_2005;
virtuelindk_h2_mec1985=virtuelindk_h2_mec*inflation1988_2005;
tax1_1985=tax1*inflation1985_2005;
c_tax1_1985=c_tax1*inflation1985_2005;
h_tax1_1985=h_tax1*inflation1985_2005;
rename tau_arb_i=tau_arb_i1985 
       tau_apers_i=tau_apers_i1985
       tau_kap_i=tau_kap_i1985
	   tau_frad_i=tau_frad_i1985
	   tau_arb_h=tau_arb_h1985 
       tau_apers_h=tau_apers_h1985
       tau_kap_h=tau_kap_h1985
	   tau_frad_h=tau_frad_h1985
	   c_tau_arb_i=c_tau_arb_i1985 
       c_tau_apers_i=c_tau_apers_i1985
       c_tau_kap_i=c_tau_kap_i1985
	   c_tau_frad_i=c_tau_frad_i1985
	   c_tau_arb_h=c_tau_arb_h1985 
       c_tau_apers_h=c_tau_apers_h1985
       c_tau_kap_h=c_tau_kap_h1985
	   c_tau_frad_h=c_tau_frad_h1985
	   tau_arb_i_mec=tau_arb_i_mec1985 
       tau_apers_i_mec=tau_apers_i_mec1985
       tau_kap_i_mec=tau_kap_i_mec1985
	   tau_frad_i_mec=tau_frad_i_mec1985
	   tau_arb_h_mec=tau_arb_h_mec1985 
       tau_apers_h_mec=tau_apers_h_mec1985
       tau_kap_h_mec=tau_kap_h_mec1985
	   tau_frad_h_mec=tau_frad_h_mec1985
	   c_tau_arb_i_mec=c_tau_arb_i_mec1985 
       c_tau_apers_i_mec=c_tau_apers_i_mec1985
       c_tau_kap_i_mec=c_tau_kap_i_mec1985
	   c_tau_frad_i_mec=c_tau_frad_i_mec1985
	   c_tau_arb_h_mec=c_tau_arb_h_mec1985 
       c_tau_apers_h_mec=c_tau_apers_h_mec1985
       c_tau_kap_h_mec=c_tau_kap_h_mec1985
	   c_tau_frad_h_mec=c_tau_frad_h_mec1985
	   tau_akt_h=tau_akt_h1985
	   c_tau_akt_h=c_tau_akt_h1985
	   tau_akt_h_mec=tau_akt_h_mec1985
	   c_tau_akt_h_mec=c_tau_akt_h_mec1985
             bdagp=bdagp1985
       qoffpens=qoffpens1985
       arblhu=arblhu1985
       adagp=adagp1985
       stip=stip1985
       /*gift=gift1985*/
       qsocyd=qsocyd1985;
if a=1 and b=1 and c=1;
run;


proc datasets library=work; delete ska1985 k g skat1988_indkomst1985; 
run;


Proc sort data=bif.skat1986; by pnr; run;
Proc sort data=bif.skat1989_Indkomst1986; by pnr; run;
Proc sort data=skat2.skat_indk1986; by pnr; run;

data skat1989_indkomst1986;
set bif.skat1989_indkomst1986
(keep=pnr tau_arb_i tau_apers_i tau_kap_i tau_frad_i tau_arb_h tau_apers_h tau_kap_h
tau_frad_h c_tau_arb_i c_tau_apers_i c_tau_kap_i c_tau_frad_i c_tau_arb_h c_tau_apers_h
c_tau_kap_h c_tau_frad_h tau_akt_h c_tau_akt_h virtuelindk_i virtuelindk_h1 virtuelindk_h2 
top_dummy mellem_dummy bund_dummy notax_dummy);
rename
tau_arb_i=tau_arb_i_mec
tau_apers_i=tau_apers_i_mec
tau_kap_i=tau_kap_i_mec
tau_frad_i=tau_frad_i_mec
tau_arb_h=tau_arb_h_mec
tau_apers_h=tau_apers_h_mec
tau_kap_h=tau_kap_h_mec
tau_frad_h=tau_frad_h_mec
tau_akt_h=tau_akt_h_mec
c_tau_arb_i=c_tau_arb_i_mec 
c_tau_apers_i=c_tau_apers_i_mec
c_tau_kap_i=c_tau_kap_i_mec
c_tau_frad_i=c_tau_frad_i_mec
c_tau_arb_h=c_tau_arb_h_mec
c_tau_apers_h=c_tau_apers_h_mec
c_tau_kap_h=c_tau_kap_h_mec
c_tau_frad_h=c_tau_frad_h_mec
c_tau_akt_h=c_tau_akt_h_mec
virtuelindk_i=virtuelindk_i_mec
virtuelindk_h1=virtuelindk_h1_mec 
virtuelindk_h2=virtuelindk_h2_mec top_dummy=top_dummy_mec mellem_dummy=mellem_dummy_mec bund_dummy=bund_dummy_mec notax_dummy=notax_dummy_mec;
run;

data ska1986;
merge bif.skat1986(in=a) skat1989_Indkomst1986 (in=b) 
 skat2.skat_indk1986(keep=pnr omfskpl in=d);
by pnr;
if a=1 and b=1 and d=1;
run;

data k(keep=year inflation1986_2005);
set bif2.inflation(where=(infl1986_2005=1));
inflation1986_2005=inflation;
run;

data g(keep=year inflation1989_2005);
set bif2.inflation(where=(infl1989_2005=1));
inflation1989_2005=inflation;
year=1986;
run;

data skat1986(drop=per cap dec ear c_per c_cap c_dec c_ear per_income c_per_income  virtuelindk_i virtuelindk_h1
virtuelindk_h2 tax1-tax9 c_tax1-c_tax9 h_tax1-h_tax9 x c_arbindk c_kapindk c_apersindk 
c_lignfrad c_qsocyd nybundinc nymelleminc nytopinc);
merge ska1986(in=a) k(in=b) g(in=c);
by year;
tt=0;
tm=0;
tb=0;
tn=0;
mt=0;
mm=0;
mb=0;
mn=0;
bt=0;
bm=0;
bb=0;
bn=0;
nt=0;
nm=0;
nb=0;
nn=0;
/*top*/
if top_dummy=1 and top_dummy_mec=1 then tt=1;
if top_dummy=1 and mellem_dummy_mec=1 then tm=1;
if top_dummy=1 and bund_dummy_mec=1 then tb=1;
if top_dummy=1 and notax_dummy_mec=1 then tn=1;
/*mellem*/
if mellem_dummy=1 and top_dummy_mec=1 then mt=1;
if mellem_dummy=1 and mellem_dummy_mec=1 then mm=1;
if mellem_dummy=1 and bund_dummy_mec=1 then mb=1;
if mellem_dummy=1 and notax_dummy_mec=1 then mn=1;
/*bund*/
if bund_dummy=1 and top_dummy_mec=1 then bt=1;
if bund_dummy=1 and mellem_dummy_mec=1 then bm=1;
if bund_dummy=1 and bund_dummy_mec=1 then bb=1;
if bund_dummy=1 and notax_dummy_mec=1 then bn=1;
/*notax*/
if notax_dummy=1 and bund_dummy_mec=1 then nb=1;
if notax_dummy=1 and notax_dummy_mec=1 then nn=1;
if notax_dummy=1 and mellem_dummy_mec=1 then nm=1;
if notax_dummy=1 and top_dummy_mec=1 then nt=1;
if exp=. then exp=0;
if omfskpl=0 then spligt1986=1; else spligt1986=0;
bkink=nybundinc*inflation1986_2005;
mkink=nymelleminc*inflation1986_2005;
tkink=nytopinc*inflation1986_2005;
per_1986=per*inflation1986_2005;
cap_1986=cap*inflation1986_2005;
dec_1986=dec*inflation1986_2005;
ear_1986=ear*inflation1986_2005;
per_income_1986=per_income*inflation1986_2005;
c_per_income_1986=c_per_income*inflation1986_2005;
c_per_1986=c_per*inflation1986_2005;
c_cap_1986=c_cap*inflation1986_2005;
c_dec_1986=c_dec*inflation1986_2005;
c_ear_1986=c_ear*inflation1986_2005;
virtuelindk_i_1986=virtuelindk_i*inflation1986_2005;
virtuelindk_h1_1986=virtuelindk_h1*inflation1986_2005;
virtuelindk_h2_1986=virtuelindk_h2*inflation1986_2005;
virtuelindk_i_mec1986=virtuelindk_i_mec*inflation1989_2005;
virtuelindk_h1_mec1986=virtuelindk_h1_mec*inflation1989_2005;
virtuelindk_h2_mec1986=virtuelindk_h2_mec*inflation1989_2005;
tax1_1986=tax1*inflation1986_2005;
c_tax1_1986=c_tax1*inflation1986_2005;
h_tax1_1986=h_tax1*inflation1986_2005;
rename tau_arb_i=tau_arb_i1986 
       tau_apers_i=tau_apers_i1986
       tau_kap_i=tau_kap_i1986
	   tau_frad_i=tau_frad_i1986
	   tau_arb_h=tau_arb_h1986 
       tau_apers_h=tau_apers_h1986
       tau_kap_h=tau_kap_h1986
	   tau_frad_h=tau_frad_h1986
	   c_tau_arb_i=c_tau_arb_i1986 
       c_tau_apers_i=c_tau_apers_i1986
       c_tau_kap_i=c_tau_kap_i1986
	   c_tau_frad_i=c_tau_frad_i1986
	   c_tau_arb_h=c_tau_arb_h1986 
       c_tau_apers_h=c_tau_apers_h1986
       c_tau_kap_h=c_tau_kap_h1986
	   c_tau_frad_h=c_tau_frad_h1986
	   tau_arb_i_mec=tau_arb_i_mec1986 
       tau_apers_i_mec=tau_apers_i_mec1986
       tau_kap_i_mec=tau_kap_i_mec1986
	   tau_frad_i_mec=tau_frad_i_mec1986
	   tau_arb_h_mec=tau_arb_h_mec1986 
       tau_apers_h_mec=tau_apers_h_mec1986
       tau_kap_h_mec=tau_kap_h_mec1986
	   tau_frad_h_mec=tau_frad_h_mec1986
	   c_tau_arb_i_mec=c_tau_arb_i_mec1986 
       c_tau_apers_i_mec=c_tau_apers_i_mec1986
       c_tau_kap_i_mec=c_tau_kap_i_mec1986
	   c_tau_frad_i_mec=c_tau_frad_i_mec1986
	   c_tau_arb_h_mec=c_tau_arb_h_mec1986 
       c_tau_apers_h_mec=c_tau_apers_h_mec1986
       c_tau_kap_h_mec=c_tau_kap_h_mec1986
	   c_tau_frad_h_mec=c_tau_frad_h_mec1986
	   tau_akt_h=tau_akt_h1986
	   c_tau_akt_h=c_tau_akt_h1986
	   tau_akt_h_mec=tau_akt_h_mec1986
	   c_tau_akt_h_mec=c_tau_akt_h_mec1986
     
       bdagp=bdagp1986
       qoffpens=qoffpens1986
       arblhu=arblhu1986
       adagp=adagp1986
       stip=stip1986
      /* gift=gift1986*/
       qsocyd=qsocyd1986;
if a=1 and b=1 and c=1;
run;


proc datasets library=work; delete ska1986 k g skat1989_indkomst1986; 
run;

Proc sort data=bif.skat1987; by pnr; run;
Proc sort data=bif.skat1990_Indkomst1987; by pnr; run;
Proc sort data=skat2.skat_indk1987; by pnr; run;

data skat1990_indkomst1987;
set bif.skat1990_indkomst1987
(keep=pnr tau_arb_i tau_apers_i tau_kap_i tau_frad_i tau_arb_h tau_apers_h tau_kap_h
tau_frad_h c_tau_arb_i c_tau_apers_i c_tau_kap_i c_tau_frad_i c_tau_arb_h c_tau_apers_h
c_tau_kap_h c_tau_frad_h tau_akt_h c_tau_akt_h virtuelindk_i virtuelindk_h1 virtuelindk_h2 
top_dummy mellem_dummy bund_dummy notax_dummy);
rename
tau_arb_i=tau_arb_i_mec
tau_apers_i=tau_apers_i_mec
tau_kap_i=tau_kap_i_mec
tau_frad_i=tau_frad_i_mec
tau_arb_h=tau_arb_h_mec
tau_apers_h=tau_apers_h_mec
tau_kap_h=tau_kap_h_mec
tau_frad_h=tau_frad_h_mec
tau_akt_h=tau_akt_h_mec
c_tau_arb_i=c_tau_arb_i_mec 
c_tau_apers_i=c_tau_apers_i_mec
c_tau_kap_i=c_tau_kap_i_mec
c_tau_frad_i=c_tau_frad_i_mec
c_tau_arb_h=c_tau_arb_h_mec
c_tau_apers_h=c_tau_apers_h_mec
c_tau_kap_h=c_tau_kap_h_mec
c_tau_frad_h=c_tau_frad_h_mec
c_tau_akt_h=c_tau_akt_h_mec
virtuelindk_i=virtuelindk_i_mec
virtuelindk_h1=virtuelindk_h1_mec 
virtuelindk_h2=virtuelindk_h2_mec top_dummy=top_dummy_mec mellem_dummy=mellem_dummy_mec bund_dummy=bund_dummy_mec notax_dummy=notax_dummy_mec;
run;


data ska1987;
merge bif.skat1987(in=a) skat1990_Indkomst1987 (in=b) 
 skat2.skat_indk1987(keep=pnr omfskpl in=d);
by pnr;
if a=1 and b=1 and d=1;
run;

data k(keep=year inflation1987_2005);
set bif2.inflation(where=(infl1987_2005=1));
inflation1987_2005=inflation;
run;

data g(keep=year inflation1990_2005);
set bif2.inflation(where=(infl1990_2005=1));
inflation1990_2005=inflation;
year=1987;
run;

data skat1987(drop=per cap dec ear c_per c_cap c_dec c_ear per_income c_per_income  virtuelindk_i virtuelindk_h1
virtuelindk_h2 tax1-tax9 c_tax1-c_tax9 h_tax1-h_tax9 x c_arbindk c_kapindk c_apersindk 
c_lignfrad c_qsocyd nybundinc nymelleminc nytopinc);
merge ska1987(in=a) k(in=b) g(in=c);
by year;
tt=0;
tm=0;
tb=0;
tn=0;
mt=0;
mm=0;
mb=0;
mn=0;
bt=0;
bm=0;
bb=0;
bn=0;
nt=0;
nm=0;
nb=0;
nn=0;
/*top*/
if top_dummy=1 and top_dummy_mec=1 then tt=1;
if top_dummy=1 and mellem_dummy_mec=1 then tm=1;
if top_dummy=1 and bund_dummy_mec=1 then tb=1;
if top_dummy=1 and notax_dummy_mec=1 then tn=1;
/*mellem*/
if mellem_dummy=1 and top_dummy_mec=1 then mt=1;
if mellem_dummy=1 and mellem_dummy_mec=1 then mm=1;
if mellem_dummy=1 and bund_dummy_mec=1 then mb=1;
if mellem_dummy=1 and notax_dummy_mec=1 then mn=1;
/*bund*/
if bund_dummy=1 and top_dummy_mec=1 then bt=1;
if bund_dummy=1 and mellem_dummy_mec=1 then bm=1;
if bund_dummy=1 and bund_dummy_mec=1 then bb=1;
if bund_dummy=1 and notax_dummy_mec=1 then bn=1;
/*notax*/
if notax_dummy=1 and bund_dummy_mec=1 then nb=1;
if notax_dummy=1 and notax_dummy_mec=1 then nn=1;
if notax_dummy=1 and mellem_dummy_mec=1 then nm=1;
if notax_dummy=1 and top_dummy_mec=1 then nt=1;
if exp=. then exp=0;
if omfskpl=0 then spligt1987=1; else spligt1987=0;
bkink=nybundinc*inflation1987_2005;
mkink=nymelleminc*inflation1987_2005;
tkink=nytopinc*inflation1987_2005;
per_1987=per*inflation1987_2005;
cap_1987=cap*inflation1987_2005;
dec_1987=dec*inflation1987_2005;
ear_1987=ear*inflation1987_2005;
per_income_1987=per_income*inflation1987_2005;
c_per_income_1987=c_per_income*inflation1987_2005;
c_per_1987=c_per*inflation1987_2005;
c_cap_1987=c_cap*inflation1987_2005;
c_dec_1987=c_dec*inflation1987_2005;
c_ear_1987=c_ear*inflation1987_2005;
virtuelindk_i_1987=virtuelindk_i*inflation1987_2005;
virtuelindk_h1_1987=virtuelindk_h1*inflation1987_2005;
virtuelindk_h2_1987=virtuelindk_h2*inflation1987_2005;
virtuelindk_i_mec1987=virtuelindk_i_mec*inflation1990_2005;
virtuelindk_h1_mec1987=virtuelindk_h1_mec*inflation1990_2005;
virtuelindk_h2_mec1987=virtuelindk_h2_mec*inflation1990_2005;
tax1_1987=tax1*inflation1987_2005;
c_tax1_1987=c_tax1*inflation1987_2005;
h_tax1_1987=h_tax1*inflation1987_2005;
rename tau_arb_i=tau_arb_i1987 
       tau_apers_i=tau_apers_i1987
       tau_kap_i=tau_kap_i1987
	   tau_frad_i=tau_frad_i1987
	   tau_arb_h=tau_arb_h1987 
       tau_apers_h=tau_apers_h1987
       tau_kap_h=tau_kap_h1987
	   tau_frad_h=tau_frad_h1987
	   c_tau_arb_i=c_tau_arb_i1987 
       c_tau_apers_i=c_tau_apers_i1987
       c_tau_kap_i=c_tau_kap_i1987
	   c_tau_frad_i=c_tau_frad_i1987
	   c_tau_arb_h=c_tau_arb_h1987 
       c_tau_apers_h=c_tau_apers_h1987
       c_tau_kap_h=c_tau_kap_h1987
	   c_tau_frad_h=c_tau_frad_h1987
	   tau_arb_i_mec=tau_arb_i_mec1987 
       tau_apers_i_mec=tau_apers_i_mec1987
       tau_kap_i_mec=tau_kap_i_mec1987
	   tau_frad_i_mec=tau_frad_i_mec1987
	   tau_arb_h_mec=tau_arb_h_mec1987 
       tau_apers_h_mec=tau_apers_h_mec1987
       tau_kap_h_mec=tau_kap_h_mec1987
	   tau_frad_h_mec=tau_frad_h_mec1987
	   c_tau_arb_i_mec=c_tau_arb_i_mec1987 
       c_tau_apers_i_mec=c_tau_apers_i_mec1987
       c_tau_kap_i_mec=c_tau_kap_i_mec1987
	   c_tau_frad_i_mec=c_tau_frad_i_mec1987
	   c_tau_arb_h_mec=c_tau_arb_h_mec1987 
       c_tau_apers_h_mec=c_tau_apers_h_mec1987
       c_tau_kap_h_mec=c_tau_kap_h_mec1987
	   c_tau_frad_h_mec=c_tau_frad_h_mec1987
	   tau_akt_h=tau_akt_h1987
	   c_tau_akt_h=c_tau_akt_h1987
	   tau_akt_h_mec=tau_akt_h_mec1987
	   c_tau_akt_h_mec=c_tau_akt_h_mec1987
      
       bdagp=bdagp1987
       qoffpens=qoffpens1987
       arblhu=arblhu1987
       adagp=adagp1987
       stip=stip1987
      /* gift=gift1987 */
       qsocyd=qsocyd1987;
if a=1 and b=1 and c=1;
run;


proc datasets library=work; delete ska1987 k g skat1990_indkomst1987; 
run;


Proc sort data=bif.skat1988; by pnr; run;
Proc sort data=bif.skat1991_Indkomst1988; by pnr; run;
Proc sort data=skat2.skat_indk1988; by pnr; run;

data skat1991_indkomst1988;
set bif.skat1991_indkomst1988
(keep=pnr tau_arb_i tau_apers_i tau_kap_i tau_frad_i tau_arb_h tau_apers_h tau_kap_h
tau_frad_h c_tau_arb_i c_tau_apers_i c_tau_kap_i c_tau_frad_i c_tau_arb_h c_tau_apers_h
c_tau_kap_h c_tau_frad_h tau_akt_h c_tau_akt_h virtuelindk_i virtuelindk_h1 virtuelindk_h2 
top_dummy mellem_dummy bund_dummy notax_dummy);
rename
tau_arb_i=tau_arb_i_mec
tau_apers_i=tau_apers_i_mec
tau_kap_i=tau_kap_i_mec
tau_frad_i=tau_frad_i_mec
tau_arb_h=tau_arb_h_mec
tau_apers_h=tau_apers_h_mec
tau_kap_h=tau_kap_h_mec
tau_frad_h=tau_frad_h_mec
tau_akt_h=tau_akt_h_mec
c_tau_arb_i=c_tau_arb_i_mec 
c_tau_apers_i=c_tau_apers_i_mec
c_tau_kap_i=c_tau_kap_i_mec
c_tau_frad_i=c_tau_frad_i_mec
c_tau_arb_h=c_tau_arb_h_mec
c_tau_apers_h=c_tau_apers_h_mec
c_tau_kap_h=c_tau_kap_h_mec
c_tau_frad_h=c_tau_frad_h_mec
c_tau_akt_h=c_tau_akt_h_mec
virtuelindk_i=virtuelindk_i_mec
virtuelindk_h1=virtuelindk_h1_mec 
virtuelindk_h2=virtuelindk_h2_mec top_dummy=top_dummy_mec mellem_dummy=mellem_dummy_mec bund_dummy=bund_dummy_mec notax_dummy=notax_dummy_mec;
run;

data ska1988;
merge bif.skat1988(in=a) skat1991_Indkomst1988 (in=b) 
 skat2.skat_indk1988(keep=pnr omfskpl in=d);
by pnr;
if a=1 and b=1 and d=1;
run;

data k(keep=year inflation1988_2005);
set bif2.inflation(where=(infl1988_2005=1));
inflation1988_2005=inflation;
run;

data g(keep=year inflation1991_2005);
set bif2.inflation(where=(infl1991_2005=1));
inflation1991_2005=inflation;
year=1988;
run;

data skat1988(drop=per cap dec ear c_per c_cap c_dec c_ear per_income c_per_income  virtuelindk_i virtuelindk_h1
virtuelindk_h2 tax1-tax9 c_tax1-c_tax9 h_tax1-h_tax9 x c_arbindk c_kapindk c_apersindk 
c_lignfrad c_qsocyd nybundinc nymelleminc nytopinc);
merge ska1988(in=a) k(in=b) g(in=c);
by year;
tt=0;
tm=0;
tb=0;
tn=0;
mt=0;
mm=0;
mb=0;
mn=0;
bt=0;
bm=0;
bb=0;
bn=0;
nt=0;
nm=0;
nb=0;
nn=0;
/*top*/
if top_dummy=1 and top_dummy_mec=1 then tt=1;
if top_dummy=1 and mellem_dummy_mec=1 then tm=1;
if top_dummy=1 and bund_dummy_mec=1 then tb=1;
if top_dummy=1 and notax_dummy_mec=1 then tn=1;
/*mellem*/
if mellem_dummy=1 and top_dummy_mec=1 then mt=1;
if mellem_dummy=1 and mellem_dummy_mec=1 then mm=1;
if mellem_dummy=1 and bund_dummy_mec=1 then mb=1;
if mellem_dummy=1 and notax_dummy_mec=1 then mn=1;
/*bund*/
if bund_dummy=1 and top_dummy_mec=1 then bt=1;
if bund_dummy=1 and mellem_dummy_mec=1 then bm=1;
if bund_dummy=1 and bund_dummy_mec=1 then bb=1;
if bund_dummy=1 and notax_dummy_mec=1 then bn=1;
/*notax*/
if notax_dummy=1 and bund_dummy_mec=1 then nb=1;
if notax_dummy=1 and notax_dummy_mec=1 then nn=1;
if notax_dummy=1 and mellem_dummy_mec=1 then nm=1;
if notax_dummy=1 and top_dummy_mec=1 then nt=1;
if exp=. then exp=0;
if omfskpl=0 then spligt1988=1; else spligt1988=0;
bkink=nybundinc*inflation1988_2005;
mkink=nymelleminc*inflation1988_2005;
tkink=nytopinc*inflation1988_2005;
per_1988=per*inflation1988_2005;
cap_1988=cap*inflation1988_2005;
dec_1988=dec*inflation1988_2005;
ear_1988=ear*inflation1988_2005;
per_income_1988=per_income*inflation1988_2005;
c_per_income_1988=c_per_income*inflation1988_2005;
c_per_1988=c_per*inflation1988_2005;
c_cap_1988=c_cap*inflation1988_2005;
c_dec_1988=c_dec*inflation1988_2005;
c_ear_1988=c_ear*inflation1988_2005;
virtuelindk_i_1988=virtuelindk_i*inflation1988_2005;
virtuelindk_h1_1988=virtuelindk_h1*inflation1988_2005;
virtuelindk_h2_1988=virtuelindk_h2*inflation1988_2005;
virtuelindk_i_mec1988=virtuelindk_i_mec*inflation1991_2005;
virtuelindk_h1_mec1988=virtuelindk_h1_mec*inflation1991_2005;
virtuelindk_h2_mec1988=virtuelindk_h2_mec*inflation1991_2005;
tax1_1988=tax1*inflation1988_2005;
c_tax1_1988=c_tax1*inflation1988_2005;
h_tax1_1988=h_tax1*inflation1988_2005;
rename tau_arb_i=tau_arb_i1988 
       tau_apers_i=tau_apers_i1988
       tau_kap_i=tau_kap_i1988
	   tau_frad_i=tau_frad_i1988
	   tau_arb_h=tau_arb_h1988 
       tau_apers_h=tau_apers_h1988
       tau_kap_h=tau_kap_h1988
	   tau_frad_h=tau_frad_h1988
	   c_tau_arb_i=c_tau_arb_i1988 
       c_tau_apers_i=c_tau_apers_i1988
       c_tau_kap_i=c_tau_kap_i1988
	   c_tau_frad_i=c_tau_frad_i1988
	   c_tau_arb_h=c_tau_arb_h1988 
       c_tau_apers_h=c_tau_apers_h1988
       c_tau_kap_h=c_tau_kap_h1988
	   c_tau_frad_h=c_tau_frad_h1988
	   tau_arb_i_mec=tau_arb_i_mec1988 
       tau_apers_i_mec=tau_apers_i_mec1988
       tau_kap_i_mec=tau_kap_i_mec1988
	   tau_frad_i_mec=tau_frad_i_mec1988
	   tau_arb_h_mec=tau_arb_h_mec1988 
       tau_apers_h_mec=tau_apers_h_mec1988
       tau_kap_h_mec=tau_kap_h_mec1988
	   tau_frad_h_mec=tau_frad_h_mec1988
	   c_tau_arb_i_mec=c_tau_arb_i_mec1988 
       c_tau_apers_i_mec=c_tau_apers_i_mec1988
       c_tau_kap_i_mec=c_tau_kap_i_mec1988
	   c_tau_frad_i_mec=c_tau_frad_i_mec1988
	   c_tau_arb_h_mec=c_tau_arb_h_mec1988 
       c_tau_apers_h_mec=c_tau_apers_h_mec1988
       c_tau_kap_h_mec=c_tau_kap_h_mec1988
	   c_tau_frad_h_mec=c_tau_frad_h_mec1988
	   tau_akt_h=tau_akt_h1988
	   c_tau_akt_h=c_tau_akt_h1988
	   tau_akt_h_mec=tau_akt_h_mec1988
	   c_tau_akt_h_mec=c_tau_akt_h_mec1988
      
       bdagp=bdagp1988
       qoffpens=qoffpens1988
       arblhu=arblhu1988
       adagp=adagp1988
       stip=stip1988
       /*gift=gift1988*/
       qsocyd=qsocyd1988;
if a=1 and b=1 and c=1;
run;


proc datasets library=work; delete ska1988 k g skat1991_indkomst1988; 
run;



Proc sort data=bif.skat1989; by pnr; run;
Proc sort data=bif.skat1992_Indkomst1989; by pnr; run;
Proc sort data=skat2.skat_indk1989; by pnr; run;

data skat1992_indkomst1989;
set bif.skat1992_indkomst1989
(keep=pnr tau_arb_i tau_apers_i tau_kap_i tau_frad_i tau_arb_h tau_apers_h tau_kap_h
tau_frad_h c_tau_arb_i c_tau_apers_i c_tau_kap_i c_tau_frad_i c_tau_arb_h c_tau_apers_h
c_tau_kap_h c_tau_frad_h tau_akt_h c_tau_akt_h virtuelindk_i virtuelindk_h1 virtuelindk_h2 
top_dummy mellem_dummy bund_dummy notax_dummy);
rename
tau_arb_i=tau_arb_i_mec
tau_apers_i=tau_apers_i_mec
tau_kap_i=tau_kap_i_mec
tau_frad_i=tau_frad_i_mec
tau_arb_h=tau_arb_h_mec
tau_apers_h=tau_apers_h_mec
tau_kap_h=tau_kap_h_mec
tau_frad_h=tau_frad_h_mec
tau_akt_h=tau_akt_h_mec
c_tau_arb_i=c_tau_arb_i_mec 
c_tau_apers_i=c_tau_apers_i_mec
c_tau_kap_i=c_tau_kap_i_mec
c_tau_frad_i=c_tau_frad_i_mec
c_tau_arb_h=c_tau_arb_h_mec
c_tau_apers_h=c_tau_apers_h_mec
c_tau_kap_h=c_tau_kap_h_mec
c_tau_frad_h=c_tau_frad_h_mec
c_tau_akt_h=c_tau_akt_h_mec
virtuelindk_i=virtuelindk_i_mec
virtuelindk_h1=virtuelindk_h1_mec 
virtuelindk_h2=virtuelindk_h2_mec top_dummy=top_dummy_mec mellem_dummy=mellem_dummy_mec bund_dummy=bund_dummy_mec notax_dummy=notax_dummy_mec;
run;


data ska1989;
merge bif.skat1989(in=a) skat1992_Indkomst1989 (in=b) 
 skat2.skat_indk1989(keep=pnr omfskpl in=d);
by pnr;
if a=1 and b=1 and d=1;
run;

data k(keep=year inflation1989_2005);
set bif2.inflation(where=(infl1989_2005=1));
inflation1989_2005=inflation;
run;

data g(keep=year inflation1992_2005);
set bif2.inflation(where=(infl1992_2005=1));
inflation1992_2005=inflation;
year=1989;
run;

data skat1989(drop=per cap dec ear c_per c_cap c_dec c_ear per_income c_per_income  virtuelindk_i virtuelindk_h1
virtuelindk_h2 tax1-tax9 c_tax1-c_tax9 h_tax1-h_tax9 x c_arbindk c_kapindk c_apersindk 
c_lignfrad c_qsocyd nybundinc nymelleminc nytopinc);
merge ska1989(in=a) k(in=b) g(in=c);
by year;
tt=0;
tm=0;
tb=0;
tn=0;
mt=0;
mm=0;
mb=0;
mn=0;
bt=0;
bm=0;
bb=0;
bn=0;
nt=0;
nm=0;
nb=0;
nn=0;
/*top*/
if top_dummy=1 and top_dummy_mec=1 then tt=1;
if top_dummy=1 and mellem_dummy_mec=1 then tm=1;
if top_dummy=1 and bund_dummy_mec=1 then tb=1;
if top_dummy=1 and notax_dummy_mec=1 then tn=1;
/*mellem*/
if mellem_dummy=1 and top_dummy_mec=1 then mt=1;
if mellem_dummy=1 and mellem_dummy_mec=1 then mm=1;
if mellem_dummy=1 and bund_dummy_mec=1 then mb=1;
if mellem_dummy=1 and notax_dummy_mec=1 then mn=1;
/*bund*/
if bund_dummy=1 and top_dummy_mec=1 then bt=1;
if bund_dummy=1 and mellem_dummy_mec=1 then bm=1;
if bund_dummy=1 and bund_dummy_mec=1 then bb=1;
if bund_dummy=1 and notax_dummy_mec=1 then bn=1;
/*notax*/
if notax_dummy=1 and bund_dummy_mec=1 then nb=1;
if notax_dummy=1 and notax_dummy_mec=1 then nn=1;
if notax_dummy=1 and mellem_dummy_mec=1 then nm=1;
if notax_dummy=1 and top_dummy_mec=1 then nt=1;
if exp=. then exp=0;
if omfskpl=0 then spligt1989=1; else spligt1989=0;
bkink=nybundinc*inflation1989_2005;
mkink=nymelleminc*inflation1989_2005;
tkink=nytopinc*inflation1989_2005;
per_1989=per*inflation1989_2005;
cap_1989=cap*inflation1989_2005;
dec_1989=dec*inflation1989_2005;
ear_1989=ear*inflation1989_2005;
per_income_1989=per_income*inflation1989_2005;
c_per_income_1989=c_per_income*inflation1989_2005;
c_per_1989=c_per*inflation1989_2005;
c_cap_1989=c_cap*inflation1989_2005;
c_dec_1989=c_dec*inflation1989_2005;
c_ear_1989=c_ear*inflation1989_2005;
virtuelindk_i_1989=virtuelindk_i*inflation1989_2005;
virtuelindk_h1_1989=virtuelindk_h1*inflation1989_2005;
virtuelindk_h2_1989=virtuelindk_h2*inflation1989_2005;
virtuelindk_i_mec1989=virtuelindk_i_mec*inflation1992_2005;
virtuelindk_h1_mec1989=virtuelindk_h1_mec*inflation1992_2005;
virtuelindk_h2_mec1989=virtuelindk_h2_mec*inflation1992_2005;
tax1_1989=tax1*inflation1989_2005;
c_tax1_1989=c_tax1*inflation1989_2005;
h_tax1_1989=h_tax1*inflation1989_2005;
rename tau_arb_i=tau_arb_i1989 
       tau_apers_i=tau_apers_i1989
       tau_kap_i=tau_kap_i1989
	   tau_frad_i=tau_frad_i1989
	   tau_arb_h=tau_arb_h1989 
       tau_apers_h=tau_apers_h1989
       tau_kap_h=tau_kap_h1989
	   tau_frad_h=tau_frad_h1989
	   c_tau_arb_i=c_tau_arb_i1989 
       c_tau_apers_i=c_tau_apers_i1989
       c_tau_kap_i=c_tau_kap_i1989
	   c_tau_frad_i=c_tau_frad_i1989
	   c_tau_arb_h=c_tau_arb_h1989 
       c_tau_apers_h=c_tau_apers_h1989
       c_tau_kap_h=c_tau_kap_h1989
	   c_tau_frad_h=c_tau_frad_h1989
	   tau_arb_i_mec=tau_arb_i_mec1989 
       tau_apers_i_mec=tau_apers_i_mec1989
       tau_kap_i_mec=tau_kap_i_mec1989
	   tau_frad_i_mec=tau_frad_i_mec1989
	   tau_arb_h_mec=tau_arb_h_mec1989 
       tau_apers_h_mec=tau_apers_h_mec1989
       tau_kap_h_mec=tau_kap_h_mec1989
	   tau_frad_h_mec=tau_frad_h_mec1989
	   c_tau_arb_i_mec=c_tau_arb_i_mec1989 
       c_tau_apers_i_mec=c_tau_apers_i_mec1989
       c_tau_kap_i_mec=c_tau_kap_i_mec1989
	   c_tau_frad_i_mec=c_tau_frad_i_mec1989
	   c_tau_arb_h_mec=c_tau_arb_h_mec1989 
       c_tau_apers_h_mec=c_tau_apers_h_mec1989
       c_tau_kap_h_mec=c_tau_kap_h_mec1989
	   c_tau_frad_h_mec=c_tau_frad_h_mec1989
	   tau_akt_h=tau_akt_h1989
	   c_tau_akt_h=c_tau_akt_h1989
	   tau_akt_h_mec=tau_akt_h_mec1989
	   c_tau_akt_h_mec=c_tau_akt_h_mec1989
       
       bdagp=bdagp1989
       qoffpens=qoffpens1989
       arblhu=arblhu1989
       adagp=adagp1989
       stip=stip1989
       /*gift=gift1989*/
       qsocyd=qsocyd1989;
if a=1 and b=1 and c=1;
run;


proc datasets library=work; delete ska1989 k g skat1992_indkomst1989; 
run;


Proc sort data=bif.skat1990; by pnr; run;
Proc sort data=bif.skat1993_Indkomst1990; by pnr; run;
Proc sort data=skat2.skat_indk1990; by pnr; run;

data skat1993_indkomst1990;
set bif.skat1993_indkomst1990
(keep=pnr tau_arb_i tau_apers_i tau_kap_i tau_frad_i tau_arb_h tau_apers_h tau_kap_h
tau_frad_h c_tau_arb_i c_tau_apers_i c_tau_kap_i c_tau_frad_i c_tau_arb_h c_tau_apers_h
c_tau_kap_h c_tau_frad_h tau_akt_h c_tau_akt_h virtuelindk_i virtuelindk_h1 virtuelindk_h2 
top_dummy mellem_dummy bund_dummy notax_dummy);
rename
tau_arb_i=tau_arb_i_mec
tau_apers_i=tau_apers_i_mec
tau_kap_i=tau_kap_i_mec
tau_frad_i=tau_frad_i_mec
tau_arb_h=tau_arb_h_mec
tau_apers_h=tau_apers_h_mec
tau_kap_h=tau_kap_h_mec
tau_frad_h=tau_frad_h_mec
tau_akt_h=tau_akt_h_mec
c_tau_arb_i=c_tau_arb_i_mec 
c_tau_apers_i=c_tau_apers_i_mec
c_tau_kap_i=c_tau_kap_i_mec
c_tau_frad_i=c_tau_frad_i_mec
c_tau_arb_h=c_tau_arb_h_mec
c_tau_apers_h=c_tau_apers_h_mec
c_tau_kap_h=c_tau_kap_h_mec
c_tau_frad_h=c_tau_frad_h_mec
c_tau_akt_h=c_tau_akt_h_mec
virtuelindk_i=virtuelindk_i_mec
virtuelindk_h1=virtuelindk_h1_mec 
virtuelindk_h2=virtuelindk_h2_mec top_dummy=top_dummy_mec mellem_dummy=mellem_dummy_mec bund_dummy=bund_dummy_mec notax_dummy=notax_dummy_mec;
run;

data ska1990;
merge bif.skat1990(in=a) skat1993_Indkomst1990 (in=b) 
 skat2.skat_indk1990(keep=pnr omfskpl in=d);
by pnr;
if a=1 and b=1 and d=1;
run;

data k(keep=year inflation1990_2005);
set bif2.inflation(where=(infl1990_2005=1));
inflation1990_2005=inflation;
run;

data g(keep=year inflation1993_2005);
set bif2.inflation(where=(infl1993_2005=1));
inflation1993_2005=inflation;
year=1990;
run;

data skat1990(drop=per cap dec ear c_per c_cap c_dec c_ear per_income c_per_income virtuelindk_i virtuelindk_h1
virtuelindk_h2 tax1-tax9 c_tax1-c_tax9 h_tax1-h_tax9 x c_arbindk c_kapindk c_apersindk 
c_lignfrad c_qsocyd nybundinc nymelleminc nytopinc);
merge ska1990(in=a) k(in=b) g(in=c);
by year;
tt=0;
tm=0;
tb=0;
tn=0;
mt=0;
mm=0;
mb=0;
mn=0;
bt=0;
bm=0;
bb=0;
bn=0;
nt=0;
nm=0;
nb=0;
nn=0;
/*top*/
if top_dummy=1 and top_dummy_mec=1 then tt=1;
if top_dummy=1 and mellem_dummy_mec=1 then tm=1;
if top_dummy=1 and bund_dummy_mec=1 then tb=1;
if top_dummy=1 and notax_dummy_mec=1 then tn=1;
/*mellem*/
if mellem_dummy=1 and top_dummy_mec=1 then mt=1;
if mellem_dummy=1 and mellem_dummy_mec=1 then mm=1;
if mellem_dummy=1 and bund_dummy_mec=1 then mb=1;
if mellem_dummy=1 and notax_dummy_mec=1 then mn=1;
/*bund*/
if bund_dummy=1 and top_dummy_mec=1 then bt=1;
if bund_dummy=1 and mellem_dummy_mec=1 then bm=1;
if bund_dummy=1 and bund_dummy_mec=1 then bb=1;
if bund_dummy=1 and notax_dummy_mec=1 then bn=1;
/*notax*/
if notax_dummy=1 and bund_dummy_mec=1 then nb=1;
if notax_dummy=1 and notax_dummy_mec=1 then nn=1;
if notax_dummy=1 and mellem_dummy_mec=1 then nm=1;
if notax_dummy=1 and top_dummy_mec=1 then nt=1;
if exp=. then exp=0;
if omfskpl=0 then spligt1990=1; else spligt1990=0;
bkink=nybundinc*inflation1990_2005;
mkink=nymelleminc*inflation1990_2005;
tkink=nytopinc*inflation1990_2005;
per_1990=per*inflation1990_2005;
cap_1990=cap*inflation1990_2005;
dec_1990=dec*inflation1990_2005;
ear_1990=ear*inflation1990_2005;
per_income_1990=per_income*inflation1990_2005;
c_per_income_1990=c_per_income*inflation1990_2005;
c_per_1990=c_per*inflation1990_2005;
c_cap_1990=c_cap*inflation1990_2005;
c_dec_1990=c_dec*inflation1990_2005;
c_ear_1990=c_ear*inflation1990_2005;
virtuelindk_i_1990=virtuelindk_i*inflation1990_2005;
virtuelindk_h1_1990=virtuelindk_h1*inflation1990_2005;
virtuelindk_h2_1990=virtuelindk_h2*inflation1990_2005;
virtuelindk_i_mec1990=virtuelindk_i_mec*inflation1993_2005;
virtuelindk_h1_mec1990=virtuelindk_h1_mec*inflation1993_2005;
virtuelindk_h2_mec1990=virtuelindk_h2_mec*inflation1993_2005;
tax1_1990=tax1*inflation1990_2005;
c_tax1_1990=c_tax1*inflation1990_2005;
h_tax1_1990=h_tax1*inflation1990_2005;
rename tau_arb_i=tau_arb_i1990 
       tau_apers_i=tau_apers_i1990
       tau_kap_i=tau_kap_i1990
	   tau_frad_i=tau_frad_i1990
	   tau_arb_h=tau_arb_h1990 
       tau_apers_h=tau_apers_h1990
       tau_kap_h=tau_kap_h1990
	   tau_frad_h=tau_frad_h1990
	   c_tau_arb_i=c_tau_arb_i1990 
       c_tau_apers_i=c_tau_apers_i1990
       c_tau_kap_i=c_tau_kap_i1990
	   c_tau_frad_i=c_tau_frad_i1990
	   c_tau_arb_h=c_tau_arb_h1990 
       c_tau_apers_h=c_tau_apers_h1990
       c_tau_kap_h=c_tau_kap_h1990
	   c_tau_frad_h=c_tau_frad_h1990
	   tau_arb_i_mec=tau_arb_i_mec1990 
       tau_apers_i_mec=tau_apers_i_mec1990
       tau_kap_i_mec=tau_kap_i_mec1990
	   tau_frad_i_mec=tau_frad_i_mec1990
	   tau_arb_h_mec=tau_arb_h_mec1990 
       tau_apers_h_mec=tau_apers_h_mec1990
       tau_kap_h_mec=tau_kap_h_mec1990
	   tau_frad_h_mec=tau_frad_h_mec1990
	   c_tau_arb_i_mec=c_tau_arb_i_mec1990 
       c_tau_apers_i_mec=c_tau_apers_i_mec1990
       c_tau_kap_i_mec=c_tau_kap_i_mec1990
	   c_tau_frad_i_mec=c_tau_frad_i_mec1990
	   c_tau_arb_h_mec=c_tau_arb_h_mec1990 
       c_tau_apers_h_mec=c_tau_apers_h_mec1990
       c_tau_kap_h_mec=c_tau_kap_h_mec1990
	   c_tau_frad_h_mec=c_tau_frad_h_mec1990
	   tau_akt_h=tau_akt_h1990
	   c_tau_akt_h=c_tau_akt_h1990
	   tau_akt_h_mec=tau_akt_h_mec1990
	   c_tau_akt_h_mec=c_tau_akt_h_mec1990
      
       bdagp=bdagp1990
       qoffpens=qoffpens1990
       arblhu=arblhu1990
       adagp=adagp1990
       stip=stip1990
       /*gift=gift1990*/
       qsocyd=qsocyd1990;
if a=1 and b=1 and c=1;
run;


proc datasets library=work; delete ska1990 k g skat1993_indkomst1990; 
run;



Proc sort data=bif.skat1991; by pnr; run;
Proc sort data=bif.skat1994_Indkomst1991; by pnr; run;
Proc sort data=skat2.skat_indk1991; by pnr; run;

data skat1994_indkomst1991;
set bif.skat1994_indkomst1991
(keep=pnr tau_arb_i tau_apers_i tau_kap_i tau_frad_i tau_arb_h tau_apers_h tau_kap_h
tau_frad_h c_tau_arb_i c_tau_apers_i c_tau_kap_i c_tau_frad_i c_tau_arb_h c_tau_apers_h
c_tau_kap_h c_tau_frad_h tau_akt_h c_tau_akt_h virtuelindk_i virtuelindk_h1 virtuelindk_h2 
top_dummy mellem_dummy bund_dummy notax_dummy);
rename
tau_arb_i=tau_arb_i_mec
tau_apers_i=tau_apers_i_mec
tau_kap_i=tau_kap_i_mec
tau_frad_i=tau_frad_i_mec
tau_arb_h=tau_arb_h_mec
tau_apers_h=tau_apers_h_mec
tau_kap_h=tau_kap_h_mec
tau_frad_h=tau_frad_h_mec
tau_akt_h=tau_akt_h_mec
c_tau_arb_i=c_tau_arb_i_mec 
c_tau_apers_i=c_tau_apers_i_mec
c_tau_kap_i=c_tau_kap_i_mec
c_tau_frad_i=c_tau_frad_i_mec
c_tau_arb_h=c_tau_arb_h_mec
c_tau_apers_h=c_tau_apers_h_mec
c_tau_kap_h=c_tau_kap_h_mec
c_tau_frad_h=c_tau_frad_h_mec
c_tau_akt_h=c_tau_akt_h_mec
virtuelindk_i=virtuelindk_i_mec
virtuelindk_h1=virtuelindk_h1_mec 
virtuelindk_h2=virtuelindk_h2_mec top_dummy=top_dummy_mec mellem_dummy=mellem_dummy_mec bund_dummy=bund_dummy_mec notax_dummy=notax_dummy_mec;
run;


data ska1991;
merge bif.skat1991(in=a) skat1994_Indkomst1991 (in=b) 
 skat2.skat_indk1991(keep=pnr omfskpl in=d);
by pnr;
if a=1 and b=1 and d=1;
run;

data k(keep=year inflation1991_2005);
set bif2.inflation(where=(infl1991_2005=1));
inflation1991_2005=inflation;
run;

data g(keep=year inflation1994_2005);
set bif2.inflation(where=(infl1994_2005=1));
inflation1994_2005=inflation;
year=1991;
run;

data skat1991(drop=per cap dec ear c_per c_cap c_dec c_ear per_income c_per_income  virtuelindk_i virtuelindk_h1
virtuelindk_h2 tax1-tax9 c_tax1-c_tax9 h_tax1-h_tax9 x c_arbindk c_kapindk c_apersindk 
c_lignfrad c_qsocyd nybundinc nymelleminc nytopinc);
merge ska1991(in=a) k(in=b) g(in=c);
by year;
tt=0;
tm=0;
tb=0;
tn=0;
mt=0;
mm=0;
mb=0;
mn=0;
bt=0;
bm=0;
bb=0;
bn=0;
nt=0;
nm=0;
nb=0;
nn=0;
/*top*/
if top_dummy=1 and top_dummy_mec=1 then tt=1;
if top_dummy=1 and mellem_dummy_mec=1 then tm=1;
if top_dummy=1 and bund_dummy_mec=1 then tb=1;
if top_dummy=1 and notax_dummy_mec=1 then tn=1;
/*mellem*/
if mellem_dummy=1 and top_dummy_mec=1 then mt=1;
if mellem_dummy=1 and mellem_dummy_mec=1 then mm=1;
if mellem_dummy=1 and bund_dummy_mec=1 then mb=1;
if mellem_dummy=1 and notax_dummy_mec=1 then mn=1;
/*bund*/
if bund_dummy=1 and top_dummy_mec=1 then bt=1;
if bund_dummy=1 and mellem_dummy_mec=1 then bm=1;
if bund_dummy=1 and bund_dummy_mec=1 then bb=1;
if bund_dummy=1 and notax_dummy_mec=1 then bn=1;
/*notax*/
if notax_dummy=1 and bund_dummy_mec=1 then nb=1;
if notax_dummy=1 and notax_dummy_mec=1 then nn=1;
if notax_dummy=1 and mellem_dummy_mec=1 then nm=1;
if notax_dummy=1 and top_dummy_mec=1 then nt=1;
if exp=. then exp=0;
if omfskpl=0 then spligt1991=1; else spligt1991=0;
bkink=nybundinc*inflation1991_2005;
mkink=nymelleminc*inflation1991_2005;
tkink=nytopinc*inflation1991_2005;
per_1991=per*inflation1991_2005;
cap_1991=cap*inflation1991_2005;
dec_1991=dec*inflation1991_2005;
ear_1991=ear*inflation1991_2005;
per_income_1991=per_income*inflation1991_2005;
c_per_income_1991=c_per_income*inflation1991_2005;
c_per_1991=c_per*inflation1991_2005;
c_cap_1991=c_cap*inflation1991_2005;
c_dec_1991=c_dec*inflation1991_2005;
c_ear_1991=c_ear*inflation1991_2005;
virtuelindk_i_1991=virtuelindk_i*inflation1991_2005;
virtuelindk_h1_1991=virtuelindk_h1*inflation1991_2005;
virtuelindk_h2_1991=virtuelindk_h2*inflation1991_2005;
virtuelindk_i_mec1991=virtuelindk_i_mec*inflation1994_2005;
virtuelindk_h1_mec1991=virtuelindk_h1_mec*inflation1994_2005;
virtuelindk_h2_mec1991=virtuelindk_h2_mec*inflation1994_2005;
tax1_1991=tax1*inflation1991_2005;
c_tax1_1991=c_tax1*inflation1991_2005;
h_tax1_1991=h_tax1*inflation1991_2005;
akt_1991=aktind*inflation1991_2005;
c_akt_1991=c_aktind*inflation1991_2005;
rename tau_arb_i=tau_arb_i1991 
       tau_apers_i=tau_apers_i1991
       tau_kap_i=tau_kap_i1991
	   tau_frad_i=tau_frad_i1991
	   tau_arb_h=tau_arb_h1991 
       tau_apers_h=tau_apers_h1991
       tau_kap_h=tau_kap_h1991
	   tau_frad_h=tau_frad_h1991
	   c_tau_arb_i=c_tau_arb_i1991 
       c_tau_apers_i=c_tau_apers_i1991
       c_tau_kap_i=c_tau_kap_i1991
	   c_tau_frad_i=c_tau_frad_i1991
	   c_tau_arb_h=c_tau_arb_h1991 
       c_tau_apers_h=c_tau_apers_h1991
       c_tau_kap_h=c_tau_kap_h1991
	   c_tau_frad_h=c_tau_frad_h1991
	   tau_arb_i_mec=tau_arb_i_mec1991 
       tau_apers_i_mec=tau_apers_i_mec1991
       tau_kap_i_mec=tau_kap_i_mec1991
	   tau_frad_i_mec=tau_frad_i_mec1991
	   tau_arb_h_mec=tau_arb_h_mec1991 
       tau_apers_h_mec=tau_apers_h_mec1991
       tau_kap_h_mec=tau_kap_h_mec1991
	   tau_frad_h_mec=tau_frad_h_mec1991
	   c_tau_arb_i_mec=c_tau_arb_i_mec1991 
       c_tau_apers_i_mec=c_tau_apers_i_mec1991
       c_tau_kap_i_mec=c_tau_kap_i_mec1991
	   c_tau_frad_i_mec=c_tau_frad_i_mec1991
	   c_tau_arb_h_mec=c_tau_arb_h_mec1991 
       c_tau_apers_h_mec=c_tau_apers_h_mec1991
       c_tau_kap_h_mec=c_tau_kap_h_mec1991
	   c_tau_frad_h_mec=c_tau_frad_h_mec1991
	    tau_akt_h=tau_akt_h1991
	   c_tau_akt_h=c_tau_akt_h1991
	   tau_akt_h_mec=tau_akt_h_mec1991
	   c_tau_akt_h_mec=c_tau_akt_h_mec1991
       
       bdagp=bdagp1991
       qoffpens=qoffpens1991
       arblhu=arblhu1991
       adagp=adagp1991
       stip=stip1991
       /*gift=gift1991*/
       qsocyd=qsocyd1991;
if a=1 and b=1 and c=1;
run;


proc datasets library=work; delete ska1991 k g skat1994_indkomst1991; 
run;

Proc sort data=bif.skat1992; by pnr; run;
Proc sort data=bif.skat1995_Indkomst1992; by pnr; run;
Proc sort data=skat2.skat_indk1992; by pnr; run;

data skat1995_indkomst1992;
set bif.skat1995_indkomst1992
(keep=pnr tau_arb_i tau_apers_i tau_kap_i tau_frad_i tau_arb_h tau_apers_h tau_kap_h
tau_frad_h c_tau_arb_i c_tau_apers_i c_tau_kap_i c_tau_frad_i c_tau_arb_h c_tau_apers_h
c_tau_kap_h c_tau_frad_h tau_akt_h c_tau_akt_h virtuelindk_i virtuelindk_h1 virtuelindk_h2 
top_dummy mellem_dummy bund_dummy notax_dummy);
rename
tau_arb_i=tau_arb_i_mec
tau_apers_i=tau_apers_i_mec
tau_kap_i=tau_kap_i_mec
tau_frad_i=tau_frad_i_mec
tau_arb_h=tau_arb_h_mec
tau_apers_h=tau_apers_h_mec
tau_kap_h=tau_kap_h_mec
tau_frad_h=tau_frad_h_mec
tau_akt_h=tau_akt_h_mec
c_tau_arb_i=c_tau_arb_i_mec 
c_tau_apers_i=c_tau_apers_i_mec
c_tau_kap_i=c_tau_kap_i_mec
c_tau_frad_i=c_tau_frad_i_mec
c_tau_arb_h=c_tau_arb_h_mec
c_tau_apers_h=c_tau_apers_h_mec
c_tau_kap_h=c_tau_kap_h_mec
c_tau_frad_h=c_tau_frad_h_mec
c_tau_akt_h=c_tau_akt_h_mec
virtuelindk_i=virtuelindk_i_mec
virtuelindk_h1=virtuelindk_h1_mec 
virtuelindk_h2=virtuelindk_h2_mec top_dummy=top_dummy_mec mellem_dummy=mellem_dummy_mec bund_dummy=bund_dummy_mec notax_dummy=notax_dummy_mec;
run;

data ska1992;
merge bif.skat1992(in=a) skat1995_Indkomst1992 (in=b) 
 skat2.skat_indk1992(keep=pnr omfskpl in=d);
by pnr;
if a=1 and b=1 and d=1;
run;

data k(keep=year inflation1992_2005);
set bif2.inflation(where=(infl1992_2005=1));
inflation1992_2005=inflation;
run;

data g(keep=year inflation1995_2005);
set bif2.inflation(where=(infl1995_2005=1));
inflation1995_2005=inflation;
year=1992;
run;

data skat1992(drop=per cap dec ear c_per c_cap c_dec c_ear per_income c_per_income  virtuelindk_i virtuelindk_h1
virtuelindk_h2 tax1-tax9 c_tax1-c_tax9 h_tax1-h_tax9 x c_arbindk c_kapindk c_apersindk 
c_lignfrad c_qsocyd nybundinc nymelleminc nytopinc);
merge ska1992(in=a) k(in=b) g(in=c);
by year;
tt=0;
tm=0;
tb=0;
tn=0;
mt=0;
mm=0;
mb=0;
mn=0;
bt=0;
bm=0;
bb=0;
bn=0;
nt=0;
nm=0;
nb=0;
nn=0;
/*top*/
if top_dummy=1 and top_dummy_mec=1 then tt=1;
if top_dummy=1 and mellem_dummy_mec=1 then tm=1;
if top_dummy=1 and bund_dummy_mec=1 then tb=1;
if top_dummy=1 and notax_dummy_mec=1 then tn=1;
/*mellem*/
if mellem_dummy=1 and top_dummy_mec=1 then mt=1;
if mellem_dummy=1 and mellem_dummy_mec=1 then mm=1;
if mellem_dummy=1 and bund_dummy_mec=1 then mb=1;
if mellem_dummy=1 and notax_dummy_mec=1 then mn=1;
/*bund*/
if bund_dummy=1 and top_dummy_mec=1 then bt=1;
if bund_dummy=1 and mellem_dummy_mec=1 then bm=1;
if bund_dummy=1 and bund_dummy_mec=1 then bb=1;
if bund_dummy=1 and notax_dummy_mec=1 then bn=1;
/*notax*/
if notax_dummy=1 and bund_dummy_mec=1 then nb=1;
if notax_dummy=1 and notax_dummy_mec=1 then nn=1;
if notax_dummy=1 and mellem_dummy_mec=1 then nm=1;
if notax_dummy=1 and top_dummy_mec=1 then nt=1;
if exp=. then exp=0;
if omfskpl=0 then spligt1992=1; else spligt1992=0;
bkink=nybundinc*inflation1992_2005;
mkink=nymelleminc*inflation1992_2005;
tkink=nytopinc*inflation1992_2005;
per_1992=per*inflation1992_2005;
cap_1992=cap*inflation1992_2005;
dec_1992=dec*inflation1992_2005;
ear_1992=ear*inflation1992_2005;
per_income_1992=per_income*inflation1992_2005;
c_per_income_1992=c_per_income*inflation1992_2005;
c_per_1992=c_per*inflation1992_2005;
c_cap_1992=c_cap*inflation1992_2005;
c_dec_1992=c_dec*inflation1992_2005;
c_ear_1992=c_ear*inflation1992_2005;
virtuelindk_i_1992=virtuelindk_i*inflation1992_2005;
virtuelindk_h1_1992=virtuelindk_h1*inflation1992_2005;
virtuelindk_h2_1992=virtuelindk_h2*inflation1992_2005;
virtuelindk_i_mec1992=virtuelindk_i_mec*inflation1995_2005;
virtuelindk_h1_mec1992=virtuelindk_h1_mec*inflation1995_2005;
virtuelindk_h2_mec1992=virtuelindk_h2_mec*inflation1995_2005;
tax1_1992=tax1*inflation1992_2005;
c_tax1_1992=c_tax1*inflation1992_2005;
h_tax1_1992=h_tax1*inflation1992_2005;
akt_1992=aktind*inflation1992_2005;
c_akt_1992=c_aktind*inflation1992_2005;
rename tau_arb_i=tau_arb_i1992 
       tau_apers_i=tau_apers_i1992
       tau_kap_i=tau_kap_i1992
	   tau_frad_i=tau_frad_i1992
	   tau_arb_h=tau_arb_h1992 
       tau_apers_h=tau_apers_h1992
       tau_kap_h=tau_kap_h1992
	   tau_frad_h=tau_frad_h1992
	   c_tau_arb_i=c_tau_arb_i1992 
       c_tau_apers_i=c_tau_apers_i1992
       c_tau_kap_i=c_tau_kap_i1992
	   c_tau_frad_i=c_tau_frad_i1992
	   c_tau_arb_h=c_tau_arb_h1992 
       c_tau_apers_h=c_tau_apers_h1992
       c_tau_kap_h=c_tau_kap_h1992
	   c_tau_frad_h=c_tau_frad_h1992
	   tau_arb_i_mec=tau_arb_i_mec1992 
       tau_apers_i_mec=tau_apers_i_mec1992
       tau_kap_i_mec=tau_kap_i_mec1992
	   tau_frad_i_mec=tau_frad_i_mec1992
	   tau_arb_h_mec=tau_arb_h_mec1992 
       tau_apers_h_mec=tau_apers_h_mec1992
       tau_kap_h_mec=tau_kap_h_mec1992
	   tau_frad_h_mec=tau_frad_h_mec1992
	   c_tau_arb_i_mec=c_tau_arb_i_mec1992 
       c_tau_apers_i_mec=c_tau_apers_i_mec1992
       c_tau_kap_i_mec=c_tau_kap_i_mec1992
	   c_tau_frad_i_mec=c_tau_frad_i_mec1992
	   c_tau_arb_h_mec=c_tau_arb_h_mec1992 
       c_tau_apers_h_mec=c_tau_apers_h_mec1992
       c_tau_kap_h_mec=c_tau_kap_h_mec1992
	   c_tau_frad_h_mec=c_tau_frad_h_mec1992
	    tau_akt_h=tau_akt_h1992
	   c_tau_akt_h=c_tau_akt_h1992
	   tau_akt_h_mec=tau_akt_h_mec1992
	   c_tau_akt_h_mec=c_tau_akt_h_mec1992
       
       bdagp=bdagp1992
       qoffpens=qoffpens1992
       arblhu=arblhu1992
       adagp=adagp1992
       stip=stip1992
      /* gift=gift1992*/
       qsocyd=qsocyd1992;
if a=1 and b=1 and c=1;
run;


proc datasets library=work; delete ska1992 k g skat1995_indkomst1992; 
run;


Proc sort data=bif.skat1993; by pnr; run;
Proc sort data=bif.skat1996_Indkomst1993; by pnr; run;
Proc sort data=skat2.skat_indk1993; by pnr; run;

data skat1996_indkomst1993;
set bif.skat1996_indkomst1993
(keep=pnr tau_arb_i tau_apers_i tau_kap_i tau_frad_i tau_arb_h tau_apers_h tau_kap_h
tau_frad_h c_tau_arb_i c_tau_apers_i c_tau_kap_i c_tau_frad_i c_tau_arb_h c_tau_apers_h
c_tau_kap_h c_tau_frad_h tau_akt_h c_tau_akt_h virtuelindk_i virtuelindk_h1 virtuelindk_h2 
top_dummy mellem_dummy bund_dummy notax_dummy);
rename
tau_arb_i=tau_arb_i_mec
tau_apers_i=tau_apers_i_mec
tau_kap_i=tau_kap_i_mec
tau_frad_i=tau_frad_i_mec
tau_arb_h=tau_arb_h_mec
tau_apers_h=tau_apers_h_mec
tau_kap_h=tau_kap_h_mec
tau_frad_h=tau_frad_h_mec
tau_akt_h=tau_akt_h_mec
c_tau_arb_i=c_tau_arb_i_mec 
c_tau_apers_i=c_tau_apers_i_mec
c_tau_kap_i=c_tau_kap_i_mec
c_tau_frad_i=c_tau_frad_i_mec
c_tau_arb_h=c_tau_arb_h_mec
c_tau_apers_h=c_tau_apers_h_mec
c_tau_kap_h=c_tau_kap_h_mec
c_tau_frad_h=c_tau_frad_h_mec
c_tau_akt_h=c_tau_akt_h_mec
virtuelindk_i=virtuelindk_i_mec
virtuelindk_h1=virtuelindk_h1_mec 
virtuelindk_h2=virtuelindk_h2_mec top_dummy=top_dummy_mec mellem_dummy=mellem_dummy_mec bund_dummy=bund_dummy_mec notax_dummy=notax_dummy_mec;
run;

data ska1993;
merge bif.skat1993(in=a) skat1996_Indkomst1993 (in=b) 
 skat2.skat_indk1993(keep=pnr omfskpl in=d);
by pnr;
if a=1 and b=1 and d=1;
run;

data k(keep=year inflation1993_2005);
set bif2.inflation(where=(infl1993_2005=1));
inflation1993_2005=inflation;
run;

data g(keep=year inflation1996_2005);
set bif2.inflation(where=(infl1996_2005=1));
inflation1996_2005=inflation;
year=1993;
run;

data skat1993(drop=per cap dec ear c_per c_cap c_dec c_ear per_income c_per_income  virtuelindk_i virtuelindk_h1
virtuelindk_h2 tax1-tax9 c_tax1-c_tax9 h_tax1-h_tax9 x c_arbindk c_kapindk c_apersindk 
c_lignfrad c_qsocyd nybundinc nymelleminc nytopinc);
merge ska1993(in=a) k(in=b) g(in=c);
by year;
tt=0;
tm=0;
tb=0;
tn=0;
mt=0;
mm=0;
mb=0;
mn=0;
bt=0;
bm=0;
bb=0;
bn=0;
nt=0;
nm=0;
nb=0;
nn=0;
/*top*/
if top_dummy=1 and top_dummy_mec=1 then tt=1;
if top_dummy=1 and mellem_dummy_mec=1 then tm=1;
if top_dummy=1 and bund_dummy_mec=1 then tb=1;
if top_dummy=1 and notax_dummy_mec=1 then tn=1;
/*mellem*/
if mellem_dummy=1 and top_dummy_mec=1 then mt=1;
if mellem_dummy=1 and mellem_dummy_mec=1 then mm=1;
if mellem_dummy=1 and bund_dummy_mec=1 then mb=1;
if mellem_dummy=1 and notax_dummy_mec=1 then mn=1;
/*bund*/
if bund_dummy=1 and top_dummy_mec=1 then bt=1;
if bund_dummy=1 and mellem_dummy_mec=1 then bm=1;
if bund_dummy=1 and bund_dummy_mec=1 then bb=1;
if bund_dummy=1 and notax_dummy_mec=1 then bn=1;
/*notax*/
if notax_dummy=1 and bund_dummy_mec=1 then nb=1;
if notax_dummy=1 and notax_dummy_mec=1 then nn=1;
if notax_dummy=1 and mellem_dummy_mec=1 then nm=1;
if notax_dummy=1 and top_dummy_mec=1 then nt=1;
if exp=. then exp=0;
if omfskpl=0 then spligt1993=1; else spligt1993=0;
bkink=nybundinc*inflation1993_2005;
mkink=nymelleminc*inflation1993_2005;
tkink=nytopinc*inflation1993_2005;
per_1993=per*inflation1993_2005;
cap_1993=cap*inflation1993_2005;
dec_1993=dec*inflation1993_2005;
ear_1993=ear*inflation1993_2005;
per_income_1993=per_income*inflation1993_2005;
c_per_income_1993=c_per_income*inflation1993_2005;
c_per_1993=c_per*inflation1993_2005;
c_cap_1993=c_cap*inflation1993_2005;
c_dec_1993=c_dec*inflation1993_2005;
c_ear_1993=c_ear*inflation1993_2005;
virtuelindk_i_1993=virtuelindk_i*inflation1993_2005;
virtuelindk_h1_1993=virtuelindk_h1*inflation1993_2005;
virtuelindk_h2_1993=virtuelindk_h2*inflation1993_2005;
virtuelindk_i_mec1993=virtuelindk_i_mec*inflation1996_2005;
virtuelindk_h1_mec1993=virtuelindk_h1_mec*inflation1996_2005;
virtuelindk_h2_mec1993=virtuelindk_h2_mec*inflation1996_2005;
tax1_1993=tax1*inflation1993_2005;
c_tax1_1993=c_tax1*inflation1993_2005;
h_tax1_1993=h_tax1*inflation1993_2005;
akt_1993=aktind*inflation1993_2005;
c_akt_1993=c_aktind*inflation1993_2005;
rename tau_arb_i=tau_arb_i1993 
       tau_apers_i=tau_apers_i1993
       tau_kap_i=tau_kap_i1993
	   tau_frad_i=tau_frad_i1993
	   tau_arb_h=tau_arb_h1993 
       tau_apers_h=tau_apers_h1993
       tau_kap_h=tau_kap_h1993
	   tau_frad_h=tau_frad_h1993
	   c_tau_arb_i=c_tau_arb_i1993 
       c_tau_apers_i=c_tau_apers_i1993
       c_tau_kap_i=c_tau_kap_i1993
	   c_tau_frad_i=c_tau_frad_i1993
	   c_tau_arb_h=c_tau_arb_h1993 
       c_tau_apers_h=c_tau_apers_h1993
       c_tau_kap_h=c_tau_kap_h1993
	   c_tau_frad_h=c_tau_frad_h1993
	   tau_arb_i_mec=tau_arb_i_mec1993 
       tau_apers_i_mec=tau_apers_i_mec1993
       tau_kap_i_mec=tau_kap_i_mec1993
	   tau_frad_i_mec=tau_frad_i_mec1993
	   tau_arb_h_mec=tau_arb_h_mec1993 
       tau_apers_h_mec=tau_apers_h_mec1993
       tau_kap_h_mec=tau_kap_h_mec1993
	   tau_frad_h_mec=tau_frad_h_mec1993
	   c_tau_arb_i_mec=c_tau_arb_i_mec1993 
       c_tau_apers_i_mec=c_tau_apers_i_mec1993
       c_tau_kap_i_mec=c_tau_kap_i_mec1993
	   c_tau_frad_i_mec=c_tau_frad_i_mec1993
	   c_tau_arb_h_mec=c_tau_arb_h_mec1993 
       c_tau_apers_h_mec=c_tau_apers_h_mec1993
       c_tau_kap_h_mec=c_tau_kap_h_mec1993
	   c_tau_frad_h_mec=c_tau_frad_h_mec1993
	    tau_akt_h=tau_akt_h1993
	   c_tau_akt_h=c_tau_akt_h1993
	   tau_akt_h_mec=tau_akt_h_mec1993
	   c_tau_akt_h_mec=c_tau_akt_h_mec1993
     
       bdagp=bdagp1993
       qoffpens=qoffpens1993
       arblhu=arblhu1993
       adagp=adagp1993
       stip=stip1993
       /*gift=gift1993*/
       qsocyd=qsocyd1993;
if a=1 and b=1 and c=1;
run;


proc datasets library=work; delete ska1993 k g skat1996_indkomst1993; 
run;


Proc sort data=bif.skat1994; by pnr; run;
Proc sort data=bif.skat1997_Indkomst1994; by pnr; run;
Proc sort data=skat2.skat_indk1994; by pnr; run;

data skat1997_indkomst1994;
set bif.skat1997_indkomst1994
(keep=pnr tau_arb_i tau_apers_i tau_kap_i tau_frad_i tau_arb_h tau_apers_h tau_kap_h
tau_frad_h c_tau_arb_i c_tau_apers_i c_tau_kap_i c_tau_frad_i c_tau_arb_h c_tau_apers_h
c_tau_kap_h c_tau_frad_h tau_akt_h c_tau_akt_h virtuelindk_i virtuelindk_h1 virtuelindk_h2 
top_dummy mellem_dummy bund_dummy notax_dummy);
rename
tau_arb_i=tau_arb_i_mec
tau_apers_i=tau_apers_i_mec
tau_kap_i=tau_kap_i_mec
tau_frad_i=tau_frad_i_mec
tau_arb_h=tau_arb_h_mec
tau_apers_h=tau_apers_h_mec
tau_kap_h=tau_kap_h_mec
tau_frad_h=tau_frad_h_mec
tau_akt_h=tau_akt_h_mec
c_tau_arb_i=c_tau_arb_i_mec 
c_tau_apers_i=c_tau_apers_i_mec
c_tau_kap_i=c_tau_kap_i_mec
c_tau_frad_i=c_tau_frad_i_mec
c_tau_arb_h=c_tau_arb_h_mec
c_tau_apers_h=c_tau_apers_h_mec
c_tau_kap_h=c_tau_kap_h_mec
c_tau_frad_h=c_tau_frad_h_mec
c_tau_akt_h=c_tau_akt_h_mec
virtuelindk_i=virtuelindk_i_mec
virtuelindk_h1=virtuelindk_h1_mec 
virtuelindk_h2=virtuelindk_h2_mec top_dummy=top_dummy_mec mellem_dummy=mellem_dummy_mec bund_dummy=bund_dummy_mec notax_dummy=notax_dummy_mec;
run;

data ska1994;
merge bif.skat1994(in=a) skat1997_Indkomst1994 (in=b) 
 skat2.skat_indk1994(keep=pnr omfskpl in=d);
by pnr;
if a=1 and b=1 and d=1;
run;

data k(keep=year inflation1994_2005);
set bif2.inflation(where=(infl1994_2005=1));
inflation1994_2005=inflation;
run;

data g(keep=year inflation1997_2005);
set bif2.inflation(where=(infl1997_2005=1));
inflation1997_2005=inflation;
year=1994;
run;

data skat1994(drop=per cap dec ear c_per c_cap c_dec c_ear per_income c_per_income  virtuelindk_i virtuelindk_h1
virtuelindk_h2 tax1-tax9 c_tax1-c_tax9 h_tax1-h_tax9 x c_arbindk c_kapindk c_apersindk 
c_lignfrad nybundinc nymelleminc nytopinc);
merge ska1994(in=a) k(in=b) g(in=c);
by year;
tt=0;
tm=0;
tb=0;
tn=0;
mt=0;
mm=0;
mb=0;
mn=0;
bt=0;
bm=0;
bb=0;
bn=0;
nt=0;
nm=0;
nb=0;
nn=0;
/*top*/
if top_dummy=1 and top_dummy_mec=1 then tt=1;
if top_dummy=1 and mellem_dummy_mec=1 then tm=1;
if top_dummy=1 and bund_dummy_mec=1 then tb=1;
if top_dummy=1 and notax_dummy_mec=1 then tn=1;
/*mellem*/
if mellem_dummy=1 and top_dummy_mec=1 then mt=1;
if mellem_dummy=1 and mellem_dummy_mec=1 then mm=1;
if mellem_dummy=1 and bund_dummy_mec=1 then mb=1;
if mellem_dummy=1 and notax_dummy_mec=1 then mn=1;
/*bund*/
if bund_dummy=1 and top_dummy_mec=1 then bt=1;
if bund_dummy=1 and mellem_dummy_mec=1 then bm=1;
if bund_dummy=1 and bund_dummy_mec=1 then bb=1;
if bund_dummy=1 and notax_dummy_mec=1 then bn=1;
/*notax*/
if notax_dummy=1 and bund_dummy_mec=1 then nb=1;
if notax_dummy=1 and notax_dummy_mec=1 then nn=1;
if notax_dummy=1 and mellem_dummy_mec=1 then nm=1;
if notax_dummy=1 and top_dummy_mec=1 then nt=1;
if exp=. then exp=0;
if omfskpl=0 then spligt1994=1; else spligt1994=0;
bkink=nybundinc*inflation1994_2005;
mkink=nymelleminc*inflation1994_2005;
tkink=nytopinc*inflation1994_2005;
per_1994=per*inflation1994_2005;
cap_1994=cap*inflation1994_2005;
dec_1994=dec*inflation1994_2005;
ear_1994=ear*inflation1994_2005;
per_income_1994=per_income*inflation1994_2005;
c_per_income_1994=c_per_income*inflation1994_2005;
c_per_1994=c_per*inflation1994_2005;
c_cap_1994=c_cap*inflation1994_2005;
c_dec_1994=c_dec*inflation1994_2005;
c_ear_1994=c_ear*inflation1994_2005;
virtuelindk_i_1994=virtuelindk_i*inflation1994_2005;
virtuelindk_h1_1994=virtuelindk_h1*inflation1994_2005;
virtuelindk_h2_1994=virtuelindk_h2*inflation1994_2005;
virtuelindk_i_mec1994=virtuelindk_i_mec*inflation1997_2005;
virtuelindk_h1_mec1994=virtuelindk_h1_mec*inflation1997_2005;
virtuelindk_h2_mec1994=virtuelindk_h2_mec*inflation1997_2005;
tax1_1994=tax1*inflation1994_2005;
c_tax1_1994=c_tax1*inflation1994_2005;
h_tax1_1994=h_tax1*inflation1994_2005;
akt_1994=aktind*inflation1994_2005;
c_akt_1994=c_aktind*inflation1994_2005;
rename tau_arb_i=tau_arb_i1994 
       tau_apers_i=tau_apers_i1994
       tau_kap_i=tau_kap_i1994
	   tau_frad_i=tau_frad_i1994
	   tau_arb_h=tau_arb_h1994 
       tau_apers_h=tau_apers_h1994
       tau_kap_h=tau_kap_h1994
	   tau_frad_h=tau_frad_h1994
	   c_tau_arb_i=c_tau_arb_i1994 
       c_tau_apers_i=c_tau_apers_i1994
       c_tau_kap_i=c_tau_kap_i1994
	   c_tau_frad_i=c_tau_frad_i1994
	   c_tau_arb_h=c_tau_arb_h1994 
       c_tau_apers_h=c_tau_apers_h1994
       c_tau_kap_h=c_tau_kap_h1994
	   c_tau_frad_h=c_tau_frad_h1994
	   tau_arb_i_mec=tau_arb_i_mec1994 
       tau_apers_i_mec=tau_apers_i_mec1994
       tau_kap_i_mec=tau_kap_i_mec1994
	   tau_frad_i_mec=tau_frad_i_mec1994
	   tau_arb_h_mec=tau_arb_h_mec1994 
       tau_apers_h_mec=tau_apers_h_mec1994
       tau_kap_h_mec=tau_kap_h_mec1994
	   tau_frad_h_mec=tau_frad_h_mec1994
	   c_tau_arb_i_mec=c_tau_arb_i_mec1994 
       c_tau_apers_i_mec=c_tau_apers_i_mec1994
       c_tau_kap_i_mec=c_tau_kap_i_mec1994
	   c_tau_frad_i_mec=c_tau_frad_i_mec1994
	   c_tau_arb_h_mec=c_tau_arb_h_mec1994 
       c_tau_apers_h_mec=c_tau_apers_h_mec1994
       c_tau_kap_h_mec=c_tau_kap_h_mec1994
	   c_tau_frad_h_mec=c_tau_frad_h_mec1994
	    tau_akt_h=tau_akt_h1994
	   c_tau_akt_h=c_tau_akt_h1994
	   tau_akt_h_mec=tau_akt_h_mec1994
	   c_tau_akt_h_mec=c_tau_akt_h_mec1994
     
       bdagp=bdagp1994
       qoffpens=qoffpens1994
       arblhu=arblhu1994
       adagp=adagp1994
       stip=stip1994
       /*gift=gift1994*/
       konthj=konthj1994
       reval=reval1994;
if a=1 and b=1 and c=1;
run;


proc datasets library=work; delete ska1994 k g skat1997_indkomst1994; 
run;


Proc sort data=bif.skat1995; by pnr; run;
Proc sort data=bif.skat1998_Indkomst1995; by pnr; run;
Proc sort data=skat2.skat_indk1995; by pnr; run;

data skat1998_indkomst1995;
set bif.skat1998_indkomst1995
(keep=pnr tau_arb_i tau_apers_i tau_kap_i tau_frad_i tau_arb_h tau_apers_h tau_kap_h
tau_frad_h c_tau_arb_i c_tau_apers_i c_tau_kap_i c_tau_frad_i c_tau_arb_h c_tau_apers_h
c_tau_kap_h c_tau_frad_h tau_akt_h c_tau_akt_h virtuelindk_i virtuelindk_h1 virtuelindk_h2 
top_dummy mellem_dummy bund_dummy notax_dummy);
rename
tau_arb_i=tau_arb_i_mec
tau_apers_i=tau_apers_i_mec
tau_kap_i=tau_kap_i_mec
tau_frad_i=tau_frad_i_mec
tau_arb_h=tau_arb_h_mec
tau_apers_h=tau_apers_h_mec
tau_kap_h=tau_kap_h_mec
tau_frad_h=tau_frad_h_mec
tau_akt_h=tau_akt_h_mec
c_tau_arb_i=c_tau_arb_i_mec 
c_tau_apers_i=c_tau_apers_i_mec
c_tau_kap_i=c_tau_kap_i_mec
c_tau_frad_i=c_tau_frad_i_mec
c_tau_arb_h=c_tau_arb_h_mec
c_tau_apers_h=c_tau_apers_h_mec
c_tau_kap_h=c_tau_kap_h_mec
c_tau_frad_h=c_tau_frad_h_mec
c_tau_akt_h=c_tau_akt_h_mec
virtuelindk_i=virtuelindk_i_mec
virtuelindk_h1=virtuelindk_h1_mec 
virtuelindk_h2=virtuelindk_h2_mec top_dummy=top_dummy_mec mellem_dummy=mellem_dummy_mec bund_dummy=bund_dummy_mec notax_dummy=notax_dummy_mec;
run;

data ska1995;
merge bif.skat1995(in=a) skat1998_Indkomst1995 (in=b) 
 skat2.skat_indk1995(keep=pnr omfskpl in=d);
by pnr;
if a=1 and b=1 and d=1;
run;

data k(keep=year inflation1995_2005);
set bif2.inflation(where=(infl1995_2005=1));
inflation1995_2005=inflation;
run;

data g(keep=year inflation1998_2005);
set bif2.inflation(where=(infl1998_2005=1));
inflation1998_2005=inflation;
year=1995;
run;

data skat1995(drop=per cap dec ear c_per c_cap c_dec c_ear per_income c_per_income virtuelindk_i virtuelindk_h1
virtuelindk_h2 tax1-tax9 c_tax1-c_tax9 h_tax1-h_tax9 x c_arbindk c_kapindk c_apersindk 
c_lignfrad nybundinc nymelleminc nytopinc);
merge ska1995(in=a) k(in=b) g(in=c);
by year;
tt=0;
tm=0;
tb=0;
tn=0;
mt=0;
mm=0;
mb=0;
mn=0;
bt=0;
bm=0;
bb=0;
bn=0;
nt=0;
nm=0;
nb=0;
nn=0;
/*top*/
if top_dummy=1 and top_dummy_mec=1 then tt=1;
if top_dummy=1 and mellem_dummy_mec=1 then tm=1;
if top_dummy=1 and bund_dummy_mec=1 then tb=1;
if top_dummy=1 and notax_dummy_mec=1 then tn=1;
/*mellem*/
if mellem_dummy=1 and top_dummy_mec=1 then mt=1;
if mellem_dummy=1 and mellem_dummy_mec=1 then mm=1;
if mellem_dummy=1 and bund_dummy_mec=1 then mb=1;
if mellem_dummy=1 and notax_dummy_mec=1 then mn=1;
/*bund*/
if bund_dummy=1 and top_dummy_mec=1 then bt=1;
if bund_dummy=1 and mellem_dummy_mec=1 then bm=1;
if bund_dummy=1 and bund_dummy_mec=1 then bb=1;
if bund_dummy=1 and notax_dummy_mec=1 then bn=1;
/*notax*/
if notax_dummy=1 and bund_dummy_mec=1 then nb=1;
if notax_dummy=1 and notax_dummy_mec=1 then nn=1;
if notax_dummy=1 and mellem_dummy_mec=1 then nm=1;
if notax_dummy=1 and top_dummy_mec=1 then nt=1;
if exp=. then exp=0;
if omfskpl=0 then spligt1995=1; else spligt1995=0;
bkink=nybundinc*inflation1995_2005;
mkink=nymelleminc*inflation1995_2005;
tkink=nytopinc*inflation1995_2005;
per_1995=per*inflation1995_2005;
cap_1995=cap*inflation1995_2005;
dec_1995=dec*inflation1995_2005;
ear_1995=ear*inflation1995_2005;
per_income_1995=per_income*inflation1995_2005;
c_per_income_1995=c_per_income*inflation1995_2005;
c_per_1995=c_per*inflation1995_2005;
c_cap_1995=c_cap*inflation1995_2005;
c_dec_1995=c_dec*inflation1995_2005;
c_ear_1995=c_ear*inflation1995_2005;
virtuelindk_i_1995=virtuelindk_i*inflation1995_2005;
virtuelindk_h1_1995=virtuelindk_h1*inflation1995_2005;
virtuelindk_h2_1995=virtuelindk_h2*inflation1995_2005;
virtuelindk_i_mec1995=virtuelindk_i_mec*inflation1998_2005;
virtuelindk_h1_mec1995=virtuelindk_h1_mec*inflation1998_2005;
virtuelindk_h2_mec1995=virtuelindk_h2_mec*inflation1998_2005;
tax1_1995=tax1*inflation1995_2005;
c_tax1_1995=c_tax1*inflation1995_2005;
h_tax1_1995=h_tax1*inflation1995_2005;
akt_1995=aktind*inflation1995_2005;
c_akt_1995=c_aktind*inflation1995_2005;
rename tau_arb_i=tau_arb_i1995 
       tau_apers_i=tau_apers_i1995
       tau_kap_i=tau_kap_i1995
	   tau_frad_i=tau_frad_i1995
	   tau_arb_h=tau_arb_h1995 
       tau_apers_h=tau_apers_h1995
       tau_kap_h=tau_kap_h1995
	   tau_frad_h=tau_frad_h1995
	   c_tau_arb_i=c_tau_arb_i1995 
       c_tau_apers_i=c_tau_apers_i1995
       c_tau_kap_i=c_tau_kap_i1995
	   c_tau_frad_i=c_tau_frad_i1995
	   c_tau_arb_h=c_tau_arb_h1995 
       c_tau_apers_h=c_tau_apers_h1995
       c_tau_kap_h=c_tau_kap_h1995
	   c_tau_frad_h=c_tau_frad_h1995
	   tau_arb_i_mec=tau_arb_i_mec1995 
       tau_apers_i_mec=tau_apers_i_mec1995
       tau_kap_i_mec=tau_kap_i_mec1995
	   tau_frad_i_mec=tau_frad_i_mec1995
	   tau_arb_h_mec=tau_arb_h_mec1995 
       tau_apers_h_mec=tau_apers_h_mec1995
       tau_kap_h_mec=tau_kap_h_mec1995
	   tau_frad_h_mec=tau_frad_h_mec1995
	   c_tau_arb_i_mec=c_tau_arb_i_mec1995 
       c_tau_apers_i_mec=c_tau_apers_i_mec1995
       c_tau_kap_i_mec=c_tau_kap_i_mec1995
	   c_tau_frad_i_mec=c_tau_frad_i_mec1995
	   c_tau_arb_h_mec=c_tau_arb_h_mec1995 
       c_tau_apers_h_mec=c_tau_apers_h_mec1995
       c_tau_kap_h_mec=c_tau_kap_h_mec1995
	   c_tau_frad_h_mec=c_tau_frad_h_mec1995
	    tau_akt_h=tau_akt_h1995
	   c_tau_akt_h=c_tau_akt_h1995
	   tau_akt_h_mec=tau_akt_h_mec1995
	   c_tau_akt_h_mec=c_tau_akt_h_mec1995
      
       bdagp=bdagp1995
       qoffpens=qoffpens1995
       arblhu=arblhu1995
       adagp=adagp1995
       stip=stip1995
       /*gift=gift1995*/
       konthj=konthj1995
       reval=reval1995;
if a=1 and b=1 and c=1;
run;


proc datasets library=work; delete ska1995 k g skat1998_indkomst1995; 
run;



Proc sort data=bif.skat1996; by pnr; run;
Proc sort data=bif.skat1999_Indkomst1996; by pnr; run;
Proc sort data=skat2.skat_indk1996; by pnr; run;

data skat1999_indkomst1996;
set bif.skat1999_indkomst1996
(keep=pnr tau_arb_i tau_apers_i tau_kap_i tau_frad_i tau_arb_h tau_apers_h tau_kap_h
tau_frad_h c_tau_arb_i c_tau_apers_i c_tau_kap_i c_tau_frad_i c_tau_arb_h c_tau_apers_h
c_tau_kap_h c_tau_frad_h tau_akt_h c_tau_akt_h virtuelindk_i virtuelindk_h1 virtuelindk_h2 
top_dummy mellem_dummy bund_dummy notax_dummy);
rename
tau_arb_i=tau_arb_i_mec
tau_apers_i=tau_apers_i_mec
tau_kap_i=tau_kap_i_mec
tau_frad_i=tau_frad_i_mec
tau_arb_h=tau_arb_h_mec
tau_apers_h=tau_apers_h_mec
tau_kap_h=tau_kap_h_mec
tau_frad_h=tau_frad_h_mec
tau_akt_h=tau_akt_h_mec
c_tau_arb_i=c_tau_arb_i_mec 
c_tau_apers_i=c_tau_apers_i_mec
c_tau_kap_i=c_tau_kap_i_mec
c_tau_frad_i=c_tau_frad_i_mec
c_tau_arb_h=c_tau_arb_h_mec
c_tau_apers_h=c_tau_apers_h_mec
c_tau_kap_h=c_tau_kap_h_mec
c_tau_frad_h=c_tau_frad_h_mec
c_tau_akt_h=c_tau_akt_h_mec
virtuelindk_i=virtuelindk_i_mec
virtuelindk_h1=virtuelindk_h1_mec 
virtuelindk_h2=virtuelindk_h2_mec top_dummy=top_dummy_mec mellem_dummy=mellem_dummy_mec bund_dummy=bund_dummy_mec notax_dummy=notax_dummy_mec;
run;

data ska1996;
merge bif.skat1996(in=a) skat1999_Indkomst1996 (in=b) 
 skat2.skat_indk1996(keep=pnr omfskpl in=d);
by pnr;
if a=1 and b=1 and d=1;
run;

data k(keep=year inflation1996_2005);
set bif2.inflation(where=(infl1996_2005=1));
inflation1996_2005=inflation;
run;

data g(keep=year inflation1999_2005);
set bif2.inflation(where=(infl1999_2005=1));
inflation1999_2005=inflation;
year=1996;
run;

data skat1996(drop=per cap dec ear c_per c_cap c_dec c_ear per_income c_per_income  virtuelindk_i virtuelindk_h1
virtuelindk_h2 tax1-tax9 c_tax1-c_tax9 h_tax1-h_tax9 x c_arbindk c_kapindk c_apersindk 
c_lignfrad nybundinc nymelleminc nytopinc);
merge ska1996(in=a) k(in=b) g(in=c);
by year;
tt=0;
tm=0;
tb=0;
tn=0;
mt=0;
mm=0;
mb=0;
mn=0;
bt=0;
bm=0;
bb=0;
bn=0;
nt=0;
nm=0;
nb=0;
nn=0;
/*top*/
if top_dummy=1 and top_dummy_mec=1 then tt=1;
if top_dummy=1 and mellem_dummy_mec=1 then tm=1;
if top_dummy=1 and bund_dummy_mec=1 then tb=1;
if top_dummy=1 and notax_dummy_mec=1 then tn=1;
/*mellem*/
if mellem_dummy=1 and top_dummy_mec=1 then mt=1;
if mellem_dummy=1 and mellem_dummy_mec=1 then mm=1;
if mellem_dummy=1 and bund_dummy_mec=1 then mb=1;
if mellem_dummy=1 and notax_dummy_mec=1 then mn=1;
/*bund*/
if bund_dummy=1 and top_dummy_mec=1 then bt=1;
if bund_dummy=1 and mellem_dummy_mec=1 then bm=1;
if bund_dummy=1 and bund_dummy_mec=1 then bb=1;
if bund_dummy=1 and notax_dummy_mec=1 then bn=1;
/*notax*/
if notax_dummy=1 and bund_dummy_mec=1 then nb=1;
if notax_dummy=1 and notax_dummy_mec=1 then nn=1;
if notax_dummy=1 and mellem_dummy_mec=1 then nm=1;
if notax_dummy=1 and top_dummy_mec=1 then nt=1;
if exp=. then exp=0;
if omfskpl=0 then spligt1996=1; else spligt1996=0;
bkink=nybundinc*inflation1996_2005;
mkink=nymelleminc*inflation1996_2005;
tkink=nytopinc*inflation1996_2005;
per_1996=per*inflation1996_2005;
cap_1996=cap*inflation1996_2005;
dec_1996=dec*inflation1996_2005;
ear_1996=ear*inflation1996_2005;
per_income_1996=per_income*inflation1996_2005;
c_per_income_1996=c_per_income*inflation1996_2005;
c_per_1996=c_per*inflation1996_2005;
c_cap_1996=c_cap*inflation1996_2005;
c_dec_1996=c_dec*inflation1996_2005;
c_ear_1996=c_ear*inflation1996_2005;
virtuelindk_i_1996=virtuelindk_i*inflation1996_2005;
virtuelindk_h1_1996=virtuelindk_h1*inflation1996_2005;
virtuelindk_h2_1996=virtuelindk_h2*inflation1996_2005;
virtuelindk_i_mec1996=virtuelindk_i_mec*inflation1999_2005;
virtuelindk_h1_mec1996=virtuelindk_h1_mec*inflation1999_2005;
virtuelindk_h2_mec1996=virtuelindk_h2_mec*inflation1999_2005;
tax1_1996=tax1*inflation1996_2005;
c_tax1_1996=c_tax1*inflation1996_2005;
h_tax1_1996=h_tax1*inflation1996_2005;
akt_1996=aktind*inflation1996_2005;
c_akt_1996=c_aktind*inflation1996_2005;
rename tau_arb_i=tau_arb_i1996 
       tau_apers_i=tau_apers_i1996
       tau_kap_i=tau_kap_i1996
	   tau_frad_i=tau_frad_i1996
	   tau_arb_h=tau_arb_h1996 
       tau_apers_h=tau_apers_h1996
       tau_kap_h=tau_kap_h1996
	   tau_frad_h=tau_frad_h1996
	   c_tau_arb_i=c_tau_arb_i1996 
       c_tau_apers_i=c_tau_apers_i1996
       c_tau_kap_i=c_tau_kap_i1996
	   c_tau_frad_i=c_tau_frad_i1996
	   c_tau_arb_h=c_tau_arb_h1996 
       c_tau_apers_h=c_tau_apers_h1996
       c_tau_kap_h=c_tau_kap_h1996
	   c_tau_frad_h=c_tau_frad_h1996
	   tau_arb_i_mec=tau_arb_i_mec1996 
       tau_apers_i_mec=tau_apers_i_mec1996
       tau_kap_i_mec=tau_kap_i_mec1996
	   tau_frad_i_mec=tau_frad_i_mec1996
	   tau_arb_h_mec=tau_arb_h_mec1996 
       tau_apers_h_mec=tau_apers_h_mec1996
       tau_kap_h_mec=tau_kap_h_mec1996
	   tau_frad_h_mec=tau_frad_h_mec1996
	   c_tau_arb_i_mec=c_tau_arb_i_mec1996 
       c_tau_apers_i_mec=c_tau_apers_i_mec1996
       c_tau_kap_i_mec=c_tau_kap_i_mec1996
	   c_tau_frad_i_mec=c_tau_frad_i_mec1996
	   c_tau_arb_h_mec=c_tau_arb_h_mec1996 
       c_tau_apers_h_mec=c_tau_apers_h_mec1996
       c_tau_kap_h_mec=c_tau_kap_h_mec1996
	   c_tau_frad_h_mec=c_tau_frad_h_mec1996
	    tau_akt_h=tau_akt_h1996
	   c_tau_akt_h=c_tau_akt_h1996
	   tau_akt_h_mec=tau_akt_h_mec1996
	   c_tau_akt_h_mec=c_tau_akt_h_mec1996
    
       bdagp=bdagp1996
       qoffpens=qoffpens1996
       arblhu=arblhu1996
       adagp=adagp1996
       stip=stip1996
       /*gift=gift1996*/
       konthj=konthj1996
       reval=reval1996;
if a=1 and b=1 and c=1;
run;


proc datasets library=work; delete ska1996 k g skat1999_indkomst1996; 
run;

Proc sort data=bif.skat1997; by pnr; run;
Proc sort data=bif.skat2000_Indkomst1997; by pnr; run;
Proc sort data=skat2.skat_indk1997; by pnr; run;

data skat2000_indkomst1997;
set bif.skat2000_indkomst1997
(keep=pnr tau_arb_i tau_apers_i tau_kap_i tau_frad_i tau_arb_h tau_apers_h tau_kap_h
tau_frad_h c_tau_arb_i c_tau_apers_i c_tau_kap_i c_tau_frad_i c_tau_arb_h c_tau_apers_h
c_tau_kap_h c_tau_frad_h tau_akt_h c_tau_akt_h virtuelindk_i virtuelindk_h1 virtuelindk_h2 
top_dummy mellem_dummy bund_dummy notax_dummy);
rename
tau_arb_i=tau_arb_i_mec
tau_apers_i=tau_apers_i_mec
tau_kap_i=tau_kap_i_mec
tau_frad_i=tau_frad_i_mec
tau_arb_h=tau_arb_h_mec
tau_apers_h=tau_apers_h_mec
tau_kap_h=tau_kap_h_mec
tau_frad_h=tau_frad_h_mec
tau_akt_h=tau_akt_h_mec
c_tau_arb_i=c_tau_arb_i_mec 
c_tau_apers_i=c_tau_apers_i_mec
c_tau_kap_i=c_tau_kap_i_mec
c_tau_frad_i=c_tau_frad_i_mec
c_tau_arb_h=c_tau_arb_h_mec
c_tau_apers_h=c_tau_apers_h_mec
c_tau_kap_h=c_tau_kap_h_mec
c_tau_frad_h=c_tau_frad_h_mec
c_tau_akt_h=c_tau_akt_h_mec
virtuelindk_i=virtuelindk_i_mec
virtuelindk_h1=virtuelindk_h1_mec 
virtuelindk_h2=virtuelindk_h2_mec top_dummy=top_dummy_mec mellem_dummy=mellem_dummy_mec bund_dummy=bund_dummy_mec notax_dummy=notax_dummy_mec;
run;

data ska1997;
merge bif.skat1997(in=a) skat2000_Indkomst1997 (in=b) 
 skat2.skat_indk1997(keep=pnr omfskpl in=d);
by pnr;
if a=1 and b=1 and d=1;
run;

data k(keep=year inflation1997_2005);
set bif2.inflation(where=(infl1997_2005=1));
inflation1997_2005=inflation;
run;

data g(keep=year inflation2000_2005);
set bif2.inflation(where=(infl2000_2005=1));
inflation2000_2005=inflation;
year=1997;
run;

data skat1997(drop=per cap dec ear c_per c_cap c_dec c_ear per_income c_per_income  virtuelindk_i virtuelindk_h1
virtuelindk_h2 tax1-tax9 c_tax1-c_tax9 h_tax1-h_tax9 x c_arbindk c_kapindk c_apersindk 
c_lignfrad nybundinc nymelleminc nytopinc);
merge ska1997(in=a) k(in=b) g(in=c);
by year;
tt=0;
tm=0;
tb=0;
tn=0;
mt=0;
mm=0;
mb=0;
mn=0;
bt=0;
bm=0;
bb=0;
bn=0;
nt=0;
nm=0;
nb=0;
nn=0;
/*top*/
if top_dummy=1 and top_dummy_mec=1 then tt=1;
if top_dummy=1 and mellem_dummy_mec=1 then tm=1;
if top_dummy=1 and bund_dummy_mec=1 then tb=1;
if top_dummy=1 and notax_dummy_mec=1 then tn=1;
/*mellem*/
if mellem_dummy=1 and top_dummy_mec=1 then mt=1;
if mellem_dummy=1 and mellem_dummy_mec=1 then mm=1;
if mellem_dummy=1 and bund_dummy_mec=1 then mb=1;
if mellem_dummy=1 and notax_dummy_mec=1 then mn=1;
/*bund*/
if bund_dummy=1 and top_dummy_mec=1 then bt=1;
if bund_dummy=1 and mellem_dummy_mec=1 then bm=1;
if bund_dummy=1 and bund_dummy_mec=1 then bb=1;
if bund_dummy=1 and notax_dummy_mec=1 then bn=1;
/*notax*/
if notax_dummy=1 and bund_dummy_mec=1 then nb=1;
if notax_dummy=1 and notax_dummy_mec=1 then nn=1;
if notax_dummy=1 and mellem_dummy_mec=1 then nm=1;
if notax_dummy=1 and top_dummy_mec=1 then nt=1;
if exp=. then exp=0;
if omfskpl=0 then spligt1997=1; else spligt1997=0;
bkink=nybundinc*inflation1997_2005;
mkink=nymelleminc*inflation1997_2005;
tkink=nytopinc*inflation1997_2005;
per_1997=per*inflation1997_2005;
cap_1997=cap*inflation1997_2005;
dec_1997=dec*inflation1997_2005;
ear_1997=ear*inflation1997_2005;
per_income_1997=per_income*inflation1997_2005;
c_per_income_1997=c_per_income*inflation1997_2005;
c_per_1997=c_per*inflation1997_2005;
c_cap_1997=c_cap*inflation1997_2005;
c_dec_1997=c_dec*inflation1997_2005;
c_ear_1997=c_ear*inflation1997_2005;
virtuelindk_i_1997=virtuelindk_i*inflation1997_2005;
virtuelindk_h1_1997=virtuelindk_h1*inflation1997_2005;
virtuelindk_h2_1997=virtuelindk_h2*inflation1997_2005;
virtuelindk_i_mec1997=virtuelindk_i_mec*inflation2000_2005;
virtuelindk_h1_mec1997=virtuelindk_h1_mec*inflation2000_2005;
virtuelindk_h2_mec1997=virtuelindk_h2_mec*inflation2000_2005;
tax1_1997=tax1*inflation1997_2005;
c_tax1_1997=c_tax1*inflation1997_2005;
h_tax1_1997=h_tax1*inflation1997_2005;
akt_1997=aktind*inflation1997_2005;
c_akt_1997=c_aktind*inflation1997_2005;
rename tau_arb_i=tau_arb_i1997 
       tau_apers_i=tau_apers_i1997
       tau_kap_i=tau_kap_i1997
	   tau_frad_i=tau_frad_i1997
	   tau_arb_h=tau_arb_h1997 
       tau_apers_h=tau_apers_h1997
       tau_kap_h=tau_kap_h1997
	   tau_frad_h=tau_frad_h1997
	   c_tau_arb_i=c_tau_arb_i1997 
       c_tau_apers_i=c_tau_apers_i1997
       c_tau_kap_i=c_tau_kap_i1997
	   c_tau_frad_i=c_tau_frad_i1997
	   c_tau_arb_h=c_tau_arb_h1997 
       c_tau_apers_h=c_tau_apers_h1997
       c_tau_kap_h=c_tau_kap_h1997
	   c_tau_frad_h=c_tau_frad_h1997
	   tau_arb_i_mec=tau_arb_i_mec1997 
       tau_apers_i_mec=tau_apers_i_mec1997
       tau_kap_i_mec=tau_kap_i_mec1997
	   tau_frad_i_mec=tau_frad_i_mec1997
	   tau_arb_h_mec=tau_arb_h_mec1997 
       tau_apers_h_mec=tau_apers_h_mec1997
       tau_kap_h_mec=tau_kap_h_mec1997
	   tau_frad_h_mec=tau_frad_h_mec1997
	   c_tau_arb_i_mec=c_tau_arb_i_mec1997 
       c_tau_apers_i_mec=c_tau_apers_i_mec1997
       c_tau_kap_i_mec=c_tau_kap_i_mec1997
	   c_tau_frad_i_mec=c_tau_frad_i_mec1997
	   c_tau_arb_h_mec=c_tau_arb_h_mec1997 
       c_tau_apers_h_mec=c_tau_apers_h_mec1997
       c_tau_kap_h_mec=c_tau_kap_h_mec1997
	   c_tau_frad_h_mec=c_tau_frad_h_mec1997
	    tau_akt_h=tau_akt_h1997
	   c_tau_akt_h=c_tau_akt_h1997
	   tau_akt_h_mec=tau_akt_h_mec1997
	   c_tau_akt_h_mec=c_tau_akt_h_mec1997
       
       bdagp=bdagp1997
       qoffpens=qoffpens1997
       arblhu=arblhu1997
       adagp=adagp1997
       stip=stip1997
       /*gift=gift1997*/
       konthj=konthj1997
       reval=reval1997;
if a=1 and b=1 and c=1;
run;


proc datasets library=work; delete ska1997 k g skat2000_indkomst1997; 
run;


Proc sort data=bif.skat1998; by pnr; run;
Proc sort data=bif.skat2001_Indkomst1998; by pnr; run;
Proc sort data=skat2.skat_indk1998; by pnr; run;

data skat2001_indkomst1998;
set bif.skat2001_indkomst1998
(keep=pnr tau_arb_i tau_apers_i tau_kap_i tau_frad_i tau_arb_h tau_apers_h tau_kap_h
tau_frad_h c_tau_arb_i c_tau_apers_i c_tau_kap_i c_tau_frad_i c_tau_arb_h c_tau_apers_h
c_tau_kap_h c_tau_frad_h tau_akt_h c_tau_akt_h virtuelindk_i virtuelindk_h1 virtuelindk_h2 
top_dummy mellem_dummy bund_dummy notax_dummy);
rename
tau_arb_i=tau_arb_i_mec
tau_apers_i=tau_apers_i_mec
tau_kap_i=tau_kap_i_mec
tau_frad_i=tau_frad_i_mec
tau_arb_h=tau_arb_h_mec
tau_apers_h=tau_apers_h_mec
tau_kap_h=tau_kap_h_mec
tau_frad_h=tau_frad_h_mec
tau_akt_h=tau_akt_h_mec
c_tau_arb_i=c_tau_arb_i_mec 
c_tau_apers_i=c_tau_apers_i_mec
c_tau_kap_i=c_tau_kap_i_mec
c_tau_frad_i=c_tau_frad_i_mec
c_tau_arb_h=c_tau_arb_h_mec
c_tau_apers_h=c_tau_apers_h_mec
c_tau_kap_h=c_tau_kap_h_mec
c_tau_frad_h=c_tau_frad_h_mec
c_tau_akt_h=c_tau_akt_h_mec
virtuelindk_i=virtuelindk_i_mec
virtuelindk_h1=virtuelindk_h1_mec 
virtuelindk_h2=virtuelindk_h2_mec top_dummy=top_dummy_mec mellem_dummy=mellem_dummy_mec bund_dummy=bund_dummy_mec notax_dummy=notax_dummy_mec;
run;

data ska1998;
merge bif.skat1998(in=a) skat2001_Indkomst1998 (in=b) 
 skat2.skat_indk1998(keep=pnr omfskpl in=d);
by pnr;
if a=1 and b=1 and d=1;
run;

data k(keep=year inflation1998_2005);
set bif2.inflation(where=(infl1998_2005=1));
inflation1998_2005=inflation;
run;

data g(keep=year inflation2001_2005);
set bif2.inflation(where=(infl2001_2005=1));
inflation2001_2005=inflation;
year=1998;
run;

data skat1998(drop=per cap dec ear c_per c_cap c_dec c_ear per_income c_per_income  virtuelindk_i virtuelindk_h1
virtuelindk_h2 tax1-tax9 c_tax1-c_tax9 h_tax1-h_tax9 x c_arbindk c_kapindk c_apersindk 
c_lignfrad nybundinc nymelleminc nytopinc);
merge ska1998(in=a) k(in=b) g(in=c);
by year;
tt=0;
tm=0;
tb=0;
tn=0;
mt=0;
mm=0;
mb=0;
mn=0;
bt=0;
bm=0;
bb=0;
bn=0;
nt=0;
nm=0;
nb=0;
nn=0;
/*top*/
if top_dummy=1 and top_dummy_mec=1 then tt=1;
if top_dummy=1 and mellem_dummy_mec=1 then tm=1;
if top_dummy=1 and bund_dummy_mec=1 then tb=1;
if top_dummy=1 and notax_dummy_mec=1 then tn=1;
/*mellem*/
if mellem_dummy=1 and top_dummy_mec=1 then mt=1;
if mellem_dummy=1 and mellem_dummy_mec=1 then mm=1;
if mellem_dummy=1 and bund_dummy_mec=1 then mb=1;
if mellem_dummy=1 and notax_dummy_mec=1 then mn=1;
/*bund*/
if bund_dummy=1 and top_dummy_mec=1 then bt=1;
if bund_dummy=1 and mellem_dummy_mec=1 then bm=1;
if bund_dummy=1 and bund_dummy_mec=1 then bb=1;
if bund_dummy=1 and notax_dummy_mec=1 then bn=1;
/*notax*/
if notax_dummy=1 and bund_dummy_mec=1 then nb=1;
if notax_dummy=1 and notax_dummy_mec=1 then nn=1;
if notax_dummy=1 and mellem_dummy_mec=1 then nm=1;
if notax_dummy=1 and top_dummy_mec=1 then nt=1;
if exp=. then exp=0;
if omfskpl=0 then spligt1998=1; else spligt1998=0;
bkink=nybundinc*inflation1998_2005;
mkink=nymelleminc*inflation1998_2005;
tkink=nytopinc*inflation1998_2005;
per_1998=per*inflation1998_2005;
cap_1998=cap*inflation1998_2005;
dec_1998=dec*inflation1998_2005;
ear_1998=ear*inflation1998_2005;
per_income_1998=per_income*inflation1998_2005;
c_per_income_1998=c_per_income*inflation1998_2005;
c_per_1998=c_per*inflation1998_2005;
c_cap_1998=c_cap*inflation1998_2005;
c_dec_1998=c_dec*inflation1998_2005;
c_ear_1998=c_ear*inflation1998_2005;
virtuelindk_i_1998=virtuelindk_i*inflation1998_2005;
virtuelindk_h1_1998=virtuelindk_h1*inflation1998_2005;
virtuelindk_h2_1998=virtuelindk_h2*inflation1998_2005;
virtuelindk_i_mec1998=virtuelindk_i_mec*inflation2001_2005;
virtuelindk_h1_mec1998=virtuelindk_h1_mec*inflation2001_2005;
virtuelindk_h2_mec1998=virtuelindk_h2_mec*inflation2001_2005;
tax1_1998=tax1*inflation1998_2005;
c_tax1_1998=c_tax1*inflation1998_2005;
h_tax1_1998=h_tax1*inflation1998_2005;
akt_1998=aktind*inflation1998_2005;
c_akt_1998=c_aktind*inflation1998_2005;
rename tau_arb_i=tau_arb_i1998 
       tau_apers_i=tau_apers_i1998
       tau_kap_i=tau_kap_i1998
	   tau_frad_i=tau_frad_i1998
	   tau_arb_h=tau_arb_h1998 
       tau_apers_h=tau_apers_h1998
       tau_kap_h=tau_kap_h1998
	   tau_frad_h=tau_frad_h1998
	   c_tau_arb_i=c_tau_arb_i1998 
       c_tau_apers_i=c_tau_apers_i1998
       c_tau_kap_i=c_tau_kap_i1998
	   c_tau_frad_i=c_tau_frad_i1998
	   c_tau_arb_h=c_tau_arb_h1998 
       c_tau_apers_h=c_tau_apers_h1998
       c_tau_kap_h=c_tau_kap_h1998
	   c_tau_frad_h=c_tau_frad_h1998
	   tau_arb_i_mec=tau_arb_i_mec1998 
       tau_apers_i_mec=tau_apers_i_mec1998
       tau_kap_i_mec=tau_kap_i_mec1998
	   tau_frad_i_mec=tau_frad_i_mec1998
	   tau_arb_h_mec=tau_arb_h_mec1998 
       tau_apers_h_mec=tau_apers_h_mec1998
       tau_kap_h_mec=tau_kap_h_mec1998
	   tau_frad_h_mec=tau_frad_h_mec1998
	   c_tau_arb_i_mec=c_tau_arb_i_mec1998 
       c_tau_apers_i_mec=c_tau_apers_i_mec1998
       c_tau_kap_i_mec=c_tau_kap_i_mec1998
	   c_tau_frad_i_mec=c_tau_frad_i_mec1998
	   c_tau_arb_h_mec=c_tau_arb_h_mec1998 
       c_tau_apers_h_mec=c_tau_apers_h_mec1998
       c_tau_kap_h_mec=c_tau_kap_h_mec1998
	   c_tau_frad_h_mec=c_tau_frad_h_mec1998
	    tau_akt_h=tau_akt_h1998
	   c_tau_akt_h=c_tau_akt_h1998
	   tau_akt_h_mec=tau_akt_h_mec1998
	   c_tau_akt_h_mec=c_tau_akt_h_mec1998
   
       bdagp=bdagp1998
       qoffpens=qoffpens1998
       arblhu=arblhu1998
       adagp=adagp1998
       stip=stip1998
       /*gift=gift1998*/
       konthj=konthj1998
       reval=reval1998;
if a=1 and b=1 and c=1;
run;


proc datasets library=work; delete ska1998 k g skat2001_indkomst1998; 
run;

Proc sort data=bif.skat1999; by pnr; run;
Proc sort data=bif.skat2002_Indkomst1999; by pnr; run;
Proc sort data=skat2.skat_indk1999; by pnr; run;

data skat2002_indkomst1999;
set bif.skat2002_indkomst1999
(keep=pnr tau_arb_i tau_apers_i tau_kap_i tau_frad_i tau_arb_h tau_apers_h tau_kap_h
tau_frad_h c_tau_arb_i c_tau_apers_i c_tau_kap_i c_tau_frad_i c_tau_arb_h c_tau_apers_h
c_tau_kap_h c_tau_frad_h tau_akt_h c_tau_akt_h virtuelindk_i virtuelindk_h1 virtuelindk_h2 
top_dummy mellem_dummy bund_dummy notax_dummy);
rename
tau_arb_i=tau_arb_i_mec
tau_apers_i=tau_apers_i_mec
tau_kap_i=tau_kap_i_mec
tau_frad_i=tau_frad_i_mec
tau_arb_h=tau_arb_h_mec
tau_apers_h=tau_apers_h_mec
tau_kap_h=tau_kap_h_mec
tau_frad_h=tau_frad_h_mec
tau_akt_h=tau_akt_h_mec
c_tau_arb_i=c_tau_arb_i_mec 
c_tau_apers_i=c_tau_apers_i_mec
c_tau_kap_i=c_tau_kap_i_mec
c_tau_frad_i=c_tau_frad_i_mec
c_tau_arb_h=c_tau_arb_h_mec
c_tau_apers_h=c_tau_apers_h_mec
c_tau_kap_h=c_tau_kap_h_mec
c_tau_frad_h=c_tau_frad_h_mec
c_tau_akt_h=c_tau_akt_h_mec
virtuelindk_i=virtuelindk_i_mec
virtuelindk_h1=virtuelindk_h1_mec 
virtuelindk_h2=virtuelindk_h2_mec top_dummy=top_dummy_mec mellem_dummy=mellem_dummy_mec bund_dummy=bund_dummy_mec notax_dummy=notax_dummy_mec;
run;


data ska1999;
merge bif.skat1999(in=a) skat2002_Indkomst1999 (in=b) 
 skat2.skat_indk1999(keep=pnr omfskpl in=d);
by pnr;
if a=1 and b=1 and d=1;
run;

data k(keep=year inflation1999_2005);
set bif2.inflation(where=(infl1999_2005=1));
inflation1999_2005=inflation;
run;

data g(keep=year inflation2002_2005);
set bif2.inflation(where=(infl2002_2005=1));
inflation2002_2005=inflation;
year=1999;
run;

data skat1999(drop=per cap dec ear c_per c_cap c_dec c_ear per_income c_per_income  virtuelindk_i virtuelindk_h1
virtuelindk_h2 tax1-tax9 c_tax1-c_tax9 h_tax1-h_tax9 x c_arbindk c_kapindk c_apersindk 
c_lignfrad nybundinc nymelleminc nytopinc);
merge ska1999(in=a) k(in=b) g(in=c);
by year;
tt=0;
tm=0;
tb=0;
tn=0;
mt=0;
mm=0;
mb=0;
mn=0;
bt=0;
bm=0;
bb=0;
bn=0;
nt=0;
nm=0;
nb=0;
nn=0;
/*top*/
if top_dummy=1 and top_dummy_mec=1 then tt=1;
if top_dummy=1 and mellem_dummy_mec=1 then tm=1;
if top_dummy=1 and bund_dummy_mec=1 then tb=1;
if top_dummy=1 and notax_dummy_mec=1 then tn=1;
/*mellem*/
if mellem_dummy=1 and top_dummy_mec=1 then mt=1;
if mellem_dummy=1 and mellem_dummy_mec=1 then mm=1;
if mellem_dummy=1 and bund_dummy_mec=1 then mb=1;
if mellem_dummy=1 and notax_dummy_mec=1 then mn=1;
/*bund*/
if bund_dummy=1 and top_dummy_mec=1 then bt=1;
if bund_dummy=1 and mellem_dummy_mec=1 then bm=1;
if bund_dummy=1 and bund_dummy_mec=1 then bb=1;
if bund_dummy=1 and notax_dummy_mec=1 then bn=1;
/*notax*/
if notax_dummy=1 and bund_dummy_mec=1 then nb=1;
if notax_dummy=1 and notax_dummy_mec=1 then nn=1;
if notax_dummy=1 and mellem_dummy_mec=1 then nm=1;
if notax_dummy=1 and top_dummy_mec=1 then nt=1;
if exp=. then exp=0;
if omfskpl=0 then spligt1999=1; else spligt1999=0;
bkink=nybundinc*inflation1999_2005;
mkink=nymelleminc*inflation1999_2005;
tkink=nytopinc*inflation1999_2005;
per_1999=per*inflation1999_2005;
cap_1999=cap*inflation1999_2005;
dec_1999=dec*inflation1999_2005;
ear_1999=ear*inflation1999_2005;
per_income_1999=per_income*inflation1999_2005;
c_per_income_1999=c_per_income*inflation1999_2005;
c_per_1999=c_per*inflation1999_2005;
c_cap_1999=c_cap*inflation1999_2005;
c_dec_1999=c_dec*inflation1999_2005;
c_ear_1999=c_ear*inflation1999_2005;
virtuelindk_i_1999=virtuelindk_i*inflation1999_2005;
virtuelindk_h1_1999=virtuelindk_h1*inflation1999_2005;
virtuelindk_h2_1999=virtuelindk_h2*inflation1999_2005;
virtuelindk_i_mec1999=virtuelindk_i_mec*inflation2002_2005;
virtuelindk_h1_mec1999=virtuelindk_h1_mec*inflation2002_2005;
virtuelindk_h2_mec1999=virtuelindk_h2_mec*inflation2002_2005;
tax1_1999=tax1*inflation1999_2005;
c_tax1_1999=c_tax1*inflation1999_2005;
h_tax1_1999=h_tax1*inflation1999_2005;
akt_1999=aktind*inflation1999_2005;
c_akt_1999=c_aktind*inflation1999_2005;
rename tau_arb_i=tau_arb_i1999 
       tau_apers_i=tau_apers_i1999
       tau_kap_i=tau_kap_i1999
	   tau_frad_i=tau_frad_i1999
	   tau_arb_h=tau_arb_h1999 
       tau_apers_h=tau_apers_h1999
       tau_kap_h=tau_kap_h1999
	   tau_frad_h=tau_frad_h1999
	   c_tau_arb_i=c_tau_arb_i1999 
       c_tau_apers_i=c_tau_apers_i1999
       c_tau_kap_i=c_tau_kap_i1999
	   c_tau_frad_i=c_tau_frad_i1999
	   c_tau_arb_h=c_tau_arb_h1999 
       c_tau_apers_h=c_tau_apers_h1999
       c_tau_kap_h=c_tau_kap_h1999
	   c_tau_frad_h=c_tau_frad_h1999
	   tau_arb_i_mec=tau_arb_i_mec1999 
       tau_apers_i_mec=tau_apers_i_mec1999
       tau_kap_i_mec=tau_kap_i_mec1999
	   tau_frad_i_mec=tau_frad_i_mec1999
	   tau_arb_h_mec=tau_arb_h_mec1999 
       tau_apers_h_mec=tau_apers_h_mec1999
       tau_kap_h_mec=tau_kap_h_mec1999
	   tau_frad_h_mec=tau_frad_h_mec1999
	   c_tau_arb_i_mec=c_tau_arb_i_mec1999 
       c_tau_apers_i_mec=c_tau_apers_i_mec1999
       c_tau_kap_i_mec=c_tau_kap_i_mec1999
	   c_tau_frad_i_mec=c_tau_frad_i_mec1999
	   c_tau_arb_h_mec=c_tau_arb_h_mec1999 
       c_tau_apers_h_mec=c_tau_apers_h_mec1999
       c_tau_kap_h_mec=c_tau_kap_h_mec1999
	   c_tau_frad_h_mec=c_tau_frad_h_mec1999
	    tau_akt_h=tau_akt_h1999
	   c_tau_akt_h=c_tau_akt_h1999
	   tau_akt_h_mec=tau_akt_h_mec1999
	   c_tau_akt_h_mec=c_tau_akt_h_mec1999
   
       bdagp=bdagp1999
       qoffpens=qoffpens1999
       arblhu=arblhu1999
       adagp=adagp1999
       stip=stip1999
       /*gift=gift1999*/
       konthj=konthj1999
       reval=reval1999;
if a=1 and b=1 and c=1;
run;


proc datasets library=work; delete ska1999 k g skat2002_indkomst1999; 
run;


Proc sort data=bif.skat2000; by pnr; run;
Proc sort data=bif.skat2003_Indkomst2000; by pnr; run;
Proc sort data=skat2.skat_indk2000; by pnr; run;

data skat2003_indkomst2000;
set bif.skat2003_indkomst2000
(keep=pnr tau_arb_i tau_apers_i tau_kap_i tau_frad_i tau_arb_h tau_apers_h tau_kap_h
tau_frad_h c_tau_arb_i c_tau_apers_i c_tau_kap_i c_tau_frad_i c_tau_arb_h c_tau_apers_h
c_tau_kap_h c_tau_frad_h tau_akt_h c_tau_akt_h virtuelindk_i virtuelindk_h1 virtuelindk_h2 
top_dummy mellem_dummy bund_dummy notax_dummy);
rename
tau_arb_i=tau_arb_i_mec
tau_apers_i=tau_apers_i_mec
tau_kap_i=tau_kap_i_mec
tau_frad_i=tau_frad_i_mec
tau_arb_h=tau_arb_h_mec
tau_apers_h=tau_apers_h_mec
tau_kap_h=tau_kap_h_mec
tau_frad_h=tau_frad_h_mec
tau_akt_h=tau_akt_h_mec
c_tau_arb_i=c_tau_arb_i_mec 
c_tau_apers_i=c_tau_apers_i_mec
c_tau_kap_i=c_tau_kap_i_mec
c_tau_frad_i=c_tau_frad_i_mec
c_tau_arb_h=c_tau_arb_h_mec
c_tau_apers_h=c_tau_apers_h_mec
c_tau_kap_h=c_tau_kap_h_mec
c_tau_frad_h=c_tau_frad_h_mec
c_tau_akt_h=c_tau_akt_h_mec
virtuelindk_i=virtuelindk_i_mec
virtuelindk_h1=virtuelindk_h1_mec 
virtuelindk_h2=virtuelindk_h2_mec top_dummy=top_dummy_mec mellem_dummy=mellem_dummy_mec bund_dummy=bund_dummy_mec notax_dummy=notax_dummy_mec;
run;

data ska2000;
merge bif.skat2000(in=a) skat2003_Indkomst2000 (in=b) 
 skat2.skat_indk2000(keep=pnr omfskpl in=d);
by pnr;
if a=1 and b=1 and d=1;
run;

data k(keep=year inflation2000_2005);
set bif2.inflation(where=(infl2000_2005=1));
inflation2000_2005=inflation;
run;

data g(keep=year inflation2003_2005);
set bif2.inflation(where=(infl2003_2005=1));
inflation2003_2005=inflation;
year=2000;
run;

data skat2000(drop=per cap dec ear c_per c_cap c_dec c_ear per_income c_per_income  virtuelindk_i virtuelindk_h1
virtuelindk_h2 tax1-tax9 c_tax1-c_tax9 h_tax1-h_tax9 x c_arbindk c_kapindk c_apersindk 
c_lignfrad nybundinc nymelleminc nytopinc);
merge ska2000(in=a) k(in=b) g(in=c);
by year;
tt=0;
tm=0;
tb=0;
tn=0;
mt=0;
mm=0;
mb=0;
mn=0;
bt=0;
bm=0;
bb=0;
bn=0;
nt=0;
nm=0;
nb=0;
nn=0;
/*top*/
if top_dummy=1 and top_dummy_mec=1 then tt=1;
if top_dummy=1 and mellem_dummy_mec=1 then tm=1;
if top_dummy=1 and bund_dummy_mec=1 then tb=1;
if top_dummy=1 and notax_dummy_mec=1 then tn=1;
/*mellem*/
if mellem_dummy=1 and top_dummy_mec=1 then mt=1;
if mellem_dummy=1 and mellem_dummy_mec=1 then mm=1;
if mellem_dummy=1 and bund_dummy_mec=1 then mb=1;
if mellem_dummy=1 and notax_dummy_mec=1 then mn=1;
/*bund*/
if bund_dummy=1 and top_dummy_mec=1 then bt=1;
if bund_dummy=1 and mellem_dummy_mec=1 then bm=1;
if bund_dummy=1 and bund_dummy_mec=1 then bb=1;
if bund_dummy=1 and notax_dummy_mec=1 then bn=1;
/*notax*/
if notax_dummy=1 and bund_dummy_mec=1 then nb=1;
if notax_dummy=1 and notax_dummy_mec=1 then nn=1;
if notax_dummy=1 and mellem_dummy_mec=1 then nm=1;
if notax_dummy=1 and top_dummy_mec=1 then nt=1;
if exp=. then exp=0;
if omfskpl=0 then spligt2000=1; else spligt2000=0;
bkink=nybundinc*inflation2000_2005;
mkink=nymelleminc*inflation2000_2005;
tkink=nytopinc*inflation2000_2005;
per_2000=per*inflation2000_2005;
cap_2000=cap*inflation2000_2005;
dec_2000=dec*inflation2000_2005;
ear_2000=ear*inflation2000_2005;
per_income_2000=per_income*inflation2000_2005;
c_per_income_2000=c_per_income*inflation2000_2005;
c_per_2000=c_per*inflation2000_2005;
c_cap_2000=c_cap*inflation2000_2005;
c_dec_2000=c_dec*inflation2000_2005;
c_ear_2000=c_ear*inflation2000_2005;
virtuelindk_i_2000=virtuelindk_i*inflation2000_2005;
virtuelindk_h1_2000=virtuelindk_h1*inflation2000_2005;
virtuelindk_h2_2000=virtuelindk_h2*inflation2000_2005;
virtuelindk_i_mec2000=virtuelindk_i_mec*inflation2003_2005;
virtuelindk_h1_mec2000=virtuelindk_h1_mec*inflation2003_2005;
virtuelindk_h2_mec2000=virtuelindk_h2_mec*inflation2003_2005;
tax1_2000=tax1*inflation2000_2005;
c_tax1_2000=c_tax1*inflation2000_2005;
h_tax1_2000=h_tax1*inflation2000_2005;
akt_2000=aktind*inflation2000_2005;
c_akt_2000=c_aktind*inflation2000_2005;
rename tau_arb_i=tau_arb_i2000 
       tau_apers_i=tau_apers_i2000
       tau_kap_i=tau_kap_i2000
	   tau_frad_i=tau_frad_i2000
	   tau_arb_h=tau_arb_h2000 
       tau_apers_h=tau_apers_h2000
       tau_kap_h=tau_kap_h2000
	   tau_frad_h=tau_frad_h2000
	   c_tau_arb_i=c_tau_arb_i2000 
       c_tau_apers_i=c_tau_apers_i2000
       c_tau_kap_i=c_tau_kap_i2000
	   c_tau_frad_i=c_tau_frad_i2000
	   c_tau_arb_h=c_tau_arb_h2000 
       c_tau_apers_h=c_tau_apers_h2000
       c_tau_kap_h=c_tau_kap_h2000
	   c_tau_frad_h=c_tau_frad_h2000
	   tau_arb_i_mec=tau_arb_i_mec2000 
       tau_apers_i_mec=tau_apers_i_mec2000
       tau_kap_i_mec=tau_kap_i_mec2000
	   tau_frad_i_mec=tau_frad_i_mec2000
	   tau_arb_h_mec=tau_arb_h_mec2000 
       tau_apers_h_mec=tau_apers_h_mec2000
       tau_kap_h_mec=tau_kap_h_mec2000
	   tau_frad_h_mec=tau_frad_h_mec2000
	   c_tau_arb_i_mec=c_tau_arb_i_mec2000 
       c_tau_apers_i_mec=c_tau_apers_i_mec2000
       c_tau_kap_i_mec=c_tau_kap_i_mec2000
	   c_tau_frad_i_mec=c_tau_frad_i_mec2000
	   c_tau_arb_h_mec=c_tau_arb_h_mec2000 
       c_tau_apers_h_mec=c_tau_apers_h_mec2000
       c_tau_kap_h_mec=c_tau_kap_h_mec2000
	   c_tau_frad_h_mec=c_tau_frad_h_mec2000
	    tau_akt_h=tau_akt_h2000
	   c_tau_akt_h=c_tau_akt_h2000
	   tau_akt_h_mec=tau_akt_h_mec2000
	   c_tau_akt_h_mec=c_tau_akt_h_mec2000
       
       bdagp=bdagp2000
       qoffpens=qoffpens2000
       arblhu=arblhu2000
       adagp=adagp2000
       stip=stip2000
       /*gift=gift2000*/
       konthj=konthj2000
       reval=reval2000;
if a=1 and b=1 and c=1;
run;


proc datasets library=work; delete ska2000 k g skat2003_indkomst2000; 
run;


Proc sort data=bif.skat2001; by pnr; run;
Proc sort data=bif.skat2004_Indkomst2001; by pnr; run;
Proc sort data=skat2.skat_indk2001; by pnr; run;

data skat2004_indkomst2001;
set bif.skat2004_indkomst2001
(keep=pnr tau_arb_i tau_apers_i tau_kap_i tau_frad_i tau_arb_h tau_apers_h tau_kap_h
tau_frad_h c_tau_arb_i c_tau_apers_i c_tau_kap_i c_tau_frad_i c_tau_arb_h c_tau_apers_h
c_tau_kap_h c_tau_frad_h tau_akt_h c_tau_akt_h virtuelindk_i virtuelindk_h1 virtuelindk_h2 
top_dummy mellem_dummy bund_dummy notax_dummy);
rename
tau_arb_i=tau_arb_i_mec
tau_apers_i=tau_apers_i_mec
tau_kap_i=tau_kap_i_mec
tau_frad_i=tau_frad_i_mec
tau_arb_h=tau_arb_h_mec
tau_apers_h=tau_apers_h_mec
tau_kap_h=tau_kap_h_mec
tau_frad_h=tau_frad_h_mec
tau_akt_h=tau_akt_h_mec
c_tau_arb_i=c_tau_arb_i_mec 
c_tau_apers_i=c_tau_apers_i_mec
c_tau_kap_i=c_tau_kap_i_mec
c_tau_frad_i=c_tau_frad_i_mec
c_tau_arb_h=c_tau_arb_h_mec
c_tau_apers_h=c_tau_apers_h_mec
c_tau_kap_h=c_tau_kap_h_mec
c_tau_frad_h=c_tau_frad_h_mec
c_tau_akt_h=c_tau_akt_h_mec
virtuelindk_i=virtuelindk_i_mec
virtuelindk_h1=virtuelindk_h1_mec 
virtuelindk_h2=virtuelindk_h2_mec top_dummy=top_dummy_mec mellem_dummy=mellem_dummy_mec bund_dummy=bund_dummy_mec notax_dummy=notax_dummy_mec;
run;

data ska2001;
merge bif.skat2001(in=a) skat2004_Indkomst2001 (in=b) 
 skat2.skat_indk2001(keep=pnr omfskpl in=d);
by pnr;
if a=1 and b=1 and d=1;
run;

data k(keep=year inflation2001_2005);
set bif2.inflation(where=(infl2001_2005=1));
inflation2001_2005=inflation;
run;

data g(keep=year inflation2004_2005);
set bif2.inflation(where=(infl2004_2005=1));
inflation2004_2005=inflation;
year=2001;
run;

data skat2001(drop=per cap dec ear c_per c_cap c_dec c_ear per_income c_per_income  virtuelindk_i virtuelindk_h1
virtuelindk_h2 tax1-tax9 c_tax1-c_tax9 h_tax1-h_tax9 x c_arbindk c_kapindk c_apersindk 
c_lignfrad nybundinc nymelleminc nytopinc);
merge ska2001(in=a) k(in=b) g(in=c);
by year;
tt=0;
tm=0;
tb=0;
tn=0;
mt=0;
mm=0;
mb=0;
mn=0;
bt=0;
bm=0;
bb=0;
bn=0;
nt=0;
nm=0;
nb=0;
nn=0;
/*top*/
if top_dummy=1 and top_dummy_mec=1 then tt=1;
if top_dummy=1 and mellem_dummy_mec=1 then tm=1;
if top_dummy=1 and bund_dummy_mec=1 then tb=1;
if top_dummy=1 and notax_dummy_mec=1 then tn=1;
/*mellem*/
if mellem_dummy=1 and top_dummy_mec=1 then mt=1;
if mellem_dummy=1 and mellem_dummy_mec=1 then mm=1;
if mellem_dummy=1 and bund_dummy_mec=1 then mb=1;
if mellem_dummy=1 and notax_dummy_mec=1 then mn=1;
/*bund*/
if bund_dummy=1 and top_dummy_mec=1 then bt=1;
if bund_dummy=1 and mellem_dummy_mec=1 then bm=1;
if bund_dummy=1 and bund_dummy_mec=1 then bb=1;
if bund_dummy=1 and notax_dummy_mec=1 then bn=1;
/*notax*/
if notax_dummy=1 and bund_dummy_mec=1 then nb=1;
if notax_dummy=1 and notax_dummy_mec=1 then nn=1;
if notax_dummy=1 and mellem_dummy_mec=1 then nm=1;
if notax_dummy=1 and top_dummy_mec=1 then nt=1;
if exp=. then exp=0;
if omfskpl=0 then spligt2001=1; else spligt2001=0;
bkink=nybundinc*inflation2001_2005;
mkink=nymelleminc*inflation2001_2005;
tkink=nytopinc*inflation2001_2005;
per_2001=per*inflation2001_2005;
cap_2001=cap*inflation2001_2005;
dec_2001=dec*inflation2001_2005;
ear_2001=ear*inflation2001_2005;
per_income_2001=per_income*inflation2001_2005;
c_per_income_2001=c_per_income*inflation2001_2005;
c_per_2001=c_per*inflation2001_2005;
c_cap_2001=c_cap*inflation2001_2005;
c_dec_2001=c_dec*inflation2001_2005;
c_ear_2001=c_ear*inflation2001_2005;
virtuelindk_i_2001=virtuelindk_i*inflation2001_2005;
virtuelindk_h1_2001=virtuelindk_h1*inflation2001_2005;
virtuelindk_h2_2001=virtuelindk_h2*inflation2001_2005;
virtuelindk_i_mec2001=virtuelindk_i_mec*inflation2004_2005;
virtuelindk_h1_mec2001=virtuelindk_h1_mec*inflation2004_2005;
virtuelindk_h2_mec2001=virtuelindk_h2_mec*inflation2004_2005;
tax1_2001=tax1*inflation2001_2005;
c_tax1_2001=c_tax1*inflation2001_2005;
h_tax1_2001=h_tax1*inflation2001_2005;
akt_2001=aktind*inflation2001_2005;
c_akt_2001=c_aktind*inflation2001_2005;
rename tau_arb_i=tau_arb_i2001 
       tau_apers_i=tau_apers_i2001
       tau_kap_i=tau_kap_i2001
	   tau_frad_i=tau_frad_i2001
	   tau_arb_h=tau_arb_h2001 
       tau_apers_h=tau_apers_h2001
       tau_kap_h=tau_kap_h2001
	   tau_frad_h=tau_frad_h2001
	   c_tau_arb_i=c_tau_arb_i2001 
       c_tau_apers_i=c_tau_apers_i2001
       c_tau_kap_i=c_tau_kap_i2001
	   c_tau_frad_i=c_tau_frad_i2001
	   c_tau_arb_h=c_tau_arb_h2001 
       c_tau_apers_h=c_tau_apers_h2001
       c_tau_kap_h=c_tau_kap_h2001
	   c_tau_frad_h=c_tau_frad_h2001
	   tau_arb_i_mec=tau_arb_i_mec2001 
       tau_apers_i_mec=tau_apers_i_mec2001
       tau_kap_i_mec=tau_kap_i_mec2001
	   tau_frad_i_mec=tau_frad_i_mec2001
	   tau_arb_h_mec=tau_arb_h_mec2001 
       tau_apers_h_mec=tau_apers_h_mec2001
       tau_kap_h_mec=tau_kap_h_mec2001
	   tau_frad_h_mec=tau_frad_h_mec2001
	   c_tau_arb_i_mec=c_tau_arb_i_mec2001 
       c_tau_apers_i_mec=c_tau_apers_i_mec2001
       c_tau_kap_i_mec=c_tau_kap_i_mec2001
	   c_tau_frad_i_mec=c_tau_frad_i_mec2001
	   c_tau_arb_h_mec=c_tau_arb_h_mec2001 
       c_tau_apers_h_mec=c_tau_apers_h_mec2001
       c_tau_kap_h_mec=c_tau_kap_h_mec2001
	   c_tau_frad_h_mec=c_tau_frad_h_mec2001
	    tau_akt_h=tau_akt_h2001
	   c_tau_akt_h=c_tau_akt_h2001
	   tau_akt_h_mec=tau_akt_h_mec2001
	   c_tau_akt_h_mec=c_tau_akt_h_mec2001
      
       bdagp=bdagp2001
       qoffpens=qoffpens2001
       arblhu=arblhu2001
       adagp=adagp2001
       stip=stip2001
       /*gift=gift2001*/
       konthj=konthj2001
       reval=reval2001;
if a=1 and b=1 and c=1;
run;


proc datasets library=work; delete ska2001 k g skat2004_indkomst2001; 
run;


Proc sort data=bif.skat2002; by pnr; run;
Proc sort data=bif.skat2005_Indkomst2002; by pnr; run;
Proc sort data=skat2.skat_indk2002; by pnr; run;

data skat2005_indkomst2002;
set bif.skat2005_indkomst2002
(keep=pnr tau_arb_i tau_apers_i tau_kap_i tau_frad_i tau_arb_h tau_apers_h tau_kap_h
tau_frad_h c_tau_arb_i c_tau_apers_i c_tau_kap_i c_tau_frad_i c_tau_arb_h c_tau_apers_h
c_tau_kap_h c_tau_frad_h tau_akt_h c_tau_akt_h virtuelindk_i virtuelindk_h1 virtuelindk_h2 
top_dummy mellem_dummy bund_dummy notax_dummy);
rename
tau_arb_i=tau_arb_i_mec
tau_apers_i=tau_apers_i_mec
tau_kap_i=tau_kap_i_mec
tau_frad_i=tau_frad_i_mec
tau_arb_h=tau_arb_h_mec
tau_apers_h=tau_apers_h_mec
tau_kap_h=tau_kap_h_mec
tau_frad_h=tau_frad_h_mec
tau_akt_h=tau_akt_h_mec
c_tau_arb_i=c_tau_arb_i_mec 
c_tau_apers_i=c_tau_apers_i_mec
c_tau_kap_i=c_tau_kap_i_mec
c_tau_frad_i=c_tau_frad_i_mec
c_tau_arb_h=c_tau_arb_h_mec
c_tau_apers_h=c_tau_apers_h_mec
c_tau_kap_h=c_tau_kap_h_mec
c_tau_frad_h=c_tau_frad_h_mec
c_tau_akt_h=c_tau_akt_h_mec
virtuelindk_i=virtuelindk_i_mec
virtuelindk_h1=virtuelindk_h1_mec 
virtuelindk_h2=virtuelindk_h2_mec top_dummy=top_dummy_mec mellem_dummy=mellem_dummy_mec bund_dummy=bund_dummy_mec notax_dummy=notax_dummy_mec;
run;

data ska2002;
merge bif.skat2002(in=a) skat2005_Indkomst2002 (in=b) 
 skat2.skat_indk2002(keep=pnr omfang in=d);
by pnr;
if a=1 and b=1 and d=1;
run;

data k(keep=year inflation2002_2005);
set bif2.inflation(where=(infl2002_2005=1));
inflation2002_2005=inflation;
run;

data skat2002(drop=per cap dec ear c_per c_cap c_dec c_ear per_income c_per_income virtuelindk_i virtuelindk_h1
virtuelindk_h2 tax1-tax9 c_tax1-c_tax9 h_tax1-h_tax9 x c_arbindk c_kapindk c_apersindk 
c_lignfrad nybundinc nymelleminc nytopinc);
merge ska2002(in=a) k(in=b);
by year;
tt=0;
tm=0;
tb=0;
tn=0;
mt=0;
mm=0;
mb=0;
mn=0;
bt=0;
bm=0;
bb=0;
bn=0;
nt=0;
nm=0;
nb=0;
nn=0;
/*top*/
if top_dummy=1 and top_dummy_mec=1 then tt=1;
if top_dummy=1 and mellem_dummy_mec=1 then tm=1;
if top_dummy=1 and bund_dummy_mec=1 then tb=1;
if top_dummy=1 and notax_dummy_mec=1 then tn=1;
/*mellem*/
if mellem_dummy=1 and top_dummy_mec=1 then mt=1;
if mellem_dummy=1 and mellem_dummy_mec=1 then mm=1;
if mellem_dummy=1 and bund_dummy_mec=1 then mb=1;
if mellem_dummy=1 and notax_dummy_mec=1 then mn=1;
/*bund*/
if bund_dummy=1 and top_dummy_mec=1 then bt=1;
if bund_dummy=1 and mellem_dummy_mec=1 then bm=1;
if bund_dummy=1 and bund_dummy_mec=1 then bb=1;
if bund_dummy=1 and notax_dummy_mec=1 then bn=1;
/*notax*/
if notax_dummy=1 and bund_dummy_mec=1 then nb=1;
if notax_dummy=1 and notax_dummy_mec=1 then nn=1;
if notax_dummy=1 and mellem_dummy_mec=1 then nm=1;
if notax_dummy=1 and top_dummy_mec=1 then nt=1;
if exp=. then exp=0;
if omfang=1 then spligt2002=1; else spligt2002=0;
bkink=nybundinc*inflation2002_2005;
mkink=nymelleminc*inflation2002_2005;
tkink=nytopinc*inflation2002_2005;
per_2002=per*inflation2002_2005;
cap_2002=cap*inflation2002_2005;
dec_2002=dec*inflation2002_2005;
ear_2002=ear*inflation2002_2005;
per_income_2002=per_income*inflation2002_2005;
c_per_income_2002=c_per_income*inflation2002_2005;
c_per_2002=c_per*inflation2002_2005;
c_cap_2002=c_cap*inflation2002_2005;
c_dec_2002=c_dec*inflation2002_2005;
c_ear_2002=c_ear*inflation2002_2005;
virtuelindk_i_2002=virtuelindk_i*inflation2002_2005;
virtuelindk_h1_2002=virtuelindk_h1*inflation2002_2005;
virtuelindk_h2_2002=virtuelindk_h2*inflation2002_2005;
virtuelindk_i_mec2002=virtuelindk_i_mec;
virtuelindk_h1_mec2002=virtuelindk_h1_mec;
virtuelindk_h2_mec2002=virtuelindk_h2_mec;
tax1_2002=tax1*inflation2002_2005;
c_tax1_2002=c_tax1*inflation2002_2005;
h_tax1_2002=h_tax1*inflation2002_2005;
akt_2002=aktind*inflation2002_2005;
c_akt_2002=c_aktind*inflation2002_2005;
rename tau_arb_i=tau_arb_i2002 
       tau_apers_i=tau_apers_i2002
       tau_kap_i=tau_kap_i2002
	   tau_frad_i=tau_frad_i2002
	   tau_arb_h=tau_arb_h2002 
       tau_apers_h=tau_apers_h2002
       tau_kap_h=tau_kap_h2002
	   tau_frad_h=tau_frad_h2002
	   c_tau_arb_i=c_tau_arb_i2002 
       c_tau_apers_i=c_tau_apers_i2002
       c_tau_kap_i=c_tau_kap_i2002
	   c_tau_frad_i=c_tau_frad_i2002
	   c_tau_arb_h=c_tau_arb_h2002 
       c_tau_apers_h=c_tau_apers_h2002
       c_tau_kap_h=c_tau_kap_h2002
	   c_tau_frad_h=c_tau_frad_h2002
	   tau_arb_i_mec=tau_arb_i_mec2002 
       tau_apers_i_mec=tau_apers_i_mec2002
       tau_kap_i_mec=tau_kap_i_mec2002
	   tau_frad_i_mec=tau_frad_i_mec2002
	   tau_arb_h_mec=tau_arb_h_mec2002 
       tau_apers_h_mec=tau_apers_h_mec2002
       tau_kap_h_mec=tau_kap_h_mec2002
	   tau_frad_h_mec=tau_frad_h_mec2002
	   c_tau_arb_i_mec=c_tau_arb_i_mec2002 
       c_tau_apers_i_mec=c_tau_apers_i_mec2002
       c_tau_kap_i_mec=c_tau_kap_i_mec2002
	   c_tau_frad_i_mec=c_tau_frad_i_mec2002
	   c_tau_arb_h_mec=c_tau_arb_h_mec2002 
       c_tau_apers_h_mec=c_tau_apers_h_mec2002
       c_tau_kap_h_mec=c_tau_kap_h_mec2002
	   c_tau_frad_h_mec=c_tau_frad_h_mec2002
	    tau_akt_h=tau_akt_h2002
	   c_tau_akt_h=c_tau_akt_h2002
	   tau_akt_h_mec=tau_akt_h_mec2002
	   c_tau_akt_h_mec=c_tau_akt_h_mec2002
       
       bdagp=bdagp2002
       qoffpens=qoffpens2002
       arblhu=arblhu2002
       adagp=adagp2002
       stip=stip2002
       /*gift=gift2002*/
       konthj=konthj2002
       reval=reval2002;
if a=1 and b=1;
run;


Proc sort data=bif.skat2003; by pnr; run;
Proc sort data=skat2.skat_indk2003; by pnr; run;

data ska2003;
merge bif.skat2003(in=a) skat2.skat_indk2003(keep=pnr omfang in=d);
by pnr;
if a=1  and d=1;
run;

data k(keep=year inflation2003_2005);
set bif2.inflation(where=(infl2003_2005=1));
inflation2003_2005=inflation;
run;

data skat2003(drop=per cap dec ear c_per c_cap c_dec c_ear per_income c_per_income  virtuelindk_i virtuelindk_h1
virtuelindk_h2 tax1-tax9 c_tax1-c_tax9 h_tax1-h_tax9 x c_arbindk c_kapindk c_apersindk 
c_lignfrad);
merge ska2003(in=a) k(in=b);
by year;
if omfang=1 then spligt2003=1; else spligt2003=0;
per_2003=per*inflation2003_2005;
cap_2003=cap*inflation2003_2005;
dec_2003=dec*inflation2003_2005;
ear_2003=ear*inflation2003_2005;
c_per_2003=c_per*inflation2003_2005;
c_cap_2003=c_cap*inflation2003_2005;
c_dec_2003=c_dec*inflation2003_2005;
c_ear_2003=c_ear*inflation2003_2005;
per_income_2003=per_income*inflation2003_2005;
c_per_income_2003=c_per_income*inflation2003_2005;
virtuelindk_i_2003=virtuelindk_i*inflation2003_2005;
virtuelindk_h1_2003=virtuelindk_h1*inflation2003_2005;
virtuelindk_h2_2003=virtuelindk_h2*inflation2003_2005;
tax1_2003=tax1*inflation2003_2005;
c_tax1_2003=c_tax1*inflation2003_2005;
h_tax1_2003=h_tax1*inflation2003_2005;
akt_2003=aktind*inflation2003_2005;
c_akt_2003=c_aktind*inflation2003_2005;
rename tau_arb_i=tau_arb_i2003 
       tau_apers_i=tau_apers_i2003
       tau_kap_i=tau_kap_i2003
	   tau_frad_i=tau_frad_i2003
	   tau_arb_h=tau_arb_h2003 
       tau_apers_h=tau_apers_h2003
       tau_kap_h=tau_kap_h2003
	   tau_frad_h=tau_frad_h2003
	   c_tau_arb_i=c_tau_arb_i2003 
       c_tau_apers_i=c_tau_apers_i2003
       c_tau_kap_i=c_tau_kap_i2003
	   c_tau_frad_i=c_tau_frad_i2003
	   c_tau_arb_h=c_tau_arb_h2003 
       c_tau_apers_h=c_tau_apers_h2003
       c_tau_kap_h=c_tau_kap_h2003
	   c_tau_frad_h=c_tau_frad_h2003
	    tau_akt_h=tau_akt_h2003
	   c_tau_akt_h=c_tau_akt_h2003
	 
	   	   /*gift=gift2003*/;
	   if a=1 and b=1;
run;


proc datasets library=work; delete ska2003 k; 
run;

Proc sort data=bif.skat2004; by pnr; run;
Proc sort data=skat2.skat_indk2004; by pnr; run;

data ska2004;
merge bif.skat2004(in=a) skat2.skat_indk2004(keep=pnr omfang in=d);
by pnr;
if a=1  and d=1;
run;

data k(keep=year inflation2004_2005);
set bif2.inflation(where=(infl2004_2005=1));
inflation2004_2005=inflation;
run;

data skat2004(drop=per cap dec ear c_per c_cap c_dec c_ear per_income c_per_income  virtuelindk_i virtuelindk_h1
virtuelindk_h2 tax1-tax9 c_tax1-c_tax9 h_tax1-h_tax9 x c_arbindk c_kapindk c_apersindk 
c_lignfrad);
merge ska2004(in=a) k(in=b);
by year;
if omfang=1 then spligt2004=1; else spligt2004=0;
per_2004=per*inflation2004_2005;
cap_2004=cap*inflation2004_2005;
dec_2004=dec*inflation2004_2005;
ear_2004=ear*inflation2004_2005;
per_income_2004=per_income*inflation2004_2005;
c_per_income_2004=c_per_income*inflation2004_2005;
c_per_2004=c_per*inflation2004_2005;
c_cap_2004=c_cap*inflation2004_2005;
c_dec_2004=c_dec*inflation2004_2005;
c_ear_2004=c_ear*inflation2004_2005;
virtuelindk_i_2004=virtuelindk_i*inflation2004_2005;
virtuelindk_h1_2004=virtuelindk_h1*inflation2004_2005;
virtuelindk_h2_2004=virtuelindk_h2*inflation2004_2005;
tax1_2004=tax1*inflation2004_2005;
c_tax1_2004=c_tax1*inflation2004_2005;
h_tax1_2004=h_tax1*inflation2004_2005;
akt_2004=aktind*inflation2004_2005;
c_akt_2004=c_aktind*inflation2004_2005;
rename tau_arb_i=tau_arb_i2004 
       tau_apers_i=tau_apers_i2004
       tau_kap_i=tau_kap_i2004
	   tau_frad_i=tau_frad_i2004
	   tau_arb_h=tau_arb_h2004 
       tau_apers_h=tau_apers_h2004
       tau_kap_h=tau_kap_h2004
	   tau_frad_h=tau_frad_h2004
	   c_tau_arb_i=c_tau_arb_i2004 
       c_tau_apers_i=c_tau_apers_i2004
       c_tau_kap_i=c_tau_kap_i2004
	   c_tau_frad_i=c_tau_frad_i2004
	   c_tau_arb_h=c_tau_arb_h2004 
       c_tau_apers_h=c_tau_apers_h2004
       c_tau_kap_h=c_tau_kap_h2004
	   c_tau_frad_h=c_tau_frad_h2004
	   tau_akt_h=tau_akt_h2004
	   c_tau_akt_h=c_tau_akt_h2004
	   /*gift=gift2004*/;
	   if a=1 and b=1;
run;


proc datasets library=work; delete ska2004 k; 
run;


Proc sort data=bif.skat2005; by pnr; run;
Proc sort data=skat2.skat_indk2005; by pnr; run;


data skat2005(drop=per cap dec ear c_per c_cap c_dec c_ear per_income c_per_income  virtuelindk_i virtuelindk_h1
virtuelindk_h2 tax1-tax9 c_tax1-c_tax9 h_tax1-h_tax9 x c_arbindk c_kapindk c_apersindk 
c_lignfrad);
merge bif.skat2005(in=a) skat2.skat_indk2005(keep=pnr omfang in=b);
by pnr;
if omfang=1 then spligt2005=1; else spligt2005=0;
per_2005=per;
cap_2005=cap;
dec_2005=dec;
ear_2005=ear;
per_income_2005=per_income;
c_per_income_2005=c_per_income;
c_per_2005=c_per;
c_cap_2005=c_cap;
c_dec_2005=c_dec;
c_ear_2005=c_ear;
virtuelindk_i_2005=virtuelindk_i;
virtuelindk_h1_2005=virtuelindk_h1;
virtuelindk_h2_2005=virtuelindk_h2;
tax1_2005=tax1;
c_tax1_2005=c_tax1;
h_tax1_2005=h_tax1;
akt_2005=aktind;
c_akt_2005=c_aktind;
rename tau_arb_i=tau_arb_i2005 
       tau_apers_i=tau_apers_i2005
       tau_kap_i=tau_kap_i2005
	   tau_frad_i=tau_frad_i2005
	   tau_arb_h=tau_arb_h2005 
       tau_apers_h=tau_apers_h2005
       tau_kap_h=tau_kap_h2005
	   tau_frad_h=tau_frad_h2005
	   c_tau_arb_i=c_tau_arb_i2005 
       c_tau_apers_i=c_tau_apers_i2005
       c_tau_kap_i=c_tau_kap_i2005
	   c_tau_frad_i=c_tau_frad_i2005
	   c_tau_arb_h=c_tau_arb_h2005 
       c_tau_apers_h=c_tau_apers_h2005
       c_tau_kap_h=c_tau_kap_h2005
	   c_tau_frad_h=c_tau_frad_h2005
	   tau_akt_h=tau_akt_h2005
	   c_tau_akt_h=c_tau_akt_h2005
	   /*gift=gift2005*/;
	   if a=1 and b=1;
run;


proc datasets library=work; delete ska2005 k; 
run;

/* STEP 2: USING DATA FROM STEP 1, THIS STEP MERGES DATA FOR YEAR T WITH DATA FOR YEAR T+3 AND SELECT THE ESTIMATION SAMPLE */

data tax1984(drop=spligt1984 spligt1987  adagp1984 bdagp1984
             arblhu1984 stip1984 qsocyd1984 qoffpens1984 pstill inflation1984_2005
             inflation1987_2005 omfskpl);
merge skat1984 (in=a) 
      skat1987(keep=pnr per_1987 cap_1987 dec_1987 ear_1987 c_per_1987 tax1_1987 
		       c_tax1_1987 h_tax1_1987 per_income_1987 c_per_income_1987 
               c_cap_1987 c_dec_1987 c_ear_1987 virtuelindk_i_1987 virtuelindk_h1_1987
               virtuelindk_h2_1987 spligt1987 tau_arb_i1987 tau_apers_i1987 tau_kap_i1987
	           tau_frad_i1987 tau_arb_h1987 tau_apers_h1987 tau_kap_h1987 tau_frad_h1987
	           c_tau_arb_i1987 c_tau_apers_i1987 c_tau_kap_i1987 c_tau_frad_i1987
	           c_tau_arb_h1987 c_tau_apers_h1987 c_tau_kap_h1987 c_tau_frad_h1987 tau_akt_h1987
c_tau_akt_h1987 in=b);
 by pnr;
/* Personer skal være i arbejde i år s */
occ=2;
if 11<=pstill<=20 then occ=1; /* selvstændige */
/*if 31<=pstill<=37 then occ=2;*/ /* lønmodtagere */
/*if occ=3 then delete;*/
/* Personer skal være fuldt ud skattepligtige i år s og s+3 */
if spligt1984=0 then delete;
if spligt1987=0 then delete;
/* Personer skal være i alderen 25-55 år i år s*/
if alder>70 then delete;
if alder<15 then delete;
/* Personer må ikke modtage sociale overførsler i år s */
/*if adagp1984>0 then delete;
if arblhu1984>0 then delete;
if bdagp1984>0 then delete;
if stip1984>0 then delete;*/
if pstill=50 then delete;
if pstill in (92,92,94) then delete;
/*if qsocyd1984>0 then delete;*/
/* Personer, hvor alle marginalskater er nul, fjernes fra sample */
if tau_arb_i1984=0 and tau_apers_i1984=0 and tau_kap_i1984=0 and tau_frad_i1984=0
and tau_arb_h1984=0 and tau_apers_h1984=0 and tau_kap_h1984=0 and tau_frad_h1984=0 then delete;
if tau_arb_i_mec1984=0 and tau_apers_i_mec1984=0 and tau_kap_i_mec1984=0 and tau_frad_i_mec1984=0
and tau_arb_h_mec1984=0 and tau_apers_h_mec1984=0 and tau_kap_h_mec1984=0 and tau_frad_h_mec1984=0 then delete;
if tau_arb_i1987=0 and tau_apers_i1987=0 and tau_kap_i1987=0 and tau_frad_i1987=0
and tau_arb_h1987=0 and tau_apers_h1987=0 and tau_kap_h1987=0 and tau_frad_h1987=0 then delete;
/* Personer, hvor alle virtuelindkomster er ikke positiv, fjernes fra sample */
if virtuelindk_i_1984<=0 and virtuelindk_h1_1984<=0 and virtuelindk_h2_1984<=0 then delete;
if virtuelindk_i_mec1984<=0 and virtuelindk_h1_mec1984<=0 and virtuelindk_h2_mec1984<=0 then delete;
if virtuelindk_i_1987<=0 and virtuelindk_h1_1987<=0 and virtuelindk_h2_1987<=0 then delete;
if a=1 and b=1;
run;


data tax1985(drop=spligt1985 spligt1988  adagp1985 bdagp1985
             arblhu1985 stip1985 qsocyd1985 qoffpens1985 pstill inflation1985_2005
             inflation1988_2005 omfskpl);
merge skat1985 (in=a) 
      skat1988(keep=pnr per_1988 cap_1988 dec_1988 ear_1988 c_per_1988 per_income_1988 c_per_income_1988
               tax1_1988 c_tax1_1988 h_tax1_1988 tau_akt_h1988 c_tau_akt_h1988 
               c_cap_1988 c_dec_1988 c_ear_1988 virtuelindk_i_1988 virtuelindk_h1_1988
               virtuelindk_h2_1988 spligt1988 tau_arb_i1988 tau_apers_i1988 tau_kap_i1988
	           tau_frad_i1988 tau_arb_h1988 tau_apers_h1988 tau_kap_h1988 tau_frad_h1988
	           c_tau_arb_i1988 c_tau_apers_i1988 c_tau_kap_i1988 c_tau_frad_i1988 
	           c_tau_arb_h1988 c_tau_apers_h1988 c_tau_kap_h1988 c_tau_frad_h1988 in=b);
 by pnr;
/* Personer skal være i arbejde i år s */
occ=3;
if 11<=pstill<=20 then occ=1; /* selvstændige */
/*if 31<=pstill<=37 then occ=2; 
if occ=3 then delete;*/
/* Personer skal være fuldt ud skattepligtige i år s og s+3 */
if spligt1985=0 then delete;
if spligt1988=0 then delete;
/* Personer skal være i alderen 25-55 år i år s*/
if alder>70 then delete;
if alder<15 then delete;
/* Personer må ikke modtage sociale overførsler i år s */
/*if adagp1985>0 then delete;
if arblhu1985>0 then delete;
if bdagp1985>0 then delete;
if stip1985>0 then delete;*/
if pstill=50 then delete;
if pstill in (92,92,94) then delete;
/*if qsocyd1985>0 then delete;*/

/* Personer, hvor alle marginalskater er nul, fjernes fra sample */
if tau_arb_i1985=0 and tau_apers_i1985=0 and tau_kap_i1985=0 and tau_frad_i1985=0
and tau_arb_h1985=0 and tau_apers_h1985=0 and tau_kap_h1985=0 and tau_frad_h1985=0 then delete;
if tau_arb_i_mec1985=0 and tau_apers_i_mec1985=0 and tau_kap_i_mec1985=0 and tau_frad_i_mec1985=0
and tau_arb_h_mec1985=0 and tau_apers_h_mec1985=0 and tau_kap_h_mec1985=0 and tau_frad_h_mec1985=0 then delete;
if tau_arb_i1988=0 and tau_apers_i1988=0 and tau_kap_i1988=0 and tau_frad_i1988=0
and tau_arb_h1988=0 and tau_apers_h1988=0 and tau_kap_h1988=0 and tau_frad_h1988=0 then delete;
/* Personer, hvor alle virtuelindkomster er ikke positiv, fjernes fra sample */
if virtuelindk_i_1985<=0 and virtuelindk_h1_1985<=0 and virtuelindk_h2_1985<=0 then delete;
if virtuelindk_i_mec1985<=0 and virtuelindk_h1_mec1985<=0 and virtuelindk_h2_mec1985<=0 then delete;
if virtuelindk_i_1988<=0 and virtuelindk_h1_1988<=0 and virtuelindk_h2_1988<=0 then delete;
if a=1 and b=1;
run;


data tax1986(drop=spligt1986 spligt1989  adagp1986 bdagp1986
             arblhu1986 stip1986 qsocyd1986 qoffpens1986 pstill inflation1986_2005
             inflation1989_2005 omfskpl);
merge skat1986 (in=a) 
      skat1989(keep=pnr per_1989 cap_1989 dec_1989 ear_1989 c_per_1989
	           tax1_1989 c_tax1_1989 h_tax1_1989 tau_akt_h1989
c_tau_akt_h1989  per_income_1989 c_per_income_1989
               c_cap_1989 c_dec_1989 c_ear_1989 virtuelindk_i_1989 virtuelindk_h1_1989
               virtuelindk_h2_1989 spligt1989 tau_arb_i1989 tau_apers_i1989 tau_kap_i1989
	           tau_frad_i1989 tau_arb_h1989 tau_apers_h1989 tau_kap_h1989 tau_frad_h1989
	           c_tau_arb_i1989 c_tau_apers_i1989 c_tau_kap_i1989 c_tau_frad_i1989
	           c_tau_arb_h1989 c_tau_apers_h1989 c_tau_kap_h1989 c_tau_frad_h1989 in=b);
 by pnr;
/* Personer skal være i arbejde i år s */
occ=2;
if 11<=pstill<=20 then occ=1; /* selvstændige */

/* Personer skal være fuldt ud skattepligtige i år s og s+3 */
if spligt1986=0 then delete;
if spligt1989=0 then delete;
/* Personer skal være i alderen 25-55 år i år s*/
if alder>70 then delete;
if alder<15 then delete;
/* Personer må ikke modtage sociale overførsler i år s */
/*if adagp1986>0 then delete;
if arblhu1986>0 then delete;
if bdagp1986>0 then delete;
if stip1986>0 then delete;*/
if pstill=50 then delete;
if pstill in (92,92,94) then delete;
/*if qsocyd1986>0 then delete;*/
/* Personer, hvor alle marginalskater er nul, fjernes fra sample */
if tau_arb_i1986=0 and tau_apers_i1986=0 and tau_kap_i1986=0 and tau_frad_i1986=0
and tau_arb_h1986=0 and tau_apers_h1986=0 and tau_kap_h1986=0 and tau_frad_h1986=0 then delete;
if tau_arb_i_mec1986=0 and tau_apers_i_mec1986=0 and tau_kap_i_mec1986=0 and tau_frad_i_mec1986=0
and tau_arb_h_mec1986=0 and tau_apers_h_mec1986=0 and tau_kap_h_mec1986=0 and tau_frad_h_mec1986=0 then delete;
if tau_arb_i1989=0 and tau_apers_i1989=0 and tau_kap_i1989=0 and tau_frad_i1989=0
and tau_arb_h1989=0 and tau_apers_h1989=0 and tau_kap_h1989=0 and tau_frad_h1989=0 then delete;
/* Personer, hvor alle virtuelindkomster er ikke positiv, fjernes fra sample */
if virtuelindk_i_1986<=0 and virtuelindk_h1_1986<=0 and virtuelindk_h2_1986<=0 then delete;
if virtuelindk_i_mec1986<=0 and virtuelindk_h1_mec1986<=0 and virtuelindk_h2_mec1986<=0 then delete;
if virtuelindk_i_1989<=0 and virtuelindk_h1_1989<=0 and virtuelindk_h2_1989<=0 then delete;
if a=1 and b=1;
run;


data tax1987(drop=spligt1987 spligt1990  adagp1987 bdagp1987
             arblhu1987 stip1987 qsocyd1987 qoffpens1987 pstill inflation1987_2005
             inflation1990_2005 omfskpl);
merge skat1987 (in=a) 
      skat1990(keep=pnr per_1990 cap_1990 dec_1990 ear_1990 c_per_1990
	           tax1_1990 c_tax1_1990 h_tax1_1990 tau_akt_h1990
c_tau_akt_h1990  per_income_1990 c_per_income_1990
               c_cap_1990 c_dec_1990 c_ear_1990 virtuelindk_i_1990 virtuelindk_h1_1990
               virtuelindk_h2_1990 spligt1990 tau_arb_i1990 tau_apers_i1990 tau_kap_i1990
	           tau_frad_i1990 tau_arb_h1990 tau_apers_h1990 tau_kap_h1990 tau_frad_h1990
	           c_tau_arb_i1990 c_tau_apers_i1990 c_tau_kap_i1990 c_tau_frad_i1990 
	           c_tau_arb_h1990 c_tau_apers_h1990 c_tau_kap_h1990 c_tau_frad_h1990 in=b);
 by pnr;
/* Personer skal være i arbejde i år s */
occ=2;
if 11<=pstill<=20 then occ=1; /* selvstændige */
/* Personer skal være fuldt ud skattepligtige i år s og s+3 */
if spligt1987=0 then delete;
if spligt1990=0 then delete;
/* Personer skal være i alderen 25-55 år i år s*/
if alder>70 then delete;
if alder<15 then delete;
/* Personer må ikke modtage sociale overførsler i år s */
/*if adagp1987>0 then delete;
if arblhu1987>0 then delete;
if bdagp1987>0 then delete;
if stip1987>0 then delete;*/
if pstill=50 then delete;
if pstill in (92,92,94) then delete;
/*if qsocyd1987>0 then delete;*/
/* Personer, hvor alle marginalskater er nul, fjernes fra sample */
if tau_arb_i1987=0 and tau_apers_i1987=0 and tau_kap_i1987=0 and tau_frad_i1987=0
and tau_arb_h1987=0 and tau_apers_h1987=0 and tau_kap_h1987=0 and tau_frad_h1987=0 then delete;
if tau_arb_i_mec1987=0 and tau_apers_i_mec1987=0 and tau_kap_i_mec1987=0 and tau_frad_i_mec1987=0
and tau_arb_h_mec1987=0 and tau_apers_h_mec1987=0 and tau_kap_h_mec1987=0 and tau_frad_h_mec1987=0 then delete;
if tau_arb_i1990=0 and tau_apers_i1990=0 and tau_kap_i1990=0 and tau_frad_i1990=0
and tau_arb_h1990=0 and tau_apers_h1990=0 and tau_kap_h1990=0 and tau_frad_h1990=0 then delete;
/* Personer, hvor alle virtuelindkomster er ikke positiv, fjernes fra sample */
if virtuelindk_i_1987<=0 and virtuelindk_h1_1987<=0 and virtuelindk_h2_1987<=0 then delete;
if virtuelindk_i_mec1987<=0 and virtuelindk_h1_mec1987<=0 and virtuelindk_h2_mec1987<=0 then delete;
if virtuelindk_i_1990<=0 and virtuelindk_h1_1990<=0 and virtuelindk_h2_1990<=0 then delete;
if a=1 and b=1;
run;


data tax1988(drop=spligt1988 spligt1991 adagp1988 bdagp1988
             arblhu1988 stip1988 qsocyd1988 qoffpens1988 pstill inflation1988_2005
             inflation1991_2005 omfskpl);
merge skat1988 (in=a) 
      skat1991(keep=pnr per_1991 cap_1991 dec_1991 ear_1991 c_per_1991
	           tax1_1991 c_tax1_1991 h_tax1_1991 tau_akt_h1991
c_tau_akt_h1991  per_income_1991 c_per_income_1991
               c_cap_1991 c_dec_1991 c_ear_1991 virtuelindk_i_1991 virtuelindk_h1_1991
               virtuelindk_h2_1991 spligt1991 tau_arb_i1991 tau_apers_i1991 tau_kap_i1991
	           tau_frad_i1991 tau_arb_h1991 tau_apers_h1991 tau_kap_h1991 tau_frad_h1991
	           c_tau_arb_i1991 c_tau_apers_i1991 c_tau_kap_i1991 c_tau_frad_i1991 
	           c_tau_arb_h1991 c_tau_apers_h1991 c_tau_kap_h1991 c_tau_frad_h1991 in=b);
 by pnr;
/* Personer skal være i arbejde i år s */
occ=2;
if 11<=pstill<=20 then occ=1; /* selvstændige */
/* Personer skal være fuldt ud skattepligtige i år s og s+3 */
if spligt1988=0 then delete;
if spligt1991=0 then delete;
/* Personer skal være i alderen 25-55 år i år s*/
if alder>70 then delete;
if alder<15 then delete;
/* Personer må ikke modtage sociale overførsler i år s */
/*if adagp1988>0 then delete;
if arblhu1988>0 then delete;
if bdagp1988>0 then delete;
if stip1988>0 then delete;*/
if pstill=50 then delete;
if pstill in (92,92,94) then delete;
/*if qsocyd1988>0 then delete;*/
/* Personer, hvor alle marginalskater er nul, fjernes fra sample */
if tau_arb_i1988=0 and tau_apers_i1988=0 and tau_kap_i1988=0 and tau_frad_i1988=0
and tau_arb_h1988=0 and tau_apers_h1988=0 and tau_kap_h1988=0 and tau_frad_h1988=0 then delete;
if tau_arb_i_mec1988=0 and tau_apers_i_mec1988=0 and tau_kap_i_mec1988=0 and tau_frad_i_mec1988=0
and tau_arb_h_mec1988=0 and tau_apers_h_mec1988=0 and tau_kap_h_mec1988=0 and tau_frad_h_mec1988=0 then delete;
if tau_arb_i1991=0 and tau_apers_i1991=0 and tau_kap_i1991=0 and tau_frad_i1991=0
and tau_arb_h1991=0 and tau_apers_h1991=0 and tau_kap_h1991=0 and tau_frad_h1991=0 then delete;
/* Personer, hvor alle virtuelindkomster er ikke positiv, fjernes fra sample */
if virtuelindk_i_1988<=0 and virtuelindk_h1_1988<=0 and virtuelindk_h2_1988<=0 then delete;
if virtuelindk_i_mec1988<=0 and virtuelindk_h1_mec1988<=0 and virtuelindk_h2_mec1988<=0 then delete;
if virtuelindk_i_1991<=0 and virtuelindk_h1_1991<=0 and virtuelindk_h2_1991<=0 then delete;
if a=1 and b=1;
run;



data tax1989(drop=spligt1989 spligt1992  adagp1989 bdagp1989
             arblhu1989 stip1989 qsocyd1989 qoffpens1989 pstill inflation1989_2005
             inflation1992_2005 omfskpl);
merge skat1989 (in=a) 
      skat1992(keep=pnr per_1992 cap_1992 dec_1992 ear_1992 c_per_1992
	           tax1_1992 c_tax1_1992 h_tax1_1992 tau_akt_h1992
c_tau_akt_h1992  per_income_1992 c_per_income_1992
               c_cap_1992 c_dec_1992 c_ear_1992 virtuelindk_i_1992 virtuelindk_h1_1992
               virtuelindk_h2_1992 spligt1992 tau_arb_i1992 tau_apers_i1992 tau_kap_i1992
	           tau_frad_i1992 tau_arb_h1992 tau_apers_h1992 tau_kap_h1992 tau_frad_h1992
	           c_tau_arb_i1992 c_tau_apers_i1992 c_tau_kap_i1992 c_tau_frad_i1992
	           c_tau_arb_h1992 c_tau_apers_h1992 c_tau_kap_h1992 c_tau_frad_h1992 in=b);
 by pnr;
/* Personer skal være i arbejde i år s */
occ=2;
if 11<=pstill<=20 then occ=1; /* selvstændige */
/* Personer skal være fuldt ud skattepligtige i år s og s+3 */
if spligt1989=0 then delete;
if spligt1992=0 then delete;
/* Personer skal være i alderen 25-55 år i år s*/
if alder>70 then delete;
if alder<15 then delete;
/* Personer må ikke modtage sociale overførsler i år s */
/*if adagp1989>0 then delete;
if arblhu1989>0 then delete;
if bdagp1989>0 then delete;
if stip1989>0 then delete;*/
if pstill=50 then delete;
if pstill in (92,92,94) then delete;
/*if qsocyd1989>0 then delete;*/
/* Personer, hvor alle marginalskater er nul, fjernes fra sample */
if tau_arb_i1989=0 and tau_apers_i1989=0 and tau_kap_i1989=0 and tau_frad_i1989=0
and tau_arb_h1989=0 and tau_apers_h1989=0 and tau_kap_h1989=0 and tau_frad_h1989=0 then delete;
if tau_arb_i_mec1989=0 and tau_apers_i_mec1989=0 and tau_kap_i_mec1989=0 and tau_frad_i_mec1989=0
and tau_arb_h_mec1989=0 and tau_apers_h_mec1989=0 and tau_kap_h_mec1989=0 and tau_frad_h_mec1989=0 then delete;
if tau_arb_i1992=0 and tau_apers_i1992=0 and tau_kap_i1992=0 and tau_frad_i1992=0
and tau_arb_h1992=0 and tau_apers_h1992=0 and tau_kap_h1992=0 and tau_frad_h1992=0 then delete;
/* Personer, hvor alle virtuelindkomster er ikke positiv, fjernes fra sample */
if virtuelindk_i_1989<=0 and virtuelindk_h1_1989<=0 and virtuelindk_h2_1989<=0 then delete;
if virtuelindk_i_mec1989<=0 and virtuelindk_h1_mec1989<=0 and virtuelindk_h2_mec1989<=0 then delete;
if virtuelindk_i_1992<=0 and virtuelindk_h1_1992<=0 and virtuelindk_h2_1992<=0 then delete;
if a=1 and b=1;
run;



data tax1990(drop=spligt1990 spligt1993 adagp1990 bdagp1990
             arblhu1990 stip1990 qsocyd1990 qoffpens1990 pstill inflation1990_2005
             inflation1993_2005 omfskpl);
merge skat1990 (in=a) 
      skat1993(keep=pnr per_1993 cap_1993 dec_1993 ear_1993 c_per_1993
	           tax1_1993 c_tax1_1993 h_tax1_1993 tau_akt_h1993
c_tau_akt_h1993  per_income_1993 c_per_income_1993
               c_cap_1993 c_dec_1993 c_ear_1993 virtuelindk_i_1993 virtuelindk_h1_1993
               virtuelindk_h2_1993 spligt1993 tau_arb_i1993 tau_apers_i1993 tau_kap_i1993
	           tau_frad_i1993 tau_arb_h1993 tau_apers_h1993 tau_kap_h1993 tau_frad_h1993
	           c_tau_arb_i1993 c_tau_apers_i1993 c_tau_kap_i1993 c_tau_frad_i1993
	           c_tau_arb_h1993 c_tau_apers_h1993 c_tau_kap_h1993 c_tau_frad_h1993 in=b);
 by pnr;
/* Personer skal være i arbejde i år s */
occ=2;
if 11<=pstill<=20 then occ=1; /* selvstændige */
/* Personer skal være fuldt ud skattepligtige i år s og s+3 */
if spligt1990=0 then delete;
if spligt1993=0 then delete;
/* Personer skal være i alderen 25-55 år i år s*/
if alder>70 then delete;
if alder<25 then delete;
/* Personer må ikke modtage sociale overførsler i år s */
/*if adagp1990>0 then delete;
if arblhu1990>0 then delete;
if bdagp1990>0 then delete;
if stip1990>0 then delete;*/
if pstill=50 then delete;
if pstill in (92,92,94) then delete;
/*if qsocyd1990>0 then delete;*/
/* Personer, hvor alle marginalskater er nul, fjernes fra sample */
if tau_arb_i1990=0 and tau_apers_i1990=0 and tau_kap_i1990=0 and tau_frad_i1990=0
and tau_arb_h1990=0 and tau_apers_h1990=0 and tau_kap_h1990=0 and tau_frad_h1990=0 then delete;
if tau_arb_i_mec1990=0 and tau_apers_i_mec1990=0 and tau_kap_i_mec1990=0 and tau_frad_i_mec1990=0
and tau_arb_h_mec1990=0 and tau_apers_h_mec1990=0 and tau_kap_h_mec1990=0 and tau_frad_h_mec1990=0 then delete;
if tau_arb_i1993=0 and tau_apers_i1993=0 and tau_kap_i1993=0 and tau_frad_i1993=0
and tau_arb_h1993=0 and tau_apers_h1993=0 and tau_kap_h1993=0 and tau_frad_h1993=0 then delete;
/* Personer, hvor alle virtuelindkomster er ikke positiv, fjernes fra sample */
if virtuelindk_i_1990<=0 and virtuelindk_h1_1990<=0 and virtuelindk_h2_1990<=0 then delete;
if virtuelindk_i_mec1990<=0 and virtuelindk_h1_mec1990<=0 and virtuelindk_h2_mec1990<=0 then delete;
if virtuelindk_i_1993<=0 and virtuelindk_h1_1993<=0 and virtuelindk_h2_1993<=0 then delete;
if a=1 and b=1;
run;

data tax1991(drop=spligt1991 spligt1994 adagp1991 bdagp1991
             arblhu1991 stip1991 qsocyd1991 qoffpens1991 pstill inflation1991_2005
             inflation1994_2005 omfskpl);
merge skat1991 (in=a) 
      skat1994(keep=pnr per_1994 cap_1994 dec_1994 ear_1994 c_per_1994
	           tax1_1994 c_tax1_1994 h_tax1_1994 tau_akt_h1994
c_tau_akt_h1994   per_income_1994 c_per_income_1994
               c_cap_1994 c_dec_1994 c_ear_1994 virtuelindk_i_1994 virtuelindk_h1_1994
               virtuelindk_h2_1994 spligt1994 tau_arb_i1994 tau_apers_i1994 tau_kap_i1994
	           tau_frad_i1994 tau_arb_h1994 tau_apers_h1994 tau_kap_h1994 tau_frad_h1994
	           c_tau_arb_i1994 c_tau_apers_i1994 c_tau_kap_i1994 c_tau_frad_i1994 akt_1994
c_akt_1994
	           c_tau_arb_h1994 c_tau_apers_h1994 c_tau_kap_h1994 c_tau_frad_h1994 in=b);
 by pnr;
/* Personer skal være i arbejde i år s */
occ=2;
if 11<=pstill<=20 then occ=1; /* selvstændige */
/* Personer skal være fuldt ud skattepligtige i år s og s+3 */
if spligt1991=0 then delete;
if spligt1994=0 then delete;
/* Personer skal være i alderen 25-55 år i år s*/
if alder>70 then delete;
if alder<15 then delete;
/* Personer må ikke modtage sociale overførsler i år s */
if pstill=50 then delete;
if pstill in (92,92,94) then delete;
/* Personer, hvor alle marginalskater er nul, fjernes fra sample */
if tau_arb_i1991=0 and tau_apers_i1991=0 and tau_kap_i1991=0 and tau_frad_i1991=0
and tau_arb_h1991=0 and tau_apers_h1991=0 and tau_kap_h1991=0 and tau_frad_h1991=0 then delete;
if tau_arb_i_mec1991=0 and tau_apers_i_mec1991=0 and tau_kap_i_mec1991=0 and tau_frad_i_mec1991=0
and tau_arb_h_mec1991=0 and tau_apers_h_mec1991=0 and tau_kap_h_mec1991=0 and tau_frad_h_mec1991=0 then delete;
if tau_arb_i1994=0 and tau_apers_i1994=0 and tau_kap_i1994=0 and tau_frad_i1994=0
and tau_arb_h1994=0 and tau_apers_h1994=0 and tau_kap_h1994=0 and tau_frad_h1994=0 then delete;
/* Personer, hvor alle virtuelindkomster er ikke positiv, fjernes fra sample */
if virtuelindk_i_1991<=0 and virtuelindk_h1_1991<=0 and virtuelindk_h2_1991<=0 then delete;
if virtuelindk_i_mec1991<=0 and virtuelindk_h1_mec1991<=0 and virtuelindk_h2_mec1991<=0 then delete;
if virtuelindk_i_1994<=0 and virtuelindk_h1_1994<=0 and virtuelindk_h2_1994<=0 then delete;
if a=1 and b=1;
run;


data tax1992(drop=spligt1992 spligt1995  adagp1992 bdagp1992
             arblhu1992 stip1992 qsocyd1992 qoffpens1992 pstill inflation1992_2005
             inflation1995_2005 omfskpl);
merge skat1992 (in=a) 
      skat1995(keep=pnr per_1995 cap_1995 dec_1995 ear_1995 c_per_1995
	           tax1_1995 c_tax1_1995 h_tax1_1995 tau_akt_h1995
c_tau_akt_h1995   per_income_1995 c_per_income_1995
               c_cap_1995 c_dec_1995 c_ear_1995 virtuelindk_i_1995 virtuelindk_h1_1995
               virtuelindk_h2_1995 spligt1995 tau_arb_i1995 tau_apers_i1995 tau_kap_i1995
	           tau_frad_i1995 tau_arb_h1995 tau_apers_h1995 tau_kap_h1995 tau_frad_h1995
	           c_tau_arb_i1995 c_tau_apers_i1995 c_tau_kap_i1995 c_tau_frad_i1995 akt_1995 c_akt_1995
	           c_tau_arb_h1995 c_tau_apers_h1995 c_tau_kap_h1995 c_tau_frad_h1995 in=b);
 by pnr;
/* Personer skal være i arbejde i år s */
occ=2;
if 11<=pstill<=20 then occ=1; /* selvstændige */
/* Personer skal være fuldt ud skattepligtige i år s og s+3 */
if spligt1992=0 then delete;
if spligt1995=0 then delete;
/* Personer skal være i alderen 25-55 år i år s*/
if alder>70 then delete;
if alder<15 then delete;
/* Personer må ikke modtage sociale overførsler i år s */
if pstill=50 then delete;
if pstill in (92,92,94) then delete;

/* Personer må ikke skifte ægteskabelig status mellem år s og s+3 */

/* Personer, hvor alle marginalskater er nul, fjernes fra sample */
if tau_arb_i1992=0 and tau_apers_i1992=0 and tau_kap_i1992=0 and tau_frad_i1992=0
and tau_arb_h1992=0 and tau_apers_h1992=0 and tau_kap_h1992=0 and tau_frad_h1992=0 then delete;
if tau_arb_i_mec1992=0 and tau_apers_i_mec1992=0 and tau_kap_i_mec1992=0 and tau_frad_i_mec1992=0
and tau_arb_h_mec1992=0 and tau_apers_h_mec1992=0 and tau_kap_h_mec1992=0 and tau_frad_h_mec1992=0 then delete;
if tau_arb_i1995=0 and tau_apers_i1995=0 and tau_kap_i1995=0 and tau_frad_i1995=0
and tau_arb_h1995=0 and tau_apers_h1995=0 and tau_kap_h1995=0 and tau_frad_h1995=0 then delete;
/* Personer, hvor alle virtuelindkomster er ikke positiv, fjernes fra sample */
if virtuelindk_i_1992<=0 and virtuelindk_h1_1992<=0 and virtuelindk_h2_1992<=0 then delete;
if virtuelindk_i_mec1992<=0 and virtuelindk_h1_mec1992<=0 and virtuelindk_h2_mec1992<=0 then delete;
if virtuelindk_i_1995<=0 and virtuelindk_h1_1995<=0 and virtuelindk_h2_1995<=0 then delete;
if a=1 and b=1;
run;


data tax1993(drop=spligt1993 spligt1996  adagp1993 bdagp1993
             arblhu1993 stip1993 qsocyd1993 qoffpens1993 pstill inflation1993_2005
             inflation1996_2005 omfskpl);
merge skat1993 (in=a) 
      skat1996(keep=pnr per_1996 cap_1996 dec_1996 ear_1996 c_per_1996
	           tax1_1996 c_tax1_1996 h_tax1_1996 tau_akt_h1996
c_tau_akt_h1996   per_income_1996 c_per_income_1996
               c_cap_1996 c_dec_1996 c_ear_1996 virtuelindk_i_1996 virtuelindk_h1_1996
               virtuelindk_h2_1996 spligt1996 tau_arb_i1996 tau_apers_i1996 tau_kap_i1996
	           tau_frad_i1996 tau_arb_h1996 tau_apers_h1996 tau_kap_h1996 tau_frad_h1996
	           c_tau_arb_i1996 c_tau_apers_i1996 c_tau_kap_i1996 c_tau_frad_i1996 akt_1996 c_akt_1996
	           c_tau_arb_h1996 c_tau_apers_h1996 c_tau_kap_h1996 c_tau_frad_h1996 in=b);
 by pnr;
/* Personer skal være i arbejde i år s */
occ=2;
if 11<=pstill<=20 then occ=1; /* selvstændige */
/* Personer skal være fuldt ud skattepligtige i år s og s+3 */
if spligt1993=0 then delete;
if spligt1996=0 then delete;
/* Personer skal være i alderen 25-55 år i år s*/
if alder>70 then delete;
if alder<15 then delete;
/* Personer må ikke modtage sociale overførsler i år s */
if pstill=50 then delete;
if pstill in (92,92,94) then delete;

/* Personer må ikke skifte ægteskabelig status mellem år s og s+3 */

/* Personer, hvor alle marginalskater er nul, fjernes fra sample */
if tau_arb_i1993=0 and tau_apers_i1993=0 and tau_kap_i1993=0 and tau_frad_i1993=0
and tau_arb_h1993=0 and tau_apers_h1993=0 and tau_kap_h1993=0 and tau_frad_h1993=0 then delete;
if tau_arb_i_mec1993=0 and tau_apers_i_mec1993=0 and tau_kap_i_mec1993=0 and tau_frad_i_mec1993=0
and tau_arb_h_mec1993=0 and tau_apers_h_mec1993=0 and tau_kap_h_mec1993=0 and tau_frad_h_mec1993=0 then delete;
if tau_arb_i1996=0 and tau_apers_i1996=0 and tau_kap_i1996=0 and tau_frad_i1996=0
and tau_arb_h1996=0 and tau_apers_h1996=0 and tau_kap_h1996=0 and tau_frad_h1996=0 then delete;
/* Personer, hvor alle virtuelindkomster er ikke positiv, fjernes fra sample */
if virtuelindk_i_1993<=0 and virtuelindk_h1_1993<=0 and virtuelindk_h2_1993<=0 then delete;
if virtuelindk_i_mec1993<=0 and virtuelindk_h1_mec1993<=0 and virtuelindk_h2_mec1993<=0 then delete;
if virtuelindk_i_1996<=0 and virtuelindk_h1_1996<=0 and virtuelindk_h2_1996<=0 then delete;
if a=1 and b=1;
run;


data tax1994(drop=spligt1994 spligt1997 adagp1994 bdagp1994
             arblhu1994 stip1994 konthj1994 reval1994 qoffpens1994 pstill inflation1994_2005
             inflation1997_2005 omfskpl);
merge skat1994 (in=a) 
      skat1997(keep=pnr per_1997 cap_1997 dec_1997 ear_1997 c_per_1997
	           tax1_1997 c_tax1_1997 h_tax1_1997 tau_akt_h1997
c_tau_akt_h1997   per_income_1997 c_per_income_1997
               c_cap_1997 c_dec_1997 c_ear_1997 virtuelindk_i_1997 virtuelindk_h1_1997
               virtuelindk_h2_1997 spligt1997 tau_arb_i1997 tau_apers_i1997 tau_kap_i1997
	           tau_frad_i1997 tau_arb_h1997 tau_apers_h1997 tau_kap_h1997 tau_frad_h1997
	           c_tau_arb_i1997 c_tau_apers_i1997 c_tau_kap_i1997 c_tau_frad_i1997 akt_1997 c_akt_1997
	           c_tau_arb_h1997 c_tau_apers_h1997 c_tau_kap_h1997 c_tau_frad_h1997 in=b);
 by pnr;
/* Personer skal være i arbejde i år s */
occ=2;
if 11<=pstill<=20 then occ=1; /* selvstændige */
/* Personer skal være fuldt ud skattepligtige i år s og s+3 */
if spligt1994=0 then delete;
if spligt1997=0 then delete;
/* Personer skal være i alderen 25-55 år i år s*/
if alder>70 then delete;
if alder<15 then delete;
/* Personer må ikke modtage sociale overførsler i år s */
if pstill=50 then delete;
if pstill in (92,92,94) then delete;


/* Personer, hvor alle marginalskater er nul, fjernes fra sample */
if tau_arb_i1994=0 and tau_apers_i1994=0 and tau_kap_i1994=0 and tau_frad_i1994=0
and tau_arb_h1994=0 and tau_apers_h1994=0 and tau_kap_h1994=0 and tau_frad_h1994=0 then delete;
if tau_arb_i_mec1994=0 and tau_apers_i_mec1994=0 and tau_kap_i_mec1994=0 and tau_frad_i_mec1994=0
and tau_arb_h_mec1994=0 and tau_apers_h_mec1994=0 and tau_kap_h_mec1994=0 and tau_frad_h_mec1994=0 then delete;
if tau_arb_i1997=0 and tau_apers_i1997=0 and tau_kap_i1997=0 and tau_frad_i1997=0
and tau_arb_h1997=0 and tau_apers_h1997=0 and tau_kap_h1997=0 and tau_frad_h1997=0 then delete;
/* Personer, hvor alle virtuelindkomster er ikke positiv, fjernes fra sample */
if virtuelindk_i_1994<=0 and virtuelindk_h1_1994<=0 and virtuelindk_h2_1994<=0 then delete;
if virtuelindk_i_mec1994<=0 and virtuelindk_h1_mec1994<=0 and virtuelindk_h2_mec1994<=0 then delete;
if virtuelindk_i_1997<=0 and virtuelindk_h1_1997<=0 and virtuelindk_h2_1997<=0 then delete;
if a=1 and b=1;
run;



data tax1995(drop=spligt1995 spligt1998  adagp1995 bdagp1995
             arblhu1995 stip1995 konthj1995 reval1995 qoffpens1995 pstill inflation1995_2005
             inflation1998_2005 omfskpl);
merge skat1995 (in=a) 
      skat1998(keep=pnr per_1998 cap_1998 dec_1998 ear_1998 c_per_1998
	           tax1_1998 c_tax1_1998 h_tax1_1998 tau_akt_h1998
c_tau_akt_h1998   per_income_1998 c_per_income_1998
               c_cap_1998 c_dec_1998 c_ear_1998 virtuelindk_i_1998 virtuelindk_h1_1998
               virtuelindk_h2_1998 spligt1998 tau_arb_i1998 tau_apers_i1998 tau_kap_i1998
	           tau_frad_i1998 tau_arb_h1998 tau_apers_h1998 tau_kap_h1998 tau_frad_h1998
	           c_tau_arb_i1998 c_tau_apers_i1998 c_tau_kap_i1998 c_tau_frad_i1998 akt_1998 c_akt_1998
	           c_tau_arb_h1998 c_tau_apers_h1998 c_tau_kap_h1998 c_tau_frad_h1998 in=b);
 by pnr;
/* Personer skal være i arbejde i år s */
occ=2;
if 11<=pstill<=20 then occ=1; /* selvstændige */
/* Personer skal være fuldt ud skattepligtige i år s og s+3 */
if spligt1995=0 then delete;
if spligt1998=0 then delete;
/* Personer skal være i alderen 25-55 år i år s*/
if alder>70 then delete;
if alder<15 then delete;
/* Personer må ikke modtage sociale overførsler i år s */
if pstill=50 then delete;
if pstill in (92,92,94) then delete;


/* Personer, hvor alle marginalskater er nul, fjernes fra sample */
if tau_arb_i1995=0 and tau_apers_i1995=0 and tau_kap_i1995=0 and tau_frad_i1995=0
and tau_arb_h1995=0 and tau_apers_h1995=0 and tau_kap_h1995=0 and tau_frad_h1995=0 then delete;
if tau_arb_i_mec1995=0 and tau_apers_i_mec1995=0 and tau_kap_i_mec1995=0 and tau_frad_i_mec1995=0
and tau_arb_h_mec1995=0 and tau_apers_h_mec1995=0 and tau_kap_h_mec1995=0 and tau_frad_h_mec1995=0 then delete;
if tau_arb_i1998=0 and tau_apers_i1998=0 and tau_kap_i1998=0 and tau_frad_i1998=0
and tau_arb_h1998=0 and tau_apers_h1998=0 and tau_kap_h1998=0 and tau_frad_h1998=0 then delete;
/* Personer, hvor alle virtuelindkomster er ikke positiv, fjernes fra sample */
if virtuelindk_i_1995<=0 and virtuelindk_h1_1995<=0 and virtuelindk_h2_1995<=0 then delete;
if virtuelindk_i_mec1995<=0 and virtuelindk_h1_mec1995<=0 and virtuelindk_h2_mec1995<=0 then delete;
if virtuelindk_i_1998<=0 and virtuelindk_h1_1998<=0 and virtuelindk_h2_1998<=0 then delete;
if a=1 and b=1;
run;


data tax1996(drop=spligt1996 spligt1999 adagp1996 bdagp1996
             arblhu1996 stip1996 konthj1996 reval1996 qoffpens1996 pstill inflation1996_2005
             inflation1999_2005 omfskpl);
merge skat1996 (in=a) 
      skat1999(keep=pnr per_1999 cap_1999 dec_1999 ear_1999 c_per_1999
	           tax1_1999 c_tax1_1999 h_tax1_1999 tau_akt_h1999
c_tau_akt_h1999   per_income_1999 c_per_income_1999
               c_cap_1999 c_dec_1999 c_ear_1999 virtuelindk_i_1999 virtuelindk_h1_1999
               virtuelindk_h2_1999 spligt1999 tau_arb_i1999 tau_apers_i1999 tau_kap_i1999
	           tau_frad_i1999 tau_arb_h1999 tau_apers_h1999 tau_kap_h1999 tau_frad_h1999
	           c_tau_arb_i1999 c_tau_apers_i1999 c_tau_kap_i1999 c_tau_frad_i1999 akt_1999 c_akt_1999
	           c_tau_arb_h1999 c_tau_apers_h1999 c_tau_kap_h1999 c_tau_frad_h1999 in=b);
 by pnr;
/* Personer skal være i arbejde i år s */
occ=2;
if 11<=pstill<=20 then occ=1; /* selvstændige */
/* Personer skal være fuldt ud skattepligtige i år s og s+3 */
if spligt1996=0 then delete;
if spligt1999=0 then delete;
/* Personer skal være i alderen 25-55 år i år s*/
if alder>70 then delete;
if alder<15 then delete;
/* Personer må ikke modtage sociale overførsler i år s */
if pstill=50 then delete;
if pstill in (92,92,94) then delete;


/* Personer, hvor alle marginalskater er nul, fjernes fra sample */
if tau_arb_i1996=0 and tau_apers_i1996=0 and tau_kap_i1996=0 and tau_frad_i1996=0
and tau_arb_h1996=0 and tau_apers_h1996=0 and tau_kap_h1996=0 and tau_frad_h1996=0 then delete;
if tau_arb_i_mec1996=0 and tau_apers_i_mec1996=0 and tau_kap_i_mec1996=0 and tau_frad_i_mec1996=0
and tau_arb_h_mec1996=0 and tau_apers_h_mec1996=0 and tau_kap_h_mec1996=0 and tau_frad_h_mec1996=0 then delete;
if tau_arb_i1999=0 and tau_apers_i1999=0 and tau_kap_i1999=0 and tau_frad_i1999=0
and tau_arb_h1999=0 and tau_apers_h1999=0 and tau_kap_h1999=0 and tau_frad_h1999=0 then delete;
/* Personer, hvor alle virtuelindkomster er ikke positiv, fjernes fra sample */
if virtuelindk_i_1996<=0 and virtuelindk_h1_1996<=0 and virtuelindk_h2_1996<=0 then delete;
if virtuelindk_i_mec1996<=0 and virtuelindk_h1_mec1996<=0 and virtuelindk_h2_mec1996<=0 then delete;
if virtuelindk_i_1999<=0 and virtuelindk_h1_1999<=0 and virtuelindk_h2_1999<=0 then delete;
if a=1 and b=1;
run;


data tax1997(drop=spligt1997 spligt2000  adagp1997 bdagp1997
             arblhu1997 stip1997 konthj1997 reval1997 qoffpens1997 pstill inflation1997_2005
             inflation2000_2005 omfskpl);
merge skat1997 (in=a) 
      skat2000(keep=pnr per_2000 cap_2000 dec_2000 ear_2000 c_per_2000
	           tax1_2000 c_tax1_2000 h_tax1_2000 tau_akt_h2000
c_tau_akt_h2000   per_income_2000 c_per_income_2000
               c_cap_2000 c_dec_2000 c_ear_2000 virtuelindk_i_2000 virtuelindk_h1_2000
               virtuelindk_h2_2000 spligt2000 tau_arb_i2000 tau_apers_i2000 tau_kap_i2000
	           tau_frad_i2000 tau_arb_h2000 tau_apers_h2000 tau_kap_h2000 tau_frad_h2000
	           c_tau_arb_i2000 c_tau_apers_i2000 c_tau_kap_i2000 c_tau_frad_i2000 akt_2000 c_akt_2000
	           c_tau_arb_h2000 c_tau_apers_h2000 c_tau_kap_h2000 c_tau_frad_h2000 in=b);
 by pnr;
/* Personer skal være i arbejde i år s */
occ=2;
if 11<=pstill<=20 then occ=1; /* selvstændige */
/* Personer skal være fuldt ud skattepligtige i år s og s+3 */
if spligt1997=0 then delete;
if spligt2000=0 then delete;
/* Personer skal være i alderen 25-55 år i år s*/
if alder>70 then delete;
if alder<15 then delete;
/* Personer må ikke modtage sociale overførsler i år s */
if pstill=50 then delete;
if pstill in (92,92,94) then delete;


/* Personer, hvor alle marginalskater er nul, fjernes fra sample */
if tau_arb_i1997=0 and tau_apers_i1997=0 and tau_kap_i1997=0 and tau_frad_i1997=0
and tau_arb_h1997=0 and tau_apers_h1997=0 and tau_kap_h1997=0 and tau_frad_h1997=0 then delete;
if tau_arb_i_mec1997=0 and tau_apers_i_mec1997=0 and tau_kap_i_mec1997=0 and tau_frad_i_mec1997=0
and tau_arb_h_mec1997=0 and tau_apers_h_mec1997=0 and tau_kap_h_mec1997=0 and tau_frad_h_mec1997=0 then delete;
if tau_arb_i2000=0 and tau_apers_i2000=0 and tau_kap_i2000=0 and tau_frad_i2000=0
and tau_arb_h2000=0 and tau_apers_h2000=0 and tau_kap_h2000=0 and tau_frad_h2000=0 then delete;
/* Personer, hvor alle virtuelindkomster er ikke positiv, fjernes fra sample */
if virtuelindk_i_1997<=0 and virtuelindk_h1_1997<=0 and virtuelindk_h2_1997<=0 then delete;
if virtuelindk_i_mec1997<=0 and virtuelindk_h1_mec1997<=0 and virtuelindk_h2_mec1997<=0 then delete;
if virtuelindk_i_2000<=0 and virtuelindk_h1_2000<=0 and virtuelindk_h2_2000<=0 then delete;
if a=1 and b=1;
run;


data tax1998(drop=spligt1998 spligt2001 adagp1998 bdagp1998
             arblhu1998 stip1998 konthj1998 reval1998 qoffpens1998 pstill inflation1998_2005
             inflation2001_2005 omfskpl);
merge skat1998 (in=a) 
      skat2001(keep=pnr per_2001 cap_2001 dec_2001 ear_2001 c_per_2001
	           tax1_2001 c_tax1_2001 h_tax1_2001 tau_akt_h2001
c_tau_akt_h2001    per_income_2001 c_per_income_2001
               c_cap_2001 c_dec_2001 c_ear_2001 virtuelindk_i_2001 virtuelindk_h1_2001
               virtuelindk_h2_2001 spligt2001 tau_arb_i2001 tau_apers_i2001 tau_kap_i2001
	           tau_frad_i2001 tau_arb_h2001 tau_apers_h2001 tau_kap_h2001 tau_frad_h2001
	           c_tau_arb_i2001 c_tau_apers_i2001 c_tau_kap_i2001 c_tau_frad_i2001 akt_2001 c_akt_2001
	           c_tau_arb_h2001 c_tau_apers_h2001 c_tau_kap_h2001 c_tau_frad_h2001 in=b);
 by pnr;
/* Personer skal være i arbejde i år s */
occ=2;
if 11<=pstill<=20 then occ=1; /* selvstændige */
/* Personer skal være fuldt ud skattepligtige i år s og s+3 */
if spligt1998=0 then delete;
if spligt2001=0 then delete;
/* Personer skal være i alderen 25-55 år i år s*/
if alder>70 then delete;
if alder<15 then delete;
/* Personer må ikke modtage sociale overførsler i år s */
if pstill=50 then delete;
if pstill in (92,92,94) then delete;

/* Personer må ikke skifte ægteskabelig status mellem år s og s+3 */

/* Personer, hvor alle marginalskater er nul, fjernes fra sample */
if tau_arb_i1998=0 and tau_apers_i1998=0 and tau_kap_i1998=0 and tau_frad_i1998=0
and tau_arb_h1998=0 and tau_apers_h1998=0 and tau_kap_h1998=0 and tau_frad_h1998=0 then delete;
if tau_arb_i_mec1998=0 and tau_apers_i_mec1998=0 and tau_kap_i_mec1998=0 and tau_frad_i_mec1998=0
and tau_arb_h_mec1998=0 and tau_apers_h_mec1998=0 and tau_kap_h_mec1998=0 and tau_frad_h_mec1998=0 then delete;
if tau_arb_i2001=0 and tau_apers_i2001=0 and tau_kap_i2001=0 and tau_frad_i2001=0
and tau_arb_h2001=0 and tau_apers_h2001=0 and tau_kap_h2001=0 and tau_frad_h2001=0 then delete;
/* Personer, hvor alle virtuelindkomster er ikke positiv, fjernes fra sample */
if virtuelindk_i_1998<=0 and virtuelindk_h1_1998<=0 and virtuelindk_h2_1998<=0 then delete;
if virtuelindk_i_mec1998<=0 and virtuelindk_h1_mec1998<=0 and virtuelindk_h2_mec1998<=0 then delete;
if virtuelindk_i_2001<=0 and virtuelindk_h1_2001<=0 and virtuelindk_h2_2001<=0 then delete;
if a=1 and b=1;
run;


data tax1999(drop=spligt1999 spligt2002  adagp1999 bdagp1999
             arblhu1999 stip1999 konthj1999 reval1999 qoffpens1999 pstill inflation1999_2005
             inflation2002_2005 omfskpl);
merge skat1999 (in=a) 
      skat2002(keep=pnr per_2002 cap_2002 dec_2002 ear_2002 c_per_2002
	           tax1_2002 c_tax1_2002 h_tax1_2002 tau_akt_h2002
c_tau_akt_h2002    per_income_2002 c_per_income_2002
               c_cap_2002 c_dec_2002 c_ear_2002 virtuelindk_i_2002 virtuelindk_h1_2002
               virtuelindk_h2_2002 spligt2002 tau_arb_i2002 tau_apers_i2002 tau_kap_i2002
	           tau_frad_i2002 tau_arb_h2002 tau_apers_h2002 tau_kap_h2002 tau_frad_h2002
	           c_tau_arb_i2002 c_tau_apers_i2002 c_tau_kap_i2002 c_tau_frad_i2002 akt_2002 c_akt_2002
	           c_tau_arb_h2002 c_tau_apers_h2002 c_tau_kap_h2002 c_tau_frad_h2002 in=b);
 by pnr;
/* Personer skal være i arbejde i år s */
occ=2;
if 11<=pstill<=20 then occ=1; /* selvstændige */
/* Personer skal være fuldt ud skattepligtige i år s og s+3 */
if spligt1999=0 then delete;
if spligt2002=0 then delete;
/* Personer skal være i alderen 25-55 år i år s*/
if alder>70 then delete;
if alder<15 then delete;
/* Personer må ikke modtage sociale overførsler i år s */
if pstill=50 then delete;
if pstill in (92,92,94) then delete;

/* Personer, hvor alle marginalskater er nul, fjernes fra sample */
if tau_arb_i1999=0 and tau_apers_i1999=0 and tau_kap_i1999=0 and tau_frad_i1999=0
and tau_arb_h1999=0 and tau_apers_h1999=0 and tau_kap_h1999=0 and tau_frad_h1999=0 then delete;
if tau_arb_i_mec1999=0 and tau_apers_i_mec1999=0 and tau_kap_i_mec1999=0 and tau_frad_i_mec1999=0
and tau_arb_h_mec1999=0 and tau_apers_h_mec1999=0 and tau_kap_h_mec1999=0 and tau_frad_h_mec1999=0 then delete;
if tau_arb_i2002=0 and tau_apers_i2002=0 and tau_kap_i2002=0 and tau_frad_i2002=0
and tau_arb_h2002=0 and tau_apers_h2002=0 and tau_kap_h2002=0 and tau_frad_h2002=0 then delete;
/* Personer, hvor alle virtuelindkomster er ikke positiv, fjernes fra sample */
if virtuelindk_i_1999<=0 and virtuelindk_h1_1999<=0 and virtuelindk_h2_1999<=0 then delete;
if virtuelindk_i_mec1999<=0 and virtuelindk_h1_mec1999<=0 and virtuelindk_h2_mec1999<=0 then delete;
if virtuelindk_i_2002<=0 and virtuelindk_h1_2002<=0 and virtuelindk_h2_2002<=0 then delete;
if a=1 and b=1;
run;


data tax2000(drop=spligt2000 spligt2003 adagp2000 bdagp2000
             arblhu2000 stip2000 konthj2000 reval2000 qoffpens2000 pstill inflation2000_2005
             inflation2003_2005 omfskpl);
merge skat2000 (in=a) 
      skat2003(keep=pnr per_2003 cap_2003 dec_2003 ear_2003 c_per_2003
	           tax1_2003 c_tax1_2003 h_tax1_2003    per_income_2003 c_per_income_2003
               c_cap_2003 c_dec_2003 c_ear_2003 virtuelindk_i_2003 virtuelindk_h1_2003
               virtuelindk_h2_2003 spligt2003 tau_arb_i2003 tau_apers_i2003 tau_kap_i2003
	           tau_frad_i2003 tau_arb_h2003 tau_apers_h2003 tau_kap_h2003 tau_frad_h2003
	           c_tau_arb_i2003 c_tau_apers_i2003 c_tau_kap_i2003 c_tau_frad_i2003 akt_2003 c_akt_2003
	           c_tau_arb_h2003 c_tau_apers_h2003 c_tau_kap_h2003 c_tau_frad_h2003 in=b);
 by pnr;
/* Personer skal være i arbejde i år s */
occ=2;
if 11<=pstill<=20 then occ=1; /* selvstændige */
/* Personer skal være fuldt ud skattepligtige i år s og s+3 */
if spligt2000=0 then delete;
if spligt2003=0 then delete;
/* Personer skal være i alderen 25-55 år i år s*/
if alder>70 then delete;
if alder<15 then delete;
/* Personer må ikke modtage sociale overførsler i år s */
if pstill=50 then delete;
if pstill in (92,92,94) then delete;

/* Personer, hvor alle marginalskater er nul, fjernes fra sample */
if tau_arb_i2000=0 and tau_apers_i2000=0 and tau_kap_i2000=0 and tau_frad_i2000=0
and tau_arb_h2000=0 and tau_apers_h2000=0 and tau_kap_h2000=0 and tau_frad_h2000=0 then delete;
if tau_arb_i_mec2000=0 and tau_apers_i_mec2000=0 and tau_kap_i_mec2000=0 and tau_frad_i_mec2000=0
and tau_arb_h_mec2000=0 and tau_apers_h_mec2000=0 and tau_kap_h_mec2000=0 and tau_frad_h_mec2000=0 then delete;
if tau_arb_i2003=0 and tau_apers_i2003=0 and tau_kap_i2003=0 and tau_frad_i2003=0
and tau_arb_h2003=0 and tau_apers_h2003=0 and tau_kap_h2003=0 and tau_frad_h2003=0 then delete;
/* Personer, hvor alle virtuelindkomster er ikke positiv, fjernes fra sample */
if virtuelindk_i_2000<=0 and virtuelindk_h1_2000<=0 and virtuelindk_h2_2000<=0 then delete;
if virtuelindk_i_mec2000<=0 and virtuelindk_h1_mec2000<=0 and virtuelindk_h2_mec2000<=0 then delete;
if virtuelindk_i_2003<=0 and virtuelindk_h1_2003<=0 and virtuelindk_h2_2003<=0 then delete;
if a=1 and b=1;
run;


data tax2001(drop=spligt2001 spligt2004 adagp2001 bdagp2001
             arblhu2001 stip2001 konthj2001 reval2001 qoffpens2001 pstill inflation2001_2005
             inflation2004_2005 omfskpl);
merge skat2001 (in=a) 
      skat2004(keep=pnr per_2004 cap_2004 dec_2004 ear_2004 c_per_2004
	           tax1_2004 c_tax1_2004 h_tax1_2004    per_income_2004 c_per_income_2004
               c_cap_2004 c_dec_2004 c_ear_2004 virtuelindk_i_2004 virtuelindk_h1_2004
               virtuelindk_h2_2004 spligt2004 tau_arb_i2004 tau_apers_i2004 tau_kap_i2004
	           tau_frad_i2004 tau_arb_h2004 tau_apers_h2004 tau_kap_h2004 tau_frad_h2004
	           c_tau_arb_i2004 c_tau_apers_i2004 c_tau_kap_i2004 c_tau_frad_i2004 akt_2004 c_akt_2004
	           c_tau_arb_h2004 c_tau_apers_h2004 c_tau_kap_h2004 c_tau_frad_h2004 in=b);
 by pnr;
/* Personer skal være i arbejde i år s */
occ=2;
if 11<=pstill<=20 then occ=1; /* selvstændige */
/* Personer skal være fuldt ud skattepligtige i år s og s+3 */
if spligt2001=0 then delete;
if spligt2004=0 then delete;
/* Personer skal være i alderen 25-55 år i år s*/
if alder>70 then delete;
if alder<15 then delete;
/* Personer må ikke modtage sociale overførsler i år s */
if pstill=50 then delete;
if pstill in (92,92,94) then delete;

/* Personer må ikke skifte ægteskabelig status mellem år s og s+3 */

/* Personer, hvor alle marginalskater er nul, fjernes fra sample */
if tau_arb_i2001=0 and tau_apers_i2001=0 and tau_kap_i2001=0 and tau_frad_i2001=0
and tau_arb_h2001=0 and tau_apers_h2001=0 and tau_kap_h2001=0 and tau_frad_h2001=0 then delete;
if tau_arb_i_mec2001=0 and tau_apers_i_mec2001=0 and tau_kap_i_mec2001=0 and tau_frad_i_mec2001=0
and tau_arb_h_mec2001=0 and tau_apers_h_mec2001=0 and tau_kap_h_mec2001=0 and tau_frad_h_mec2001=0 then delete;
if tau_arb_i2004=0 and tau_apers_i2004=0 and tau_kap_i2004=0 and tau_frad_i2004=0
and tau_arb_h2004=0 and tau_apers_h2004=0 and tau_kap_h2004=0 and tau_frad_h2004=0 then delete;
/* Personer, hvor alle virtuelindkomster er ikke positiv, fjernes fra sample */
if virtuelindk_i_2001<=0 and virtuelindk_h1_2001<=0 and virtuelindk_h2_2001<=0 then delete;
if virtuelindk_i_mec2001<=0 and virtuelindk_h1_mec2001<=0 and virtuelindk_h2_mec2001<=0 then delete;
if virtuelindk_i_2004<=0 and virtuelindk_h1_2004<=0 and virtuelindk_h2_2004<=0 then delete;
if a=1 and b=1;
run;


data tax2002(drop=spligt2002 spligt2005 adagp2002 bdagp2002
             arblhu2002 stip2002 konthj2002 reval2002 qoffpens2002 pstill inflation2002_2005
              omfang);
merge skat2002 (in=a) 
      skat2005(keep=pnr per_2005 cap_2005 dec_2005 ear_2005 c_per_2005
	           tax1_2005 c_tax1_2005 h_tax1_2005    per_income_2005 c_per_income_2005
               c_cap_2005 c_dec_2005 c_ear_2005 virtuelindk_i_2005 virtuelindk_h1_2005
               virtuelindk_h2_2005 spligt2005 tau_arb_i2005 tau_apers_i2005 tau_kap_i2005
	           tau_frad_i2005 tau_arb_h2005 tau_apers_h2005 tau_kap_h2005 tau_frad_h2005
	           c_tau_arb_i2005 c_tau_apers_i2005 c_tau_kap_i2005 c_tau_frad_i2005 akt_2005 c_akt_2005
	           c_tau_arb_h2005 c_tau_apers_h2005 c_tau_kap_h2005 c_tau_frad_h2005 in=b);
 by pnr;
/* Personer skal være i arbejde i år s */
occ=2;
if 11<=pstill<=20 then occ=1; /* selvstændige */
/* Personer skal være fuldt ud skattepligtige i år s og s+3 */
if spligt2002=0 then delete;
if spligt2005=0 then delete;
/* Personer skal være i alderen 25-55 år i år s*/
if alder>70 then delete;
if alder<15 then delete;
/* Personer må ikke modtage sociale overførsler i år s */
if pstill=50 then delete;
if pstill in (92,92,94) then delete;
/*if qoffpens2002>0 then delete;*/


/* Personer, hvor alle marginalskater er nul, fjernes fra sample */
if tau_arb_i2002=0 and tau_apers_i2002=0 and tau_kap_i2002=0 and tau_frad_i2002=0
and tau_arb_h2002=0 and tau_apers_h2002=0 and tau_kap_h2002=0 and tau_frad_h2002=0 then delete;
if tau_arb_i_mec2002=0 and tau_apers_i_mec2002=0 and tau_kap_i_mec2002=0 and tau_frad_i_mec2002=0
and tau_arb_h_mec2002=0 and tau_apers_h_mec2002=0 and tau_kap_h_mec2002=0 and tau_frad_h_mec2002=0 then delete;
if tau_arb_i2005=0 and tau_apers_i2005=0 and tau_kap_i2005=0 and tau_frad_i2005=0
and tau_arb_h2005=0 and tau_apers_h2005=0 and tau_kap_h2005=0 and tau_frad_h2005=0 then delete;
/* Personer, hvor alle virtuelindkomster er ikke positiv, fjernes fra sample */
if virtuelindk_i_2002<=0 and virtuelindk_h1_2002<=0 and virtuelindk_h2_2002<=0 then delete;
if virtuelindk_i_mec2002<=0 and virtuelindk_h1_mec2002<=0 and virtuelindk_h2_mec2002<=0 then delete;
if virtuelindk_i_2005<=0 and virtuelindk_h1_2005<=0 and virtuelindk_h2_2005<=0 then delete;
if a=1 and b=1;
run;


/* STEP 3: USING DATA FROM STEP 2, THIS STEP CONSTRUCTS INCOME AND TAX VARIABLES FOR ESTIMATION FOR EACH YEAR */
data tax2_1984(drop=per_1984 cap_1984 dec_1984 ear_1984 c_per_1984 tax1_1984 c_tax1_1984 
                h_tax1_1984 c_cap_1984 c_dec_1984 c_ear_1984 virtuelindk_i_1984 
                virtuelindk_h1_1984 virtuelindk_h2_1984 tau_arb_i1984
                tau_apers_i1984 tau_kap_i1984 tau_frad_i1984 tau_arb_h1984 
                tau_apers_h1984 tau_kap_h1984 tau_frad_h1984 c_tau_arb_i1984 
                c_tau_apers_i1984 c_tau_kap_i1984 c_tau_frad_i1984 c_tau_arb_h1984
                c_tau_apers_h1984 c_tau_kap_h1984 c_tau_frad_h1984
                virtuelindk_i_mec1984 virtuelindk_h1_mec1984 virtuelindk_h2_mec1984 
			    virtuelindk_i_mec virtuelindk_h1_mec virtuelindk_h2_mec
                tau_arb_i_mec1984 ctype 
                tau_apers_i_mec1984 tau_kap_i_mec1984 tau_frad_i_mec1984 tau_arb_h_mec1984 
                tau_apers_h_mec1984 tau_kap_h_mec1984 tau_frad_h_mec1984 c_tau_arb_i_mec1984 
                c_tau_apers_i_mec1984 c_tau_kap_i_mec1984 c_tau_frad_i_mec1984 c_tau_arb_h_mec1984
                c_tau_apers_h_mec1984 c_tau_kap_h_mec1984 c_tau_frad_h_mec1984
                per_1987 cap_1987 dec_1987 ear_1987 c_per_1987 tax1_1987 c_tax1_1987 
                h_tax1_1987 c_cap_1987 c_dec_1987 c_ear_1987 virtuelindk_i_1987 
                virtuelindk_h1_1987 virtuelindk_h2_1987 tau_arb_i1987
                tau_apers_i1987 tau_kap_i1987 tau_frad_i1987 tau_arb_h1987 
                tau_apers_h1987 tau_kap_h1987 tau_frad_h1987 c_tau_arb_i1987 
                c_tau_apers_i1987 c_tau_kap_i1987 c_tau_frad_i1987 c_tau_arb_h1987
                c_tau_apers_h1987 c_tau_kap_h1987 c_tau_frad_h1987
                arbindk apersindk kapindk lignfrad netincome1984 netincome1987
                c_netincome1984 c_netincome1987 per_income_1984 per_income_1987
                tau_akt_h1984 c_tau_akt_h1984 tau_akt_h_mec1984 c_tau_akt_h_mec1984 tau_akt_h1987 c_tau_akt_h1987);
set tax1984;

/* Tager højde for at indkomster kan skifte fortegn */
dummycap=1;
if cap_1984>0 and cap_1987>0 then dummycap=2;
if cap_1984<0 and cap_1987<0 then dummycap=3;
if dummycap=1 then shiftcap=1; else shiftcap=0;
dummyper=1;
if per_1984>0 and per_1987>0 then dummyper=2;
if per_1984<0 and per_1987<0 then dummyper=3;
if dummyper=1 then shiftper=1; else shiftper=0;
dummyear=1;
if ear_1984>0 and ear_1987>0 then dummyear=2;
if ear_1984<0 and ear_1987<0 then dummyear=3;
if dummyear=1 then shiftear=1; else shiftear=0;
dummydec=1;
if dec_1984>0 and dec_1987>0 then dummydec=2;
if dec_1984<0 and dec_1987<0 then dummydec=3;
if dummydec=1 then shiftdec=1; else shiftdec=0;
dummyakt=1;
if dec_1984>0 and dec_1987>0 then dummydec=2;
if dec_1984<0 and dec_1987<0 then dummydec=3;
if dummydec=1 then shiftdec=1; else shiftdec=0;

dummyper_income=1;
if per_income_1984>0 and per_income_1987>0 then dummyper_income=2;
if per_income_1984<0 and per_income_1987<0 then dummyper_income=3;
if dummyper_income=1 then shiftper_income=1; else shiftper_income=0;
if shiftper_income=0 then diffper_income=log(per_income_1987/per_income_1984);
else diffper_income=.;
per_income=per_income_1984;
if dummyper_income=2 then logper_income=log(per_income_1984);
if dummyper_income=3 then logper_income=log((per_income_1984*(-1)));

/* Beregner log-forskellen i indkomster */
if shiftear=0 then diffarb=log(ear_1987/ear_1984);
else diffarb=.;
if shiftdec=0 then difffrad=log(dec_1987/dec_1984);
else difffrad=.;
if shiftper=0 then diffapers=log(per_1987/per_1984);
else diffapers=.;
if shiftcap=0 then diffkap=log(cap_1987/cap_1984);
else diffkap=.;

/* Beregner log-forskellen i net-of tax rate */
if 0<tau_arb_i1984<1 and 0<tau_arb_i1987<1 then diffMTR_arb_i=log((1-tau_arb_i1987)/(1-tau_arb_i1984));
if 0<tau_apers_i1984<1 and 0<tau_apers_i1987<1 then diffMTR_apers_i=log((1-tau_apers_i1987)/(1-tau_apers_i1984));
if 0<tau_kap_i1984<1 and 0<tau_kap_i1987<1 then diffMTR_kap_i=log((1-tau_kap_i1987)/(1-tau_kap_i1984));
if 0<tau_frad_i1984<1 and 0<tau_frad_i1987<1 then diffMTR_frad_i=log((1-tau_frad_i1987)/(1-tau_frad_i1984));

if 0<tau_arb_h1984<1 and 0<tau_arb_h1987<1 then diffMTR_arb_h=log((1-tau_arb_h1987)/(1-tau_arb_h1984));
if 0<tau_apers_h1984<1 and 0<tau_apers_h1987<1 then diffMTR_apers_h=log((1-tau_apers_h1987)/(1-tau_apers_h1984));
if 0<tau_kap_h1984<1 and 0<tau_kap_h1987<1 then diffMTR_kap_h=log((1-tau_kap_h1987)/(1-tau_kap_h1984));
if 0<tau_frad_h1984<1 and 0<tau_frad_h1987<1 then diffMTR_frad_h=log((1-tau_frad_h1987)/(1-tau_frad_h1984));
if 0<tau_akt_h1984<1 and 0<tau_akt_h1987<1 then diffMTR_akt_h=log((1-tau_akt_h1987)/(1-tau_akt_h1984));

if 0<c_tau_arb_i1984<1 and 0<c_tau_arb_i1987<1 then c_diffMTR_arb_i=log((1-c_tau_arb_i1987)/(1-c_tau_arb_i1984));
if 0<c_tau_apers_i1984<1 and 0<c_tau_apers_i1987<1 then c_diffMTR_apers_i=log((1-c_tau_apers_i1987)/(1-c_tau_apers_i1984));
if 0<c_tau_kap_i1984<1 and 0<c_tau_kap_i1987<1 then c_diffMTR_kap_i=log((1-c_tau_kap_i1987)/(1-c_tau_kap_i1984));
if 0<c_tau_frad_i1984<1 and 0<c_tau_frad_i1987<1 then c_diffMTR_frad_i=log((1-c_tau_frad_i1987)/(1-c_tau_frad_i1984));

if 0<c_tau_arb_h1984<1 and 0<c_tau_arb_h1987<1 then c_diffMTR_arb_h=log((1-c_tau_arb_h1987)/(1-c_tau_arb_h1984));
if 0<c_tau_apers_h1984<1 and 0<c_tau_apers_h1987<1 then c_diffMTR_apers_h=log((1-c_tau_apers_h1987)/(1-c_tau_apers_h1984));
if 0<c_tau_kap_h1984<1 and 0<c_tau_kap_h1987<1 then c_diffMTR_kap_h=log((1-c_tau_kap_h1987)/(1-c_tau_kap_h1984));
if 0<c_tau_frad_h1984<1 and 0<c_tau_frad_h1987<1 then c_diffMTR_frad_h=log((1-c_tau_frad_h1987)/(1-c_tau_frad_h1984));
if 0<c_tau_akt_h1984<1 and 0<c_tau_akt_h1987<1 then c_diffMTR_akt_h=log((1-c_tau_akt_h1987)/(1-c_tau_akt_h1984));

/* Beregner instrument for log-forskellen i net-of-tax rate */
if 0<tau_arb_i1984<1 and 0<tau_arb_i_mec1984<1 then diffMTR_arb_i_IV=log((1-tau_arb_i_mec1984)/(1-tau_arb_i1984));
if 0<tau_apers_i1984<1 and 0<tau_apers_i_mec1984<1 then diffMTR_apers_i_IV=log((1-tau_apers_i_mec1984)/(1-tau_apers_i1984));
if 0<tau_kap_i1984<1 and 0<tau_kap_i_mec1984<1 then diffMTR_kap_i_IV=log((1-tau_kap_i_mec1984)/(1-tau_kap_i1984));
if 0<tau_frad_i1984<1 and 0<tau_frad_i_mec1984<1 then diffMTR_frad_i_IV=log((1-tau_frad_i_mec1984)/(1-tau_frad_i1984));

if 0<tau_arb_h1984<1 and 0<tau_arb_h_mec1984<1 then diffMTR_arb_h_IV=log((1-tau_arb_h_mec1984)/(1-tau_arb_h1984));
if 0<tau_apers_h1984<1 and 0<tau_apers_h_mec1984<1 then diffMTR_apers_h_IV=log((1-tau_apers_h_mec1984)/(1-tau_apers_h1984));
if 0<tau_kap_h1984<1 and 0<tau_kap_h_mec1984<1 then diffMTR_kap_h_IV=log((1-tau_kap_h_mec1984)/(1-tau_kap_h1984));
if 0<tau_frad_h1984<1 and 0<tau_frad_h_mec1984<1 then diffMTR_frad_h_IV=log((1-tau_frad_h_mec1984)/(1-tau_frad_h1984));
if 0<tau_akt_h1984<1 and 0<tau_akt_h_mec1984<1 then diffMTR_akt_h_IV=log((1-tau_akt_h_mec1984)/(1-tau_akt_h1984));

if 0<c_tau_arb_i1984<1 and 0<c_tau_arb_i_mec1984<1 then c_diffMTR_arb_i_IV=log((1-c_tau_arb_i_mec1984)/(1-c_tau_arb_i1984));
if 0<c_tau_apers_i1984<1 and 0<c_tau_apers_i_mec1984<1 then c_diffMTR_apers_i_IV=log((1-c_tau_apers_i_mec1984)/(1-c_tau_apers_i1984));
if 0<c_tau_kap_i1984<1 and 0<c_tau_kap_i_mec1984<1 then c_diffMTR_kap_i_IV=log((1-c_tau_kap_i_mec1984)/(1-c_tau_kap_i1984));
if 0<c_tau_frad_i1984<1 and 0<c_tau_frad_i_mec1984<1 then c_diffMTR_frad_i_IV=log((1-c_tau_frad_i_mec1984)/(1-c_tau_frad_i1984));

if 0<c_tau_arb_h1984<1 and 0<c_tau_arb_h_mec1984<1 then c_diffMTR_arb_h_IV=log((1-c_tau_arb_h_mec1984)/(1-c_tau_arb_h1984));
if 0<c_tau_apers_h1984<1 and 0<c_tau_apers_h_mec1984<1 then c_diffMTR_apers_h_IV=log((1-c_tau_apers_h_mec1984)/(1-c_tau_apers_h1984));
if 0<c_tau_kap_h1984<1 and 0<c_tau_kap_h_mec1984<1 then c_diffMTR_kap_h_IV=log((1-c_tau_kap_h_mec1984)/(1-c_tau_kap_h1984));
if 0<c_tau_frad_h1984<1 and 0<c_tau_frad_h_mec1984<1 then c_diffMTR_frad_h_IV=log((1-c_tau_frad_h_mec1984)/(1-c_tau_frad_h1984));
if 0<c_tau_akt_h1984<1 and 0<c_tau_akt_h_mec1984<1 then c_diffMTR_akt_h_IV=log((1-c_tau_akt_h_mec1984)/(1-c_tau_akt_h1984));

/* Beregner log-forskellen i nettoindkomst, taxable og broadincome */
taxable1984=ear_1984+per_1984+cap_1984-dec_1984;
taxable1987=ear_1987+per_1987+cap_1987-dec_1987;

dummytaxable=0;
if taxable1984>0 and taxable1987>0 then do;
dummytaxable=1;
difftax=log((taxable1987)/(taxable1984));
end;
broad1984=ear_1984+cap_1984;
broad1987=ear_1987+cap_1987;

dummybroad=0;
if broad1984>0 and broad1987>0 then do;
dummybroad=1;
diffbroad=log((broad1987)/(broad1984));
end;
taxable=taxable1984;
broad=broad1984;
logbroad=log(broad);
logtaxable=log(taxable);

netincome1984=ear_1984+per_1984+cap_1984-dec_1984-tax1_1984;
netincome1987=ear_1987+per_1987+cap_1987-dec_1987-tax1_1987;
c_netincome1984=c_ear_1984+c_per_1984+c_cap_1984-c_dec_1984-c_tax1_1984;
c_netincome1987=c_ear_1987+c_per_1987+c_cap_1987-c_dec_1987-c_tax1_1987;

if netincome1984>0 and netincome1987>0 then
diffinc=log((netincome1987)/(netincome1984));

if c_netincome1984>0 and c_netincome1987>0 then
c_diffinc=log((c_netincome1987)/(c_netincome1984));

/* Beregner log-forskellen i virtuel indkomst */
if virtuelindk_i_1984>0 and virtuelindk_i_1987>0 then 
diffvir_i=log(virtuelindk_i_1987/virtuelindk_i_1984);
if virtuelindk_h1_1984>0 and virtuelindk_h1_1987>0 then
diffvir_h1=log(virtuelindk_h1_1987/virtuelindk_h1_1984);
if virtuelindk_h2_1984>0 and virtuelindk_h2_1987>0 then 
diffvir_h2=log(virtuelindk_h2_1987/virtuelindk_h2_1984);

/* Beregner instrument for log-forskellen i virtuel indkomst */
if virtuelindk_i_1984>0 and virtuelindk_i_mec1984>0 then 
diffvir_i_IV=log(virtuelindk_i_mec1984/virtuelindk_i_1984);
if virtuelindk_h1_1984>0 and virtuelindk_h1_mec1984>0 then
diffvir_h1_IV=log(virtuelindk_h1_mec1984/virtuelindk_h1_1984);
if virtuelindk_h2_1984>0 and virtuelindk_h2_mec1984>0 then 
diffvir_h2_IV=log(virtuelindk_h2_mec1984/virtuelindk_h2_1984);

/* Tager log til indkomster */
if dummyear=2 then logarb=log(ear_1984);
if dummyear=3 then logarb=log((ear_1984*(-1)));

if dummyper=2 then logapers=log(per_1984);
if dummyper=3 then logapers=log((per_1984*(-1)));

if dummycap=2 then logkap=log(cap_1984);
if dummycap=3 then logkap=log((cap_1984*(-1)));

if dummydec=2 then logfrad=log(dec_1984);
if dummydec=3 then logfrad=log((dec_1984*(-1)));

/* Omdøber indkomster og marginalskatter */
arb=ear_1984;
apers=per_1984;
kap=cap_1984;
frad=dec_1984;

tax=tax1_1984;
tau_arb_i_pre=tau_arb_i1984;
tau_arb_h_pre=tau_arb_h1984;
tau_arb_i_post=tau_arb_i1987;
tau_arb_h_post=tau_arb_h1987;
tau_arb_i_mec=tau_arb_i_mec1984;
tau_arb_h_mec=tau_arb_h_mec1984;

tau_kap_i_pre=tau_kap_i1984;
tau_kap_h_pre=tau_kap_h1984;
tau_kap_i_post=tau_kap_i1987;
tau_kap_h_post=tau_kap_h1987;
tau_kap_i_mec=tau_kap_i_mec1984;
tau_kap_h_mec=tau_kap_h_mec1984;

tau_frad_i_pre=tau_frad_i1984;
tau_frad_h_pre=tau_frad_h1984;
tau_frad_i_post=tau_frad_i1987;
tau_frad_h_post=tau_frad_h1987;
tau_frad_i_mec=tau_frad_i_mec1984;
tau_frad_h_mec=tau_frad_h_mec1984;


run;

data tax2_1985(drop=per_1985 cap_1985 dec_1985 ear_1985 c_per_1985 tax1_1985 c_tax1_1985 
                h_tax1_1985 c_cap_1985 c_dec_1985 c_ear_1985 virtuelindk_i_1985 
                virtuelindk_h1_1985 virtuelindk_h2_1985 tau_arb_i1985
                tau_apers_i1985 tau_kap_i1985 tau_frad_i1985 tau_arb_h1985 
                tau_apers_h1985 tau_kap_h1985 tau_frad_h1985 c_tau_arb_i1985 
                c_tau_apers_i1985 c_tau_kap_i1985 c_tau_frad_i1985 c_tau_arb_h1985
                c_tau_apers_h1985 c_tau_kap_h1985 c_tau_frad_h1985
                virtuelindk_i_mec1985 virtuelindk_h1_mec1985 virtuelindk_h2_mec1985 
			    virtuelindk_i_mec virtuelindk_h1_mec virtuelindk_h2_mec
                tau_arb_i_mec1985 ctype
                tau_apers_i_mec1985 tau_kap_i_mec1985 tau_frad_i_mec1985 tau_arb_h_mec1985 
                tau_apers_h_mec1985 tau_kap_h_mec1985 tau_frad_h_mec1985 c_tau_arb_i_mec1985 
                c_tau_apers_i_mec1985 c_tau_kap_i_mec1985 c_tau_frad_i_mec1985 c_tau_arb_h_mec1985
                c_tau_apers_h_mec1985 c_tau_kap_h_mec1985 c_tau_frad_h_mec1985
                per_1988 cap_1988 dec_1988 ear_1988 c_per_1988 tax1_1988 c_tax1_1988 
                h_tax1_1988 c_cap_1988 c_dec_1988 c_ear_1988 virtuelindk_i_1988 
                virtuelindk_h1_1988 virtuelindk_h2_1988 tau_arb_i1988
                tau_apers_i1988 tau_kap_i1988 tau_frad_i1988 tau_arb_h1988 
                tau_apers_h1988 tau_kap_h1988 tau_frad_h1988 c_tau_arb_i1988 
                c_tau_apers_i1988 c_tau_kap_i1988 c_tau_frad_i1988 c_tau_arb_h1988
                c_tau_apers_h1988 c_tau_kap_h1988 c_tau_frad_h1988
                arbindk apersindk kapindk lignfrad netincome1985 netincome1988
                c_netincome1985 c_netincome1988
                tau_akt_h1985 c_tau_akt_h1985 tau_akt_h_mec1985 c_tau_akt_h_mec1985 tau_akt_h1988 c_tau_akt_h1988);
set tax1985;

/* Tager højde for at indkomster kan skifte fortegn */
dummycap=1;
if cap_1985>0 and cap_1988>0 then dummycap=2;
if cap_1985<0 and cap_1988<0 then dummycap=3;
if dummycap=1 then shiftcap=1; else shiftcap=0;
dummyper=1;
if per_1985>0 and per_1988>0 then dummyper=2;
if per_1985<0 and per_1988<0 then dummyper=3;
if dummyper=1 then shiftper=1; else shiftper=0;
dummyear=1;
if ear_1985>0 and ear_1988>0 then dummyear=2;
if ear_1985<0 and ear_1988<0 then dummyear=3;
if dummyear=1 then shiftear=1; else shiftear=0;
dummydec=1;
if dec_1985>0 and dec_1988>0 then dummydec=2;
if dec_1985<0 and dec_1988<0 then dummydec=3;
if dummydec=1 then shiftdec=1; else shiftdec=0;

/* Beregner log-forskellen i indkomster */
if shiftear=0 then diffarb=log(ear_1988/ear_1985);
else diffarb=.;
if shiftdec=0 then difffrad=log(dec_1988/dec_1985);
else difffrad=.;
if shiftper=0 then diffapers=log(per_1988/per_1985);
else diffapers=.;
if shiftcap=0 then diffkap=log(cap_1988/cap_1985);
else diffkap=.;

/* Beregner log-forskellen i net-of tax rate */
if 0<tau_arb_i1985<1 and 0<tau_arb_i1988<1 then diffMTR_arb_i=log((1-tau_arb_i1988)/(1-tau_arb_i1985));
if 0<tau_apers_i1985<1 and 0<tau_apers_i1988<1 then diffMTR_apers_i=log((1-tau_apers_i1988)/(1-tau_apers_i1985));
if 0<tau_kap_i1985<1 and 0<tau_kap_i1988<1 then diffMTR_kap_i=log((1-tau_kap_i1988)/(1-tau_kap_i1985));
if 0<tau_frad_i1985<1 and 0<tau_frad_i1988<1 then diffMTR_frad_i=log((1-tau_frad_i1988)/(1-tau_frad_i1985));

if 0<tau_arb_h1985<1 and 0<tau_arb_h1988<1 then diffMTR_arb_h=log((1-tau_arb_h1988)/(1-tau_arb_h1985));
if 0<tau_apers_h1985<1 and 0<tau_apers_h1988<1 then diffMTR_apers_h=log((1-tau_apers_h1988)/(1-tau_apers_h1985));
if 0<tau_kap_h1985<1 and 0<tau_kap_h1988<1 then diffMTR_kap_h=log((1-tau_kap_h1988)/(1-tau_kap_h1985));
if 0<tau_frad_h1985<1 and 0<tau_frad_h1988<1 then diffMTR_frad_h=log((1-tau_frad_h1988)/(1-tau_frad_h1985));
if 0<tau_akt_h1985<1 and 0<tau_akt_h1988<1 then diffMTR_akt_h=log((1-tau_akt_h1988)/(1-tau_akt_h1985));

if 0<c_tau_arb_i1985<1 and 0<c_tau_arb_i1988<1 then c_diffMTR_arb_i=log((1-c_tau_arb_i1988)/(1-c_tau_arb_i1985));
if 0<c_tau_apers_i1985<1 and 0<c_tau_apers_i1988<1 then c_diffMTR_apers_i=log((1-c_tau_apers_i1988)/(1-c_tau_apers_i1985));
if 0<c_tau_kap_i1985<1 and 0<c_tau_kap_i1988<1 then c_diffMTR_kap_i=log((1-c_tau_kap_i1988)/(1-c_tau_kap_i1985));
if 0<c_tau_frad_i1985<1 and 0<c_tau_frad_i1988<1 then c_diffMTR_frad_i=log((1-c_tau_frad_i1988)/(1-c_tau_frad_i1985));

if 0<c_tau_arb_h1985<1 and 0<c_tau_arb_h1988<1 then c_diffMTR_arb_h=log((1-c_tau_arb_h1988)/(1-c_tau_arb_h1985));
if 0<c_tau_apers_h1985<1 and 0<c_tau_apers_h1988<1 then c_diffMTR_apers_h=log((1-c_tau_apers_h1988)/(1-c_tau_apers_h1985));
if 0<c_tau_kap_h1985<1 and 0<c_tau_kap_h1988<1 then c_diffMTR_kap_h=log((1-c_tau_kap_h1988)/(1-c_tau_kap_h1985));
if 0<c_tau_frad_h1985<1 and 0<c_tau_frad_h1988<1 then c_diffMTR_frad_h=log((1-c_tau_frad_h1988)/(1-c_tau_frad_h1985));
if 0<c_tau_akt_h1985<1 and 0<c_tau_akt_h1988<1 then c_diffMTR_akt_h=log((1-c_tau_akt_h1988)/(1-c_tau_akt_h1985));

/* Beregner instrument for log-forskellen i net-of-tax rate */
if 0<tau_arb_i1985<1 and 0<tau_arb_i_mec1985<1 then diffMTR_arb_i_IV=log((1-tau_arb_i_mec1985)/(1-tau_arb_i1985));
if 0<tau_apers_i1985<1 and 0<tau_apers_i_mec1985<1 then diffMTR_apers_i_IV=log((1-tau_apers_i_mec1985)/(1-tau_apers_i1985));
if 0<tau_kap_i1985<1 and 0<tau_kap_i_mec1985<1 then diffMTR_kap_i_IV=log((1-tau_kap_i_mec1985)/(1-tau_kap_i1985));
if 0<tau_frad_i1985<1 and 0<tau_frad_i_mec1985<1 then diffMTR_frad_i_IV=log((1-tau_frad_i_mec1985)/(1-tau_frad_i1985));

if 0<tau_arb_h1985<1 and 0<tau_arb_h_mec1985<1 then diffMTR_arb_h_IV=log((1-tau_arb_h_mec1985)/(1-tau_arb_h1985));
if 0<tau_apers_h1985<1 and 0<tau_apers_h_mec1985<1 then diffMTR_apers_h_IV=log((1-tau_apers_h_mec1985)/(1-tau_apers_h1985));
if 0<tau_kap_h1985<1 and 0<tau_kap_h_mec1985<1 then diffMTR_kap_h_IV=log((1-tau_kap_h_mec1985)/(1-tau_kap_h1985));
if 0<tau_frad_h1985<1 and 0<tau_frad_h_mec1985<1 then diffMTR_frad_h_IV=log((1-tau_frad_h_mec1985)/(1-tau_frad_h1985));
if 0<tau_akt_h1985<1 and 0<tau_akt_h_mec1985<1 then diffMTR_akt_h_IV=log((1-tau_akt_h_mec1985)/(1-tau_akt_h1985));

if 0<c_tau_arb_i1985<1 and 0<c_tau_arb_i_mec1985<1 then c_diffMTR_arb_i_IV=log((1-c_tau_arb_i_mec1985)/(1-c_tau_arb_i1985));
if 0<c_tau_apers_i1985<1 and 0<c_tau_apers_i_mec1985<1 then c_diffMTR_apers_i_IV=log((1-c_tau_apers_i_mec1985)/(1-c_tau_apers_i1985));
if 0<c_tau_kap_i1985<1 and 0<c_tau_kap_i_mec1985<1 then c_diffMTR_kap_i_IV=log((1-c_tau_kap_i_mec1985)/(1-c_tau_kap_i1985));
if 0<c_tau_frad_i1985<1 and 0<c_tau_frad_i_mec1985<1 then c_diffMTR_frad_i_IV=log((1-c_tau_frad_i_mec1985)/(1-c_tau_frad_i1985));

if 0<c_tau_arb_h1985<1 and 0<c_tau_arb_h_mec1985<1 then c_diffMTR_arb_h_IV=log((1-c_tau_arb_h_mec1985)/(1-c_tau_arb_h1985));
if 0<c_tau_apers_h1985<1 and 0<c_tau_apers_h_mec1985<1 then c_diffMTR_apers_h_IV=log((1-c_tau_apers_h_mec1985)/(1-c_tau_apers_h1985));
if 0<c_tau_kap_h1985<1 and 0<c_tau_kap_h_mec1985<1 then c_diffMTR_kap_h_IV=log((1-c_tau_kap_h_mec1985)/(1-c_tau_kap_h1985));
if 0<c_tau_frad_h1985<1 and 0<c_tau_frad_h_mec1985<1 then c_diffMTR_frad_h_IV=log((1-c_tau_frad_h_mec1985)/(1-c_tau_frad_h1985));
if 0<c_tau_akt_h1985<1 and 0<c_tau_akt_h_mec1985<1 then c_diffMTR_akt_h_IV=log((1-c_tau_akt_h_mec1985)/(1-c_tau_akt_h1985));

/* Beregner log-forskellen i nettoindkomst */
taxable1985=ear_1985+per_1985+cap_1985-dec_1985;
taxable1988=ear_1988+per_1988+cap_1988-dec_1988;

dummytaxable=0;
if taxable1985>0 and taxable1988>0 then do;
dummytaxable=1;
difftax=log((taxable1988)/(taxable1985));
end;
broad1985=ear_1985+cap_1985;
broad1988=ear_1988+cap_1988;

dummybroad=0;
if broad1985>0 and broad1988>0 then do;
dummybroad=1;
diffbroad=log((broad1988)/(broad1985));
end;
taxable=taxable1985;
broad=broad1985;
logbroad=log(broad);
logtaxable=log(taxable);

netincome1985=ear_1985+per_1985+cap_1985-dec_1985-tax1_1985;
netincome1988=ear_1988+per_1988+cap_1988-dec_1988-tax1_1988;
c_netincome1985=c_ear_1985+c_per_1985+c_cap_1985-c_dec_1985-c_tax1_1985;
c_netincome1988=c_ear_1988+c_per_1988+c_cap_1988-c_dec_1988-c_tax1_1988;

if netincome1985>0 and netincome1988>0 then
diffinc=log((netincome1988)/(netincome1985));

if c_netincome1985>0 and c_netincome1988>0 then
c_diffinc=log((c_netincome1988)/(c_netincome1985));

/* Beregner log-forskellen i virtuel indkomst */
if virtuelindk_i_1985>0 and virtuelindk_i_1988>0 then 
diffvir_i=log(virtuelindk_i_1988/virtuelindk_i_1985);
if virtuelindk_h1_1985>0 and virtuelindk_h1_1988>0 then
diffvir_h1=log(virtuelindk_h1_1988/virtuelindk_h1_1985);
if virtuelindk_h2_1985>0 and virtuelindk_h2_1988>0 then 
diffvir_h2=log(virtuelindk_h2_1988/virtuelindk_h2_1985);

/* Beregner instrument for log-forskellen i virtuel indkomst */
if virtuelindk_i_1985>0 and virtuelindk_i_mec1985>0 then 
diffvir_i_IV=log(virtuelindk_i_mec1985/virtuelindk_i_1985);
if virtuelindk_h1_1985>0 and virtuelindk_h1_mec1985>0 then
diffvir_h1_IV=log(virtuelindk_h1_mec1985/virtuelindk_h1_1985);
if virtuelindk_h2_1985>0 and virtuelindk_h2_mec1985>0 then 
diffvir_h2_IV=log(virtuelindk_h2_mec1985/virtuelindk_h2_1985);

/* Tager log til indkomster */
if dummyear=2 then logarb=log(ear_1985);
if dummyear=3 then logarb=log((ear_1985*(-1)));

if dummyper=2 then logapers=log(per_1985);
if dummyper=3 then logapers=log((per_1985*(-1)));

if dummycap=2 then logkap=log(cap_1985);
if dummycap=3 then logkap=log((cap_1985*(-1)));

if dummydec=2 then logfrad=log(dec_1985);
if dummydec=3 then logfrad=log((dec_1985*(-1)));

/* Omdøber indkomster */
arb=ear_1985;
apers=per_1985;
kap=cap_1985;
frad=dec_1985;
tax=tax1_1985;
tau_arb_i_pre=tau_arb_i1985;
tau_arb_h_pre=tau_arb_h1985;
tau_arb_i_post=tau_arb_i1988;
tau_arb_h_post=tau_arb_h1988;
tau_arb_i_mec=tau_arb_i_mec1985;
tau_arb_h_mec=tau_arb_h_mec1985;

tau_kap_i_pre=tau_kap_i1985;
tau_kap_h_pre=tau_kap_h1985;
tau_kap_i_post=tau_kap_i1988;
tau_kap_h_post=tau_kap_h1988;
tau_kap_i_mec=tau_kap_i_mec1985;
tau_kap_h_mec=tau_kap_h_mec1985;

tau_frad_i_pre=tau_frad_i1985;
tau_frad_h_pre=tau_frad_h1985;
tau_frad_i_post=tau_frad_i1988;
tau_frad_h_post=tau_frad_h1988;
tau_frad_i_mec=tau_frad_i_mec1985;
tau_frad_h_mec=tau_frad_h_mec1985;



dummyper_income=1;
if per_income_1985>0 and per_income_1988>0 then dummyper_income=2;
if per_income_1985<0 and per_income_1988<0 then dummyper_income=3;
if dummyper_income=1 then shiftper_income=1; else shiftper_income=0;
if shiftper_income=0 then diffper_income=log(per_income_1988/per_income_1985);
else diffper_income=.;
per_income=per_income_1985;
if dummyper_income=2 then logper_income=log(per_income_1985);
if dummyper_income=3 then logper_income=log((per_income_1985*(-1)));

run;


data tax2_1986(drop=per_1986 cap_1986 dec_1986 ear_1986 c_per_1986 tax1_1986 c_tax1_1986 
                h_tax1_1986 c_cap_1986 c_dec_1986 c_ear_1986 virtuelindk_i_1986 
                virtuelindk_h1_1986 virtuelindk_h2_1986 tau_arb_i1986
                tau_apers_i1986 tau_kap_i1986 tau_frad_i1986 tau_arb_h1986 
                tau_apers_h1986 tau_kap_h1986 tau_frad_h1986 c_tau_arb_i1986 
                c_tau_apers_i1986 c_tau_kap_i1986 c_tau_frad_i1986 c_tau_arb_h1986
                c_tau_apers_h1986 c_tau_kap_h1986 c_tau_frad_h1986
                virtuelindk_i_mec1986 virtuelindk_h1_mec1986 virtuelindk_h2_mec1986 
			    virtuelindk_i_mec virtuelindk_h1_mec virtuelindk_h2_mec
                tau_arb_i_mec1986 ctype 
                tau_apers_i_mec1986 tau_kap_i_mec1986 tau_frad_i_mec1986 tau_arb_h_mec1986 
                tau_apers_h_mec1986 tau_kap_h_mec1986 tau_frad_h_mec1986 c_tau_arb_i_mec1986 
                c_tau_apers_i_mec1986 c_tau_kap_i_mec1986 c_tau_frad_i_mec1986 c_tau_arb_h_mec1986
                c_tau_apers_h_mec1986 c_tau_kap_h_mec1986 c_tau_frad_h_mec1986
                per_1989 cap_1989 dec_1989 ear_1989 c_per_1989 tax1_1989 c_tax1_1989 
                h_tax1_1989 c_cap_1989 c_dec_1989 c_ear_1989 virtuelindk_i_1989 
                virtuelindk_h1_1989 virtuelindk_h2_1989 tau_arb_i1989
                tau_apers_i1989 tau_kap_i1989 tau_frad_i1989 tau_arb_h1989 
                tau_apers_h1989 tau_kap_h1989 tau_frad_h1989 c_tau_arb_i1989 
                c_tau_apers_i1989 c_tau_kap_i1989 c_tau_frad_i1989 c_tau_arb_h1989
                c_tau_apers_h1989 c_tau_kap_h1989 c_tau_frad_h1989
                arbindk apersindk kapindk lignfrad netincome1986 netincome1989
                c_netincome1986 c_netincome1989
tau_akt_h1986 c_tau_akt_h1986 tau_akt_h_mec1986 c_tau_akt_h_mec1986 tau_akt_h1989 c_tau_akt_h1989);
set tax1986;

/* Tager højde for at indkomster kan skifte fortegn */
dummycap=1;
if cap_1986>0 and cap_1989>0 then dummycap=2;
if cap_1986<0 and cap_1989<0 then dummycap=3;
if dummycap=1 then shiftcap=1; else shiftcap=0;
dummyper=1;
if per_1986>0 and per_1989>0 then dummyper=2;
if per_1986<0 and per_1989<0 then dummyper=3;
if dummyper=1 then shiftper=1; else shiftper=0;
dummyear=1;
if ear_1986>0 and ear_1989>0 then dummyear=2;
if ear_1986<0 and ear_1989<0 then dummyear=3;
if dummyear=1 then shiftear=1; else shiftear=0;
dummydec=1;
if dec_1986>0 and dec_1989>0 then dummydec=2;
if dec_1986<0 and dec_1989<0 then dummydec=3;
if dummydec=1 then shiftdec=1; else shiftdec=0;

/* Beregner log-forskellen i indkomster */
if shiftear=0 then diffarb=log(ear_1989/ear_1986);
else diffarb=.;
if shiftdec=0 then difffrad=log(dec_1989/dec_1986);
else difffrad=.;
if shiftper=0 then diffapers=log(per_1989/per_1986);
else diffapers=.;
if shiftcap=0 then diffkap=log(cap_1989/cap_1986);
else diffkap=.;

/* Beregner log-forskellen i net-of tax rate */
if 0<tau_arb_i1986<1 and 0<tau_arb_i1989<1 then diffMTR_arb_i=log((1-tau_arb_i1989)/(1-tau_arb_i1986));
if 0<tau_apers_i1986<1 and 0<tau_apers_i1989<1 then diffMTR_apers_i=log((1-tau_apers_i1989)/(1-tau_apers_i1986));
if 0<tau_kap_i1986<1 and 0<tau_kap_i1989<1 then diffMTR_kap_i=log((1-tau_kap_i1989)/(1-tau_kap_i1986));
if 0<tau_frad_i1986<1 and 0<tau_frad_i1989<1 then diffMTR_frad_i=log((1-tau_frad_i1989)/(1-tau_frad_i1986));

if 0<tau_arb_h1986<1 and 0<tau_arb_h1989<1 then diffMTR_arb_h=log((1-tau_arb_h1989)/(1-tau_arb_h1986));
if 0<tau_apers_h1986<1 and 0<tau_apers_h1989<1 then diffMTR_apers_h=log((1-tau_apers_h1989)/(1-tau_apers_h1986));
if 0<tau_kap_h1986<1 and 0<tau_kap_h1989<1 then diffMTR_kap_h=log((1-tau_kap_h1989)/(1-tau_kap_h1986));
if 0<tau_frad_h1986<1 and 0<tau_frad_h1989<1 then diffMTR_frad_h=log((1-tau_frad_h1989)/(1-tau_frad_h1986));
if 0<tau_akt_h1986<1 and 0<tau_akt_h1989<1 then diffMTR_akt_h=log((1-tau_akt_h1989)/(1-tau_akt_h1986));

if 0<c_tau_arb_i1986<1 and 0<c_tau_arb_i1989<1 then c_diffMTR_arb_i=log((1-c_tau_arb_i1989)/(1-c_tau_arb_i1986));
if 0<c_tau_apers_i1986<1 and 0<c_tau_apers_i1989<1 then c_diffMTR_apers_i=log((1-c_tau_apers_i1989)/(1-c_tau_apers_i1986));
if 0<c_tau_kap_i1986<1 and 0<c_tau_kap_i1989<1 then c_diffMTR_kap_i=log((1-c_tau_kap_i1989)/(1-c_tau_kap_i1986));
if 0<c_tau_frad_i1986<1 and 0<c_tau_frad_i1989<1 then c_diffMTR_frad_i=log((1-c_tau_frad_i1989)/(1-c_tau_frad_i1986));

if 0<c_tau_arb_h1986<1 and 0<c_tau_arb_h1989<1 then c_diffMTR_arb_h=log((1-c_tau_arb_h1989)/(1-c_tau_arb_h1986));
if 0<c_tau_apers_h1986<1 and 0<c_tau_apers_h1989<1 then c_diffMTR_apers_h=log((1-c_tau_apers_h1989)/(1-c_tau_apers_h1986));
if 0<c_tau_kap_h1986<1 and 0<c_tau_kap_h1989<1 then c_diffMTR_kap_h=log((1-c_tau_kap_h1989)/(1-c_tau_kap_h1986));
if 0<c_tau_frad_h1986<1 and 0<c_tau_frad_h1989<1 then c_diffMTR_frad_h=log((1-c_tau_frad_h1989)/(1-c_tau_frad_h1986));
if 0<c_tau_akt_h1986<1 and 0<c_tau_akt_h1989<1 then c_diffMTR_akt_h=log((1-c_tau_akt_h1989)/(1-c_tau_akt_h1986));

/* Beregner instrument for log-forskellen i net-of-tax rate */
if 0<tau_arb_i1986<1 and 0<tau_arb_i_mec1986<1 then diffMTR_arb_i_IV=log((1-tau_arb_i_mec1986)/(1-tau_arb_i1986));
if 0<tau_apers_i1986<1 and 0<tau_apers_i_mec1986<1 then diffMTR_apers_i_IV=log((1-tau_apers_i_mec1986)/(1-tau_apers_i1986));
if 0<tau_kap_i1986<1 and 0<tau_kap_i_mec1986<1 then diffMTR_kap_i_IV=log((1-tau_kap_i_mec1986)/(1-tau_kap_i1986));
if 0<tau_frad_i1986<1 and 0<tau_frad_i_mec1986<1 then diffMTR_frad_i_IV=log((1-tau_frad_i_mec1986)/(1-tau_frad_i1986));

if 0<tau_arb_h1986<1 and 0<tau_arb_h_mec1986<1 then diffMTR_arb_h_IV=log((1-tau_arb_h_mec1986)/(1-tau_arb_h1986));
if 0<tau_apers_h1986<1 and 0<tau_apers_h_mec1986<1 then diffMTR_apers_h_IV=log((1-tau_apers_h_mec1986)/(1-tau_apers_h1986));
if 0<tau_kap_h1986<1 and 0<tau_kap_h_mec1986<1 then diffMTR_kap_h_IV=log((1-tau_kap_h_mec1986)/(1-tau_kap_h1986));
if 0<tau_frad_h1986<1 and 0<tau_frad_h_mec1986<1 then diffMTR_frad_h_IV=log((1-tau_frad_h_mec1986)/(1-tau_frad_h1986));
if 0<tau_akt_h1986<1 and 0<tau_akt_h_mec1986<1 then diffMTR_akt_h_IV=log((1-tau_akt_h_mec1986)/(1-tau_akt_h1986));

if 0<c_tau_arb_i1986<1 and 0<c_tau_arb_i_mec1986<1 then c_diffMTR_arb_i_IV=log((1-c_tau_arb_i_mec1986)/(1-c_tau_arb_i1986));
if 0<c_tau_apers_i1986<1 and 0<c_tau_apers_i_mec1986<1 then c_diffMTR_apers_i_IV=log((1-c_tau_apers_i_mec1986)/(1-c_tau_apers_i1986));
if 0<c_tau_kap_i1986<1 and 0<c_tau_kap_i_mec1986<1 then c_diffMTR_kap_i_IV=log((1-c_tau_kap_i_mec1986)/(1-c_tau_kap_i1986));
if 0<c_tau_frad_i1986<1 and 0<c_tau_frad_i_mec1986<1 then c_diffMTR_frad_i_IV=log((1-c_tau_frad_i_mec1986)/(1-c_tau_frad_i1986));

if 0<c_tau_arb_h1986<1 and 0<c_tau_arb_h_mec1986<1 then c_diffMTR_arb_h_IV=log((1-c_tau_arb_h_mec1986)/(1-c_tau_arb_h1986));
if 0<c_tau_apers_h1986<1 and 0<c_tau_apers_h_mec1986<1 then c_diffMTR_apers_h_IV=log((1-c_tau_apers_h_mec1986)/(1-c_tau_apers_h1986));
if 0<c_tau_kap_h1986<1 and 0<c_tau_kap_h_mec1986<1 then c_diffMTR_kap_h_IV=log((1-c_tau_kap_h_mec1986)/(1-c_tau_kap_h1986));
if 0<c_tau_frad_h1986<1 and 0<c_tau_frad_h_mec1986<1 then c_diffMTR_frad_h_IV=log((1-c_tau_frad_h_mec1986)/(1-c_tau_frad_h1986));
if 0<c_tau_akt_h1986<1 and 0<c_tau_akt_h_mec1986<1 then c_diffMTR_akt_h_IV=log((1-c_tau_akt_h_mec1986)/(1-c_tau_akt_h1986));

/* Beregner log-forskellen i nettoindkomst */
taxable1986=ear_1986+per_1986+cap_1986-dec_1986;
taxable1989=ear_1989+per_1989+cap_1989-dec_1989;

dummytaxable=0;
if taxable1986>0 and taxable1989>0 then do;
dummytaxable=1;
difftax=log((taxable1989)/(taxable1986));
end;
broad1986=ear_1986+cap_1986;
broad1989=ear_1989+cap_1989;

dummybroad=0;
if broad1986>0 and broad1989>0 then do;
dummybroad=1;
diffbroad=log((broad1989)/(broad1986));
end;
taxable=taxable1986;
broad=broad1986;
logbroad=log(broad);
logtaxable=log(taxable);

netincome1986=ear_1986+per_1986+cap_1986-dec_1986-tax1_1986;
netincome1989=ear_1989+per_1989+cap_1989-dec_1989-tax1_1989;
c_netincome1986=c_ear_1986+c_per_1986+c_cap_1986-c_dec_1986-c_tax1_1986;
c_netincome1989=c_ear_1989+c_per_1989+c_cap_1989-c_dec_1989-c_tax1_1989;

if netincome1986>0 and netincome1989>0 then
diffinc=log((netincome1989)/(netincome1986));

if c_netincome1986>0 and c_netincome1989>0 then
c_diffinc=log((c_netincome1989)/(c_netincome1986));

/* Beregner log-forskellen i virtuel indkomst */
if virtuelindk_i_1986>0 and virtuelindk_i_1989>0 then 
diffvir_i=log(virtuelindk_i_1989/virtuelindk_i_1986);
if virtuelindk_h1_1986>0 and virtuelindk_h1_1989>0 then
diffvir_h1=log(virtuelindk_h1_1989/virtuelindk_h1_1986);
if virtuelindk_h2_1986>0 and virtuelindk_h2_1989>0 then 
diffvir_h2=log(virtuelindk_h2_1989/virtuelindk_h2_1986);

/* Beregner instrument for log-forskellen i virtuel indkomst */
if virtuelindk_i_1986>0 and virtuelindk_i_mec1986>0 then 
diffvir_i_IV=log(virtuelindk_i_mec1986/virtuelindk_i_1986);
if virtuelindk_h1_1986>0 and virtuelindk_h1_mec1986>0 then
diffvir_h1_IV=log(virtuelindk_h1_mec1986/virtuelindk_h1_1986);
if virtuelindk_h2_1986>0 and virtuelindk_h2_mec1986>0 then 
diffvir_h2_IV=log(virtuelindk_h2_mec1986/virtuelindk_h2_1986);

/* Tager log til indkomster */
if dummyear=2 then logarb=log(ear_1986);
if dummyear=3 then logarb=log((ear_1986*(-1)));

if dummyper=2 then logapers=log(per_1986);
if dummyper=3 then logapers=log((per_1986*(-1)));

if dummycap=2 then logkap=log(cap_1986);
if dummycap=3 then logkap=log((cap_1986*(-1)));

if dummydec=2 then logfrad=log(dec_1986);
if dummydec=3 then logfrad=log((dec_1986*(-1)));

/* Omdøber indkomster */
arb=ear_1986;
apers=per_1986;
kap=cap_1986;
frad=dec_1986;
tax=tax1_1986;
tau_arb_i_pre=tau_arb_i1986;
tau_arb_h_pre=tau_arb_h1986;
tau_arb_i_post=tau_arb_i1989;
tau_arb_h_post=tau_arb_h1989;
tau_arb_i_mec=tau_arb_i_mec1986;
tau_arb_h_mec=tau_arb_h_mec1986;

tau_kap_i_pre=tau_kap_i1986;
tau_kap_h_pre=tau_kap_h1986;
tau_kap_i_post=tau_kap_i1989;
tau_kap_h_post=tau_kap_h1989;
tau_kap_i_mec=tau_kap_i_mec1986;
tau_kap_h_mec=tau_kap_h_mec1986;

tau_frad_i_pre=tau_frad_i1986;
tau_frad_h_pre=tau_frad_h1986;
tau_frad_i_post=tau_frad_i1989;
tau_frad_h_post=tau_frad_h1989;
tau_frad_i_mec=tau_frad_i_mec1986;
tau_frad_h_mec=tau_frad_h_mec1986;


dummyper_income=1;
if per_income_1986>0 and per_income_1989>0 then dummyper_income=2;
if per_income_1986<0 and per_income_1989<0 then dummyper_income=3;
if dummyper_income=1 then shiftper_income=1; else shiftper_income=0;
if shiftper_income=0 then diffper_income=log(per_income_1989/per_income_1986);
else diffper_income=.;
per_income=per_income_1986;
if dummyper_income=2 then logper_income=log(per_income_1986);
if dummyper_income=3 then logper_income=log((per_income_1986*(-1)));
run;


data tax2_1987(drop=per_1987 cap_1987 dec_1987 ear_1987 c_per_1987 tax1_1987 c_tax1_1987 
                h_tax1_1987 c_cap_1987 c_dec_1987 c_ear_1987 virtuelindk_i_1987 
                virtuelindk_h1_1987 virtuelindk_h2_1987 tau_arb_i1987
                tau_apers_i1987 tau_kap_i1987 tau_frad_i1987 tau_arb_h1987 
                tau_apers_h1987 tau_kap_h1987 tau_frad_h1987 c_tau_arb_i1987 
                c_tau_apers_i1987 c_tau_kap_i1987 c_tau_frad_i1987 c_tau_arb_h1987
                c_tau_apers_h1987 c_tau_kap_h1987 c_tau_frad_h1987
                virtuelindk_i_mec1987 virtuelindk_h1_mec1987 virtuelindk_h2_mec1987 
			    virtuelindk_i_mec virtuelindk_h1_mec virtuelindk_h2_mec
                tau_arb_i_mec1987 ctype 
                tau_apers_i_mec1987 tau_kap_i_mec1987 tau_frad_i_mec1987 tau_arb_h_mec1987 
                tau_apers_h_mec1987 tau_kap_h_mec1987 tau_frad_h_mec1987 c_tau_arb_i_mec1987 
                c_tau_apers_i_mec1987 c_tau_kap_i_mec1987 c_tau_frad_i_mec1987 c_tau_arb_h_mec1987
                c_tau_apers_h_mec1987 c_tau_kap_h_mec1987 c_tau_frad_h_mec1987
                per_1990 cap_1990 dec_1990 ear_1990 c_per_1990 tax1_1990 c_tax1_1990 
                h_tax1_1990 c_cap_1990 c_dec_1990 c_ear_1990 virtuelindk_i_1990 
                virtuelindk_h1_1990 virtuelindk_h2_1990 tau_arb_i1990
                tau_apers_i1990 tau_kap_i1990 tau_frad_i1990 tau_arb_h1990 
                tau_apers_h1990 tau_kap_h1990 tau_frad_h1990 c_tau_arb_i1990 
                c_tau_apers_i1990 c_tau_kap_i1990 c_tau_frad_i1990 c_tau_arb_h1990
                c_tau_apers_h1990 c_tau_kap_h1990 c_tau_frad_h1990
                arbindk apersindk kapindk lignfrad netincome1987 netincome1990
                c_netincome1987 c_netincome1990 
tau_akt_h1987 c_tau_akt_h1987 tau_akt_h_mec1987 c_tau_akt_h_mec1987 tau_akt_h1990 c_tau_akt_h1990);
set tax1987;

/* Tager højde for at indkomster kan skifte fortegn */
dummycap=1;
if cap_1987>0 and cap_1990>0 then dummycap=2;
if cap_1987<0 and cap_1990<0 then dummycap=3;
if dummycap=1 then shiftcap=1; else shiftcap=0;
dummyper=1;
if per_1987>0 and per_1990>0 then dummyper=2;
if per_1987<0 and per_1990<0 then dummyper=3;
if dummyper=1 then shiftper=1; else shiftper=0;
dummyear=1;
if ear_1987>0 and ear_1990>0 then dummyear=2;
if ear_1987<0 and ear_1990<0 then dummyear=3;
if dummyear=1 then shiftear=1; else shiftear=0;
dummydec=1;
if dec_1987>0 and dec_1990>0 then dummydec=2;
if dec_1987<0 and dec_1990<0 then dummydec=3;
if dummydec=1 then shiftdec=1; else shiftdec=0;

/* Beregner log-forskellen i indkomster */
if shiftear=0 then diffarb=log(ear_1990/ear_1987);
else diffarb=.;
if shiftdec=0 then difffrad=log(dec_1990/dec_1987);
else difffrad=.;
if shiftper=0 then diffapers=log(per_1990/per_1987);
else diffapers=.;
if shiftcap=0 then diffkap=log(cap_1990/cap_1987);
else diffkap=.;

/* Beregner log-forskellen i net-of tax rate */
if 0<tau_arb_i1987<1 and 0<tau_arb_i1990<1 then diffMTR_arb_i=log((1-tau_arb_i1990)/(1-tau_arb_i1987));
if 0<tau_apers_i1987<1 and 0<tau_apers_i1990<1 then diffMTR_apers_i=log((1-tau_apers_i1990)/(1-tau_apers_i1987));
if 0<tau_kap_i1987<1 and 0<tau_kap_i1990<1 then diffMTR_kap_i=log((1-tau_kap_i1990)/(1-tau_kap_i1987));
if 0<tau_frad_i1987<1 and 0<tau_frad_i1990<1 then diffMTR_frad_i=log((1-tau_frad_i1990)/(1-tau_frad_i1987));

if 0<tau_arb_h1987<1 and 0<tau_arb_h1990<1 then diffMTR_arb_h=log((1-tau_arb_h1990)/(1-tau_arb_h1987));
if 0<tau_apers_h1987<1 and 0<tau_apers_h1990<1 then diffMTR_apers_h=log((1-tau_apers_h1990)/(1-tau_apers_h1987));
if 0<tau_kap_h1987<1 and 0<tau_kap_h1990<1 then diffMTR_kap_h=log((1-tau_kap_h1990)/(1-tau_kap_h1987));
if 0<tau_frad_h1987<1 and 0<tau_frad_h1990<1 then diffMTR_frad_h=log((1-tau_frad_h1990)/(1-tau_frad_h1987));
if 0<tau_akt_h1987<1 and 0<tau_akt_h1990<1 then diffMTR_akt_h=log((1-tau_akt_h1990)/(1-tau_akt_h1987));

if 0<c_tau_arb_i1987<1 and 0<c_tau_arb_i1990<1 then c_diffMTR_arb_i=log((1-c_tau_arb_i1990)/(1-c_tau_arb_i1987));
if 0<c_tau_apers_i1987<1 and 0<c_tau_apers_i1990<1 then c_diffMTR_apers_i=log((1-c_tau_apers_i1990)/(1-c_tau_apers_i1987));
if 0<c_tau_kap_i1987<1 and 0<c_tau_kap_i1990<1 then c_diffMTR_kap_i=log((1-c_tau_kap_i1990)/(1-c_tau_kap_i1987));
if 0<c_tau_frad_i1987<1 and 0<c_tau_frad_i1990<1 then c_diffMTR_frad_i=log((1-c_tau_frad_i1990)/(1-c_tau_frad_i1987));

if 0<c_tau_arb_h1987<1 and 0<c_tau_arb_h1990<1 then c_diffMTR_arb_h=log((1-c_tau_arb_h1990)/(1-c_tau_arb_h1987));
if 0<c_tau_apers_h1987<1 and 0<c_tau_apers_h1990<1 then c_diffMTR_apers_h=log((1-c_tau_apers_h1990)/(1-c_tau_apers_h1987));
if 0<c_tau_kap_h1987<1 and 0<c_tau_kap_h1990<1 then c_diffMTR_kap_h=log((1-c_tau_kap_h1990)/(1-c_tau_kap_h1987));
if 0<c_tau_frad_h1987<1 and 0<c_tau_frad_h1990<1 then c_diffMTR_frad_h=log((1-c_tau_frad_h1990)/(1-c_tau_frad_h1987));
if 0<c_tau_akt_h1987<1 and 0<c_tau_akt_h1990<1 then c_diffMTR_akt_h=log((1-c_tau_akt_h1990)/(1-c_tau_akt_h1987));

/* Beregner instrument for log-forskellen i net-of-tax rate */
if 0<tau_arb_i1987<1 and 0<tau_arb_i_mec1987<1 then diffMTR_arb_i_IV=log((1-tau_arb_i_mec1987)/(1-tau_arb_i1987));
if 0<tau_apers_i1987<1 and 0<tau_apers_i_mec1987<1 then diffMTR_apers_i_IV=log((1-tau_apers_i_mec1987)/(1-tau_apers_i1987));
if 0<tau_kap_i1987<1 and 0<tau_kap_i_mec1987<1 then diffMTR_kap_i_IV=log((1-tau_kap_i_mec1987)/(1-tau_kap_i1987));
if 0<tau_frad_i1987<1 and 0<tau_frad_i_mec1987<1 then diffMTR_frad_i_IV=log((1-tau_frad_i_mec1987)/(1-tau_frad_i1987));

if 0<tau_arb_h1987<1 and 0<tau_arb_h_mec1987<1 then diffMTR_arb_h_IV=log((1-tau_arb_h_mec1987)/(1-tau_arb_h1987));
if 0<tau_apers_h1987<1 and 0<tau_apers_h_mec1987<1 then diffMTR_apers_h_IV=log((1-tau_apers_h_mec1987)/(1-tau_apers_h1987));
if 0<tau_kap_h1987<1 and 0<tau_kap_h_mec1987<1 then diffMTR_kap_h_IV=log((1-tau_kap_h_mec1987)/(1-tau_kap_h1987));
if 0<tau_frad_h1987<1 and 0<tau_frad_h_mec1987<1 then diffMTR_frad_h_IV=log((1-tau_frad_h_mec1987)/(1-tau_frad_h1987));
if 0<tau_akt_h1987<1 and 0<tau_akt_h_mec1987<1 then diffMTR_akt_h_IV=log((1-tau_akt_h_mec1987)/(1-tau_akt_h1987));

if 0<c_tau_arb_i1987<1 and 0<c_tau_arb_i_mec1987<1 then c_diffMTR_arb_i_IV=log((1-c_tau_arb_i_mec1987)/(1-c_tau_arb_i1987));
if 0<c_tau_apers_i1987<1 and 0<c_tau_apers_i_mec1987<1 then c_diffMTR_apers_i_IV=log((1-c_tau_apers_i_mec1987)/(1-c_tau_apers_i1987));
if 0<c_tau_kap_i1987<1 and 0<c_tau_kap_i_mec1987<1 then c_diffMTR_kap_i_IV=log((1-c_tau_kap_i_mec1987)/(1-c_tau_kap_i1987));
if 0<c_tau_frad_i1987<1 and 0<c_tau_frad_i_mec1987<1 then c_diffMTR_frad_i_IV=log((1-c_tau_frad_i_mec1987)/(1-c_tau_frad_i1987));

if 0<c_tau_arb_h1987<1 and 0<c_tau_arb_h_mec1987<1 then c_diffMTR_arb_h_IV=log((1-c_tau_arb_h_mec1987)/(1-c_tau_arb_h1987));
if 0<c_tau_apers_h1987<1 and 0<c_tau_apers_h_mec1987<1 then c_diffMTR_apers_h_IV=log((1-c_tau_apers_h_mec1987)/(1-c_tau_apers_h1987));
if 0<c_tau_kap_h1987<1 and 0<c_tau_kap_h_mec1987<1 then c_diffMTR_kap_h_IV=log((1-c_tau_kap_h_mec1987)/(1-c_tau_kap_h1987));
if 0<c_tau_frad_h1987<1 and 0<c_tau_frad_h_mec1987<1 then c_diffMTR_frad_h_IV=log((1-c_tau_frad_h_mec1987)/(1-c_tau_frad_h1987));
if 0<c_tau_akt_h1987<1 and 0<c_tau_akt_h_mec1987<1 then c_diffMTR_akt_h_IV=log((1-c_tau_akt_h_mec1987)/(1-c_tau_akt_h1987));

/* Beregner log-forskellen i nettoindkomst */
taxable1987=ear_1987+per_1987+cap_1987-dec_1987;
taxable1990=ear_1990+per_1990+cap_1990-dec_1990;

dummytaxable=0;
if taxable1987>0 and taxable1990>0 then do;
dummytaxable=1;
difftax=log((taxable1990)/(taxable1987));
end;
broad1987=ear_1987+cap_1987;
broad1990=ear_1990+cap_1990;

dummybroad=0;
if broad1987>0 and broad1990>0 then do;
dummybroad=1;
diffbroad=log((broad1990)/(broad1987));
end;
taxable=taxable1987;
broad=broad1987;
logbroad=log(broad);
logtaxable=log(taxable);

netincome1987=ear_1987+per_1987+cap_1987-dec_1987-tax1_1987;
netincome1990=ear_1990+per_1990+cap_1990-dec_1990-tax1_1990;
c_netincome1987=c_ear_1987+c_per_1987+c_cap_1987-c_dec_1987-c_tax1_1987;
c_netincome1990=c_ear_1990+c_per_1990+c_cap_1990-c_dec_1990-c_tax1_1990;

if netincome1987>0 and netincome1990>0 then
diffinc=log((netincome1990)/(netincome1987));

if c_netincome1987>0 and c_netincome1990>0 then
c_diffinc=log((c_netincome1990)/(c_netincome1987));

/* Beregner log-forskellen i virtuel indkomst */
if virtuelindk_i_1987>0 and virtuelindk_i_1990>0 then 
diffvir_i=log(virtuelindk_i_1990/virtuelindk_i_1987);
if virtuelindk_h1_1987>0 and virtuelindk_h1_1990>0 then
diffvir_h1=log(virtuelindk_h1_1990/virtuelindk_h1_1987);
if virtuelindk_h2_1987>0 and virtuelindk_h2_1990>0 then 
diffvir_h2=log(virtuelindk_h2_1990/virtuelindk_h2_1987);

/* Beregner instrument for log-forskellen i virtuel indkomst */
if virtuelindk_i_1987>0 and virtuelindk_i_mec1987>0 then 
diffvir_i_IV=log(virtuelindk_i_mec1987/virtuelindk_i_1987);
if virtuelindk_h1_1987>0 and virtuelindk_h1_mec1987>0 then
diffvir_h1_IV=log(virtuelindk_h1_mec1987/virtuelindk_h1_1987);
if virtuelindk_h2_1987>0 and virtuelindk_h2_mec1987>0 then 
diffvir_h2_IV=log(virtuelindk_h2_mec1987/virtuelindk_h2_1987);

/* Tager log til indkomster */
if dummyear=2 then logarb=log(ear_1987);
if dummyear=3 then logarb=log((ear_1987*(-1)));

if dummyper=2 then logapers=log(per_1987);
if dummyper=3 then logapers=log((per_1987*(-1)));

if dummycap=2 then logkap=log(cap_1987);
if dummycap=3 then logkap=log((cap_1987*(-1)));

if dummydec=2 then logfrad=log(dec_1987);
if dummydec=3 then logfrad=log((dec_1987*(-1)));

/* Omdøber indkomster */
arb=ear_1987;
apers=per_1987;
kap=cap_1987;
frad=dec_1987;
tax=tax1_1987;
tau_arb_i_pre=tau_arb_i1987;
tau_arb_h_pre=tau_arb_h1987;
tau_arb_i_post=tau_arb_i1990;
tau_arb_h_post=tau_arb_h1990;
tau_arb_i_mec=tau_arb_i_mec1987;
tau_arb_h_mec=tau_arb_h_mec1987;

tau_kap_i_pre=tau_kap_i1987;
tau_kap_h_pre=tau_kap_h1987;
tau_kap_i_post=tau_kap_i1990;
tau_kap_h_post=tau_kap_h1990;
tau_kap_i_mec=tau_kap_i_mec1987;
tau_kap_h_mec=tau_kap_h_mec1987;

tau_frad_i_pre=tau_frad_i1987;
tau_frad_h_pre=tau_frad_h1987;
tau_frad_i_post=tau_frad_i1990;
tau_frad_h_post=tau_frad_h1990;
tau_frad_i_mec=tau_frad_i_mec1987;
tau_frad_h_mec=tau_frad_h_mec1987;

dummyper_income=1;
if per_income_1987>0 and per_income_1990>0 then dummyper_income=2;
if per_income_1987<0 and per_income_1990<0 then dummyper_income=3;
if dummyper_income=1 then shiftper_income=1; else shiftper_income=0;
if shiftper_income=0 then diffper_income=log(per_income_1990/per_income_1987);
else diffper_income=.;
per_income=per_income_1987;
if dummyper_income=2 then logper_income=log(per_income_1987);
if dummyper_income=3 then logper_income=log((per_income_1987*(-1)));

run;




data tax2_1988(drop=per_1988 cap_1988 dec_1988 ear_1988 c_per_1988 tax1_1988 c_tax1_1988 
                h_tax1_1988 c_cap_1988 c_dec_1988 c_ear_1988 virtuelindk_i_1988 
                virtuelindk_h1_1988 virtuelindk_h2_1988 tau_arb_i1988
                tau_apers_i1988 tau_kap_i1988 tau_frad_i1988 tau_arb_h1988 
                tau_apers_h1988 tau_kap_h1988 tau_frad_h1988 c_tau_arb_i1988 
                c_tau_apers_i1988 c_tau_kap_i1988 c_tau_frad_i1988 c_tau_arb_h1988
                c_tau_apers_h1988 c_tau_kap_h1988 c_tau_frad_h1988
                virtuelindk_i_mec1988 virtuelindk_h1_mec1988 virtuelindk_h2_mec1988 
			    virtuelindk_i_mec virtuelindk_h1_mec virtuelindk_h2_mec
                tau_arb_i_mec1988 ctype 
                tau_apers_i_mec1988 tau_kap_i_mec1988 tau_frad_i_mec1988 tau_arb_h_mec1988 
                tau_apers_h_mec1988 tau_kap_h_mec1988 tau_frad_h_mec1988 c_tau_arb_i_mec1988 
                c_tau_apers_i_mec1988 c_tau_kap_i_mec1988 c_tau_frad_i_mec1988 c_tau_arb_h_mec1988
                c_tau_apers_h_mec1988 c_tau_kap_h_mec1988 c_tau_frad_h_mec1988
                per_1991 cap_1991 dec_1991 ear_1991 c_per_1991 tax1_1991 c_tax1_1991 
                h_tax1_1991 c_cap_1991 c_dec_1991 c_ear_1991 virtuelindk_i_1991 
                virtuelindk_h1_1991 virtuelindk_h2_1991 tau_arb_i1991
                tau_apers_i1991 tau_kap_i1991 tau_frad_i1991 tau_arb_h1991 
                tau_apers_h1991 tau_kap_h1991 tau_frad_h1991 c_tau_arb_i1991 
                c_tau_apers_i1991 c_tau_kap_i1991 c_tau_frad_i1991 c_tau_arb_h1991
                c_tau_apers_h1991 c_tau_kap_h1991 c_tau_frad_h1991
                arbindk apersindk kapindk lignfrad netincome1988 netincome1991
                c_netincome1988 c_netincome1991
tau_akt_h1988 c_tau_akt_h1988 tau_akt_h_mec1988 c_tau_akt_h_mec1988 tau_akt_h1991 c_tau_akt_h1991);
set tax1988;

/* Tager højde for at indkomster kan skifte fortegn */
dummycap=1;
if cap_1988>0 and cap_1991>0 then dummycap=2;
if cap_1988<0 and cap_1991<0 then dummycap=3;
if dummycap=1 then shiftcap=1; else shiftcap=0;
dummyper=1;
if per_1988>0 and per_1991>0 then dummyper=2;
if per_1988<0 and per_1991<0 then dummyper=3;
if dummyper=1 then shiftper=1; else shiftper=0;
dummyear=1;
if ear_1988>0 and ear_1991>0 then dummyear=2;
if ear_1988<0 and ear_1991<0 then dummyear=3;
if dummyear=1 then shiftear=1; else shiftear=0;
dummydec=1;
if dec_1988>0 and dec_1991>0 then dummydec=2;
if dec_1988<0 and dec_1991<0 then dummydec=3;
if dummydec=1 then shiftdec=1; else shiftdec=0;

/* Beregner log-forskellen i indkomster */
if shiftear=0 then diffarb=log(ear_1991/ear_1988);
else diffarb=.;
if shiftdec=0 then difffrad=log(dec_1991/dec_1988);
else difffrad=.;
if shiftper=0 then diffapers=log(per_1991/per_1988);
else diffapers=.;
if shiftcap=0 then diffkap=log(cap_1991/cap_1988);
else diffkap=.;

/* Beregner log-forskellen i net-of tax rate */
if 0<tau_arb_i1988<1 and 0<tau_arb_i1991<1 then diffMTR_arb_i=log((1-tau_arb_i1991)/(1-tau_arb_i1988));
if 0<tau_apers_i1988<1 and 0<tau_apers_i1991<1 then diffMTR_apers_i=log((1-tau_apers_i1991)/(1-tau_apers_i1988));
if 0<tau_kap_i1988<1 and 0<tau_kap_i1991<1 then diffMTR_kap_i=log((1-tau_kap_i1991)/(1-tau_kap_i1988));
if 0<tau_frad_i1988<1 and 0<tau_frad_i1991<1 then diffMTR_frad_i=log((1-tau_frad_i1991)/(1-tau_frad_i1988));

if 0<tau_arb_h1988<1 and 0<tau_arb_h1991<1 then diffMTR_arb_h=log((1-tau_arb_h1991)/(1-tau_arb_h1988));
if 0<tau_apers_h1988<1 and 0<tau_apers_h1991<1 then diffMTR_apers_h=log((1-tau_apers_h1991)/(1-tau_apers_h1988));
if 0<tau_kap_h1988<1 and 0<tau_kap_h1991<1 then diffMTR_kap_h=log((1-tau_kap_h1991)/(1-tau_kap_h1988));
if 0<tau_frad_h1988<1 and 0<tau_frad_h1991<1 then diffMTR_frad_h=log((1-tau_frad_h1991)/(1-tau_frad_h1988));
if 0<tau_akt_h1988<1 and 0<tau_akt_h1991<1 then diffMTR_akt_h=log((1-tau_akt_h1991)/(1-tau_akt_h1988));

if 0<c_tau_arb_i1988<1 and 0<c_tau_arb_i1991<1 then c_diffMTR_arb_i=log((1-c_tau_arb_i1991)/(1-c_tau_arb_i1988));
if 0<c_tau_apers_i1988<1 and 0<c_tau_apers_i1991<1 then c_diffMTR_apers_i=log((1-c_tau_apers_i1991)/(1-c_tau_apers_i1988));
if 0<c_tau_kap_i1988<1 and 0<c_tau_kap_i1991<1 then c_diffMTR_kap_i=log((1-c_tau_kap_i1991)/(1-c_tau_kap_i1988));
if 0<c_tau_frad_i1988<1 and 0<c_tau_frad_i1991<1 then c_diffMTR_frad_i=log((1-c_tau_frad_i1991)/(1-c_tau_frad_i1988));

if 0<c_tau_arb_h1988<1 and 0<c_tau_arb_h1991<1 then c_diffMTR_arb_h=log((1-c_tau_arb_h1991)/(1-c_tau_arb_h1988));
if 0<c_tau_apers_h1988<1 and 0<c_tau_apers_h1991<1 then c_diffMTR_apers_h=log((1-c_tau_apers_h1991)/(1-c_tau_apers_h1988));
if 0<c_tau_kap_h1988<1 and 0<c_tau_kap_h1991<1 then c_diffMTR_kap_h=log((1-c_tau_kap_h1991)/(1-c_tau_kap_h1988));
if 0<c_tau_frad_h1988<1 and 0<c_tau_frad_h1991<1 then c_diffMTR_frad_h=log((1-c_tau_frad_h1991)/(1-c_tau_frad_h1988));
if 0<c_tau_akt_h1988<1 and 0<c_tau_akt_h1991<1 then c_diffMTR_akt_h=log((1-c_tau_akt_h1991)/(1-c_tau_akt_h1988));

/* Beregner instrument for log-forskellen i net-of-tax rate */
if 0<tau_arb_i1988<1 and 0<tau_arb_i_mec1988<1 then diffMTR_arb_i_IV=log((1-tau_arb_i_mec1988)/(1-tau_arb_i1988));
if 0<tau_apers_i1988<1 and 0<tau_apers_i_mec1988<1 then diffMTR_apers_i_IV=log((1-tau_apers_i_mec1988)/(1-tau_apers_i1988));
if 0<tau_kap_i1988<1 and 0<tau_kap_i_mec1988<1 then diffMTR_kap_i_IV=log((1-tau_kap_i_mec1988)/(1-tau_kap_i1988));
if 0<tau_frad_i1988<1 and 0<tau_frad_i_mec1988<1 then diffMTR_frad_i_IV=log((1-tau_frad_i_mec1988)/(1-tau_frad_i1988));

if 0<tau_arb_h1988<1 and 0<tau_arb_h_mec1988<1 then diffMTR_arb_h_IV=log((1-tau_arb_h_mec1988)/(1-tau_arb_h1988));
if 0<tau_apers_h1988<1 and 0<tau_apers_h_mec1988<1 then diffMTR_apers_h_IV=log((1-tau_apers_h_mec1988)/(1-tau_apers_h1988));
if 0<tau_kap_h1988<1 and 0<tau_kap_h_mec1988<1 then diffMTR_kap_h_IV=log((1-tau_kap_h_mec1988)/(1-tau_kap_h1988));
if 0<tau_frad_h1988<1 and 0<tau_frad_h_mec1988<1 then diffMTR_frad_h_IV=log((1-tau_frad_h_mec1988)/(1-tau_frad_h1988));
if 0<tau_akt_h1988<1 and 0<tau_akt_h_mec1988<1 then diffMTR_akt_h_IV=log((1-tau_akt_h_mec1988)/(1-tau_akt_h1988));

if 0<c_tau_arb_i1988<1 and 0<c_tau_arb_i_mec1988<1 then c_diffMTR_arb_i_IV=log((1-c_tau_arb_i_mec1988)/(1-c_tau_arb_i1988));
if 0<c_tau_apers_i1988<1 and 0<c_tau_apers_i_mec1988<1 then c_diffMTR_apers_i_IV=log((1-c_tau_apers_i_mec1988)/(1-c_tau_apers_i1988));
if 0<c_tau_kap_i1988<1 and 0<c_tau_kap_i_mec1988<1 then c_diffMTR_kap_i_IV=log((1-c_tau_kap_i_mec1988)/(1-c_tau_kap_i1988));
if 0<c_tau_frad_i1988<1 and 0<c_tau_frad_i_mec1988<1 then c_diffMTR_frad_i_IV=log((1-c_tau_frad_i_mec1988)/(1-c_tau_frad_i1988));

if 0<c_tau_arb_h1988<1 and 0<c_tau_arb_h_mec1988<1 then c_diffMTR_arb_h_IV=log((1-c_tau_arb_h_mec1988)/(1-c_tau_arb_h1988));
if 0<c_tau_apers_h1988<1 and 0<c_tau_apers_h_mec1988<1 then c_diffMTR_apers_h_IV=log((1-c_tau_apers_h_mec1988)/(1-c_tau_apers_h1988));
if 0<c_tau_kap_h1988<1 and 0<c_tau_kap_h_mec1988<1 then c_diffMTR_kap_h_IV=log((1-c_tau_kap_h_mec1988)/(1-c_tau_kap_h1988));
if 0<c_tau_frad_h1988<1 and 0<c_tau_frad_h_mec1988<1 then c_diffMTR_frad_h_IV=log((1-c_tau_frad_h_mec1988)/(1-c_tau_frad_h1988));
if 0<c_tau_akt_h1988<1 and 0<c_tau_akt_h_mec1988<1 then c_diffMTR_akt_h_IV=log((1-c_tau_akt_h_mec1988)/(1-c_tau_akt_h1988));

/* Beregner log-forskellen i nettoindkomst */
taxable1988=ear_1988+per_1988+cap_1988-dec_1988;
taxable1991=ear_1991+per_1991+cap_1991-dec_1991;

dummytaxable=0;
if taxable1988>0 and taxable1991>0 then do;
dummytaxable=1;
difftax=log((taxable1991)/(taxable1988));
end;
broad1988=ear_1988+cap_1988;
broad1991=ear_1991+cap_1991;

dummybroad=0;
if broad1988>0 and broad1991>0 then do;
dummybroad=1;
diffbroad=log((broad1991)/(broad1988));
end;
taxable=taxable1988;
broad=broad1988;
logbroad=log(broad);
logtaxable=log(taxable);

netincome1988=ear_1988+per_1988+cap_1988-dec_1988-tax1_1988;
netincome1991=ear_1991+per_1991+cap_1991-dec_1991-tax1_1991;
c_netincome1988=c_ear_1988+c_per_1988+c_cap_1988-c_dec_1988-c_tax1_1988;
c_netincome1991=c_ear_1991+c_per_1991+c_cap_1991-c_dec_1991-c_tax1_1991;

if netincome1988>0 and netincome1991>0 then
diffinc=log((netincome1991)/(netincome1988));

if c_netincome1988>0 and c_netincome1991>0 then
c_diffinc=log((c_netincome1991)/(c_netincome1988));

/* Beregner log-forskellen i virtuel indkomst */
if virtuelindk_i_1988>0 and virtuelindk_i_1991>0 then 
diffvir_i=log(virtuelindk_i_1991/virtuelindk_i_1988);
if virtuelindk_h1_1988>0 and virtuelindk_h1_1991>0 then
diffvir_h1=log(virtuelindk_h1_1991/virtuelindk_h1_1988);
if virtuelindk_h2_1988>0 and virtuelindk_h2_1991>0 then 
diffvir_h2=log(virtuelindk_h2_1991/virtuelindk_h2_1988);

/* Beregner instrument for log-forskellen i virtuel indkomst */
if virtuelindk_i_1988>0 and virtuelindk_i_mec1988>0 then 
diffvir_i_IV=log(virtuelindk_i_mec1988/virtuelindk_i_1988);
if virtuelindk_h1_1988>0 and virtuelindk_h1_mec1988>0 then
diffvir_h1_IV=log(virtuelindk_h1_mec1988/virtuelindk_h1_1988);
if virtuelindk_h2_1988>0 and virtuelindk_h2_mec1988>0 then 
diffvir_h2_IV=log(virtuelindk_h2_mec1988/virtuelindk_h2_1988);

/* Tager log til indkomster */
if dummyear=2 then logarb=log(ear_1988);
if dummyear=3 then logarb=log((ear_1988*(-1)));

if dummyper=2 then logapers=log(per_1988);
if dummyper=3 then logapers=log((per_1988*(-1)));

if dummycap=2 then logkap=log(cap_1988);
if dummycap=3 then logkap=log((cap_1988*(-1)));

if dummydec=2 then logfrad=log(dec_1988);
if dummydec=3 then logfrad=log((dec_1988*(-1)));

/* Omdøber indkomster */
arb=ear_1988;
apers=per_1988;
kap=cap_1988;
frad=dec_1988;
tax=tax1_1988;
tau_arb_i_pre=tau_arb_i1988;
tau_arb_h_pre=tau_arb_h1988;
tau_arb_i_post=tau_arb_i1991;
tau_arb_h_post=tau_arb_h1991;
tau_arb_i_mec=tau_arb_i_mec1988;
tau_arb_h_mec=tau_arb_h_mec1988;

tau_kap_i_pre=tau_kap_i1988;
tau_kap_h_pre=tau_kap_h1988;
tau_kap_i_post=tau_kap_i1991;
tau_kap_h_post=tau_kap_h1991;
tau_kap_i_mec=tau_kap_i_mec1988;
tau_kap_h_mec=tau_kap_h_mec1988;

tau_frad_i_pre=tau_frad_i1988;
tau_frad_h_pre=tau_frad_h1988;
tau_frad_i_post=tau_frad_i1991;
tau_frad_h_post=tau_frad_h1991;
tau_frad_i_mec=tau_frad_i_mec1988;
tau_frad_h_mec=tau_frad_h_mec1988;


dummyper_income=1;
if per_income_1988>0 and per_income_1991>0 then dummyper_income=2;
if per_income_1988<0 and per_income_1991<0 then dummyper_income=3;
if dummyper_income=1 then shiftper_income=1; else shiftper_income=0;
if shiftper_income=0 then diffper_income=log(per_income_1991/per_income_1988);
else diffper_income=.;
per_income=per_income_1988;
if dummyper_income=2 then logper_income=log(per_income_1988);
if dummyper_income=3 then logper_income=log((per_income_1988*(-1)));
run;




data tax2_1989(drop=per_1989 cap_1989 dec_1989 ear_1989 c_per_1989 tax1_1989 c_tax1_1989 
                h_tax1_1989 c_cap_1989 c_dec_1989 c_ear_1989 virtuelindk_i_1989 
                virtuelindk_h1_1989 virtuelindk_h2_1989 tau_arb_i1989
                tau_apers_i1989 tau_kap_i1989 tau_frad_i1989 tau_arb_h1989 
                tau_apers_h1989 tau_kap_h1989 tau_frad_h1989 c_tau_arb_i1989 
                c_tau_apers_i1989 c_tau_kap_i1989 c_tau_frad_i1989 c_tau_arb_h1989
                c_tau_apers_h1989 c_tau_kap_h1989 c_tau_frad_h1989
                virtuelindk_i_mec1989 virtuelindk_h1_mec1989 virtuelindk_h2_mec1989 
			    virtuelindk_i_mec virtuelindk_h1_mec virtuelindk_h2_mec
                tau_arb_i_mec1989 ctype 
                tau_apers_i_mec1989 tau_kap_i_mec1989 tau_frad_i_mec1989 tau_arb_h_mec1989 
                tau_apers_h_mec1989 tau_kap_h_mec1989 tau_frad_h_mec1989 c_tau_arb_i_mec1989 
                c_tau_apers_i_mec1989 c_tau_kap_i_mec1989 c_tau_frad_i_mec1989 c_tau_arb_h_mec1989
                c_tau_apers_h_mec1989 c_tau_kap_h_mec1989 c_tau_frad_h_mec1989
                per_1992 cap_1992 dec_1992 ear_1992 c_per_1992 tax1_1992 c_tax1_1992 
                h_tax1_1992 c_cap_1992 c_dec_1992 c_ear_1992 virtuelindk_i_1992 
                virtuelindk_h1_1992 virtuelindk_h2_1992 tau_arb_i1992
                tau_apers_i1992 tau_kap_i1992 tau_frad_i1992 tau_arb_h1992 
                tau_apers_h1992 tau_kap_h1992 tau_frad_h1992 c_tau_arb_i1992 
                c_tau_apers_i1992 c_tau_kap_i1992 c_tau_frad_i1992 c_tau_arb_h1992
                c_tau_apers_h1992 c_tau_kap_h1992 c_tau_frad_h1992
                arbindk apersindk kapindk lignfrad netincome1989 netincome1992
                c_netincome1989 c_netincome1992
tau_akt_h1989 c_tau_akt_h1989 tau_akt_h_mec1989 c_tau_akt_h_mec1989 tau_akt_h1992 c_tau_akt_h1992);
set tax1989;

/* Tager højde for at indkomster kan skifte fortegn */
dummycap=1;
if cap_1989>0 and cap_1992>0 then dummycap=2;
if cap_1989<0 and cap_1992<0 then dummycap=3;
if dummycap=1 then shiftcap=1; else shiftcap=0;
dummyper=1;
if per_1989>0 and per_1992>0 then dummyper=2;
if per_1989<0 and per_1992<0 then dummyper=3;
if dummyper=1 then shiftper=1; else shiftper=0;
dummyear=1;
if ear_1989>0 and ear_1992>0 then dummyear=2;
if ear_1989<0 and ear_1992<0 then dummyear=3;
if dummyear=1 then shiftear=1; else shiftear=0;
dummydec=1;
if dec_1989>0 and dec_1992>0 then dummydec=2;
if dec_1989<0 and dec_1992<0 then dummydec=3;
if dummydec=1 then shiftdec=1; else shiftdec=0;

/* Beregner log-forskellen i indkomster */
if shiftear=0 then diffarb=log(ear_1992/ear_1989);
else diffarb=.;
if shiftdec=0 then difffrad=log(dec_1992/dec_1989);
else difffrad=.;
if shiftper=0 then diffapers=log(per_1992/per_1989);
else diffapers=.;
if shiftcap=0 then diffkap=log(cap_1992/cap_1989);
else diffkap=.;

/* Beregner log-forskellen i net-of tax rate */
if 0<tau_arb_i1989<1 and 0<tau_arb_i1992<1 then diffMTR_arb_i=log((1-tau_arb_i1992)/(1-tau_arb_i1989));
if 0<tau_apers_i1989<1 and 0<tau_apers_i1992<1 then diffMTR_apers_i=log((1-tau_apers_i1992)/(1-tau_apers_i1989));
if 0<tau_kap_i1989<1 and 0<tau_kap_i1992<1 then diffMTR_kap_i=log((1-tau_kap_i1992)/(1-tau_kap_i1989));
if 0<tau_frad_i1989<1 and 0<tau_frad_i1992<1 then diffMTR_frad_i=log((1-tau_frad_i1992)/(1-tau_frad_i1989));

if 0<tau_arb_h1989<1 and 0<tau_arb_h1992<1 then diffMTR_arb_h=log((1-tau_arb_h1992)/(1-tau_arb_h1989));
if 0<tau_apers_h1989<1 and 0<tau_apers_h1992<1 then diffMTR_apers_h=log((1-tau_apers_h1992)/(1-tau_apers_h1989));
if 0<tau_kap_h1989<1 and 0<tau_kap_h1992<1 then diffMTR_kap_h=log((1-tau_kap_h1992)/(1-tau_kap_h1989));
if 0<tau_frad_h1989<1 and 0<tau_frad_h1992<1 then diffMTR_frad_h=log((1-tau_frad_h1992)/(1-tau_frad_h1989));
if 0<tau_akt_h1989<1 and 0<tau_akt_h1992<1 then diffMTR_akt_h=log((1-tau_akt_h1992)/(1-tau_akt_h1989));

if 0<c_tau_arb_i1989<1 and 0<c_tau_arb_i1992<1 then c_diffMTR_arb_i=log((1-c_tau_arb_i1992)/(1-c_tau_arb_i1989));
if 0<c_tau_apers_i1989<1 and 0<c_tau_apers_i1992<1 then c_diffMTR_apers_i=log((1-c_tau_apers_i1992)/(1-c_tau_apers_i1989));
if 0<c_tau_kap_i1989<1 and 0<c_tau_kap_i1992<1 then c_diffMTR_kap_i=log((1-c_tau_kap_i1992)/(1-c_tau_kap_i1989));
if 0<c_tau_frad_i1989<1 and 0<c_tau_frad_i1992<1 then c_diffMTR_frad_i=log((1-c_tau_frad_i1992)/(1-c_tau_frad_i1989));

if 0<c_tau_arb_h1989<1 and 0<c_tau_arb_h1992<1 then c_diffMTR_arb_h=log((1-c_tau_arb_h1992)/(1-c_tau_arb_h1989));
if 0<c_tau_apers_h1989<1 and 0<c_tau_apers_h1992<1 then c_diffMTR_apers_h=log((1-c_tau_apers_h1992)/(1-c_tau_apers_h1989));
if 0<c_tau_kap_h1989<1 and 0<c_tau_kap_h1992<1 then c_diffMTR_kap_h=log((1-c_tau_kap_h1992)/(1-c_tau_kap_h1989));
if 0<c_tau_frad_h1989<1 and 0<c_tau_frad_h1992<1 then c_diffMTR_frad_h=log((1-c_tau_frad_h1992)/(1-c_tau_frad_h1989));
if 0<c_tau_akt_h1989<1 and 0<c_tau_akt_h1992<1 then c_diffMTR_akt_h=log((1-c_tau_akt_h1992)/(1-c_tau_akt_h1989));

/* Beregner instrument for log-forskellen i net-of-tax rate */
if 0<tau_arb_i1989<1 and 0<tau_arb_i_mec1989<1 then diffMTR_arb_i_IV=log((1-tau_arb_i_mec1989)/(1-tau_arb_i1989));
if 0<tau_apers_i1989<1 and 0<tau_apers_i_mec1989<1 then diffMTR_apers_i_IV=log((1-tau_apers_i_mec1989)/(1-tau_apers_i1989));
if 0<tau_kap_i1989<1 and 0<tau_kap_i_mec1989<1 then diffMTR_kap_i_IV=log((1-tau_kap_i_mec1989)/(1-tau_kap_i1989));
if 0<tau_frad_i1989<1 and 0<tau_frad_i_mec1989<1 then diffMTR_frad_i_IV=log((1-tau_frad_i_mec1989)/(1-tau_frad_i1989));

if 0<tau_arb_h1989<1 and 0<tau_arb_h_mec1989<1 then diffMTR_arb_h_IV=log((1-tau_arb_h_mec1989)/(1-tau_arb_h1989));
if 0<tau_apers_h1989<1 and 0<tau_apers_h_mec1989<1 then diffMTR_apers_h_IV=log((1-tau_apers_h_mec1989)/(1-tau_apers_h1989));
if 0<tau_kap_h1989<1 and 0<tau_kap_h_mec1989<1 then diffMTR_kap_h_IV=log((1-tau_kap_h_mec1989)/(1-tau_kap_h1989));
if 0<tau_frad_h1989<1 and 0<tau_frad_h_mec1989<1 then diffMTR_frad_h_IV=log((1-tau_frad_h_mec1989)/(1-tau_frad_h1989));
if 0<tau_akt_h1989<1 and 0<tau_akt_h_mec1989<1 then diffMTR_akt_h_IV=log((1-tau_akt_h_mec1989)/(1-tau_akt_h1989));

if 0<c_tau_arb_i1989<1 and 0<c_tau_arb_i_mec1989<1 then c_diffMTR_arb_i_IV=log((1-c_tau_arb_i_mec1989)/(1-c_tau_arb_i1989));
if 0<c_tau_apers_i1989<1 and 0<c_tau_apers_i_mec1989<1 then c_diffMTR_apers_i_IV=log((1-c_tau_apers_i_mec1989)/(1-c_tau_apers_i1989));
if 0<c_tau_kap_i1989<1 and 0<c_tau_kap_i_mec1989<1 then c_diffMTR_kap_i_IV=log((1-c_tau_kap_i_mec1989)/(1-c_tau_kap_i1989));
if 0<c_tau_frad_i1989<1 and 0<c_tau_frad_i_mec1989<1 then c_diffMTR_frad_i_IV=log((1-c_tau_frad_i_mec1989)/(1-c_tau_frad_i1989));

if 0<c_tau_arb_h1989<1 and 0<c_tau_arb_h_mec1989<1 then c_diffMTR_arb_h_IV=log((1-c_tau_arb_h_mec1989)/(1-c_tau_arb_h1989));
if 0<c_tau_apers_h1989<1 and 0<c_tau_apers_h_mec1989<1 then c_diffMTR_apers_h_IV=log((1-c_tau_apers_h_mec1989)/(1-c_tau_apers_h1989));
if 0<c_tau_kap_h1989<1 and 0<c_tau_kap_h_mec1989<1 then c_diffMTR_kap_h_IV=log((1-c_tau_kap_h_mec1989)/(1-c_tau_kap_h1989));
if 0<c_tau_frad_h1989<1 and 0<c_tau_frad_h_mec1989<1 then c_diffMTR_frad_h_IV=log((1-c_tau_frad_h_mec1989)/(1-c_tau_frad_h1989));
if 0<c_tau_akt_h1989<1 and 0<c_tau_akt_h_mec1989<1 then c_diffMTR_akt_h_IV=log((1-c_tau_akt_h_mec1989)/(1-c_tau_akt_h1989));

/* Beregner log-forskellen i nettoindkomst */
taxable1989=ear_1989+per_1989+cap_1989-dec_1989;
taxable1992=ear_1992+per_1992+cap_1992-dec_1992;

dummytaxable=0;
if taxable1989>0 and taxable1992>0 then do;
dummytaxable=1;
difftax=log((taxable1992)/(taxable1989));
end;
broad1989=ear_1989+cap_1989;
broad1992=ear_1992+cap_1992;

dummybroad=0;
if broad1989>0 and broad1992>0 then do;
dummybroad=1;
diffbroad=log((broad1992)/(broad1989));
end;
taxable=taxable1989;
broad=broad1989;
logbroad=log(broad);
logtaxable=log(taxable);
netincome1989=ear_1989+per_1989+cap_1989-dec_1989-tax1_1989;
netincome1992=ear_1992+per_1992+cap_1992-dec_1992-tax1_1992;
c_netincome1989=c_ear_1989+c_per_1989+c_cap_1989-c_dec_1989-c_tax1_1989;
c_netincome1992=c_ear_1992+c_per_1992+c_cap_1992-c_dec_1992-c_tax1_1992;

if netincome1989>0 and netincome1992>0 then
diffinc=log((netincome1992)/(netincome1989));

if c_netincome1989>0 and c_netincome1992>0 then
c_diffinc=log((c_netincome1992)/(c_netincome1989));

/* Beregner log-forskellen i virtuel indkomst */
if virtuelindk_i_1989>0 and virtuelindk_i_1992>0 then 
diffvir_i=log(virtuelindk_i_1992/virtuelindk_i_1989);
if virtuelindk_h1_1989>0 and virtuelindk_h1_1992>0 then
diffvir_h1=log(virtuelindk_h1_1992/virtuelindk_h1_1989);
if virtuelindk_h2_1989>0 and virtuelindk_h2_1992>0 then 
diffvir_h2=log(virtuelindk_h2_1992/virtuelindk_h2_1989);

/* Beregner instrument for log-forskellen i virtuel indkomst */
if virtuelindk_i_1989>0 and virtuelindk_i_mec1989>0 then 
diffvir_i_IV=log(virtuelindk_i_mec1989/virtuelindk_i_1989);
if virtuelindk_h1_1989>0 and virtuelindk_h1_mec1989>0 then
diffvir_h1_IV=log(virtuelindk_h1_mec1989/virtuelindk_h1_1989);
if virtuelindk_h2_1989>0 and virtuelindk_h2_mec1989>0 then 
diffvir_h2_IV=log(virtuelindk_h2_mec1989/virtuelindk_h2_1989);

/* Tager log til indkomster */
if dummyear=2 then logarb=log(ear_1989);
if dummyear=3 then logarb=log((ear_1989*(-1)));

if dummyper=2 then logapers=log(per_1989);
if dummyper=3 then logapers=log((per_1989*(-1)));

if dummycap=2 then logkap=log(cap_1989);
if dummycap=3 then logkap=log((cap_1989*(-1)));

if dummydec=2 then logfrad=log(dec_1989);
if dummydec=3 then logfrad=log((dec_1989*(-1)));

/* Omdøber indkomster */
arb=ear_1989;
apers=per_1989;
kap=cap_1989;
frad=dec_1989;
tax=tax1_1989;
tau_arb_i_pre=tau_arb_i1989;
tau_arb_h_pre=tau_arb_h1989;
tau_arb_i_post=tau_arb_i1992;
tau_arb_h_post=tau_arb_h1992;
tau_arb_i_mec=tau_arb_i_mec1989;
tau_arb_h_mec=tau_arb_h_mec1989;

tau_kap_i_pre=tau_kap_i1989;
tau_kap_h_pre=tau_kap_h1989;
tau_kap_i_post=tau_kap_i1992;
tau_kap_h_post=tau_kap_h1992;
tau_kap_i_mec=tau_kap_i_mec1989;
tau_kap_h_mec=tau_kap_h_mec1989;

tau_frad_i_pre=tau_frad_i1989;
tau_frad_h_pre=tau_frad_h1989;
tau_frad_i_post=tau_frad_i1992;
tau_frad_h_post=tau_frad_h1992;
tau_frad_i_mec=tau_frad_i_mec1989;
tau_frad_h_mec=tau_frad_h_mec1989;

dummyper_income=1;
if per_income_1989>0 and per_income_1992>0 then dummyper_income=2;
if per_income_1989<0 and per_income_1992<0 then dummyper_income=3;
if dummyper_income=1 then shiftper_income=1; else shiftper_income=0;
if shiftper_income=0 then diffper_income=log(per_income_1992/per_income_1989);
else diffper_income=.;
per_income=per_income_1989;
if dummyper_income=2 then logper_income=log(per_income_1989);
if dummyper_income=3 then logper_income=log((per_income_1989*(-1)));
run;



data tax2_1990(drop=per_1990 cap_1990 dec_1990 ear_1990 c_per_1990 tax1_1990 c_tax1_1990 
                h_tax1_1990 c_cap_1990 c_dec_1990 c_ear_1990 virtuelindk_i_1990 
                virtuelindk_h1_1990 virtuelindk_h2_1990 tau_arb_i1990
                tau_apers_i1990 tau_kap_i1990 tau_frad_i1990 tau_arb_h1990 
                tau_apers_h1990 tau_kap_h1990 tau_frad_h1990 c_tau_arb_i1990 
                c_tau_apers_i1990 c_tau_kap_i1990 c_tau_frad_i1990 c_tau_arb_h1990
                c_tau_apers_h1990 c_tau_kap_h1990 c_tau_frad_h1990
                virtuelindk_i_mec1990 virtuelindk_h1_mec1990 virtuelindk_h2_mec1990 
			    virtuelindk_i_mec virtuelindk_h1_mec virtuelindk_h2_mec
                tau_arb_i_mec1990 ctype 
                tau_apers_i_mec1990 tau_kap_i_mec1990 tau_frad_i_mec1990 tau_arb_h_mec1990 
                tau_apers_h_mec1990 tau_kap_h_mec1990 tau_frad_h_mec1990 c_tau_arb_i_mec1990 
                c_tau_apers_i_mec1990 c_tau_kap_i_mec1990 c_tau_frad_i_mec1990 c_tau_arb_h_mec1990
                c_tau_apers_h_mec1990 c_tau_kap_h_mec1990 c_tau_frad_h_mec1990
                per_1993 cap_1993 dec_1993 ear_1993 c_per_1993 tax1_1993 c_tax1_1993 
                h_tax1_1993 c_cap_1993 c_dec_1993 c_ear_1993 virtuelindk_i_1993 
                virtuelindk_h1_1993 virtuelindk_h2_1993 tau_arb_i1993
                tau_apers_i1993 tau_kap_i1993 tau_frad_i1993 tau_arb_h1993 
                tau_apers_h1993 tau_kap_h1993 tau_frad_h1993 c_tau_arb_i1993 
                c_tau_apers_i1993 c_tau_kap_i1993 c_tau_frad_i1993 c_tau_arb_h1993
                c_tau_apers_h1993 c_tau_kap_h1993 c_tau_frad_h1993
                arbindk apersindk kapindk lignfrad netincome1990 netincome1993
                c_netincome1990 c_netincome1993
tau_akt_h1990 c_tau_akt_h1990 tau_akt_h_mec1990 c_tau_akt_h_mec1990 tau_akt_h1993 c_tau_akt_h1993);
set tax1990;

/* Tager højde for at indkomster kan skifte fortegn */
dummycap=1;
if cap_1990>0 and cap_1993>0 then dummycap=2;
if cap_1990<0 and cap_1993<0 then dummycap=3;
if dummycap=1 then shiftcap=1; else shiftcap=0;
dummyper=1;
if per_1990>0 and per_1993>0 then dummyper=2;
if per_1990<0 and per_1993<0 then dummyper=3;
if dummyper=1 then shiftper=1; else shiftper=0;
dummyear=1;
if ear_1990>0 and ear_1993>0 then dummyear=2;
if ear_1990<0 and ear_1993<0 then dummyear=3;
if dummyear=1 then shiftear=1; else shiftear=0;
dummydec=1;
if dec_1990>0 and dec_1993>0 then dummydec=2;
if dec_1990<0 and dec_1993<0 then dummydec=3;
if dummydec=1 then shiftdec=1; else shiftdec=0;

/* Beregner log-forskellen i indkomster */
if shiftear=0 then diffarb=log(ear_1993/ear_1990);
else diffarb=.;
if shiftdec=0 then difffrad=log(dec_1993/dec_1990);
else difffrad=.;
if shiftper=0 then diffapers=log(per_1993/per_1990);
else diffapers=.;
if shiftcap=0 then diffkap=log(cap_1993/cap_1990);
else diffkap=.;

/* Beregner log-forskellen i net-of tax rate */
if 0<tau_arb_i1990<1 and 0<tau_arb_i1993<1 then diffMTR_arb_i=log((1-tau_arb_i1993)/(1-tau_arb_i1990));
if 0<tau_apers_i1990<1 and 0<tau_apers_i1993<1 then diffMTR_apers_i=log((1-tau_apers_i1993)/(1-tau_apers_i1990));
if 0<tau_kap_i1990<1 and 0<tau_kap_i1993<1 then diffMTR_kap_i=log((1-tau_kap_i1993)/(1-tau_kap_i1990));
if 0<tau_frad_i1990<1 and 0<tau_frad_i1993<1 then diffMTR_frad_i=log((1-tau_frad_i1993)/(1-tau_frad_i1990));

if 0<tau_arb_h1990<1 and 0<tau_arb_h1993<1 then diffMTR_arb_h=log((1-tau_arb_h1993)/(1-tau_arb_h1990));
if 0<tau_apers_h1990<1 and 0<tau_apers_h1993<1 then diffMTR_apers_h=log((1-tau_apers_h1993)/(1-tau_apers_h1990));
if 0<tau_kap_h1990<1 and 0<tau_kap_h1993<1 then diffMTR_kap_h=log((1-tau_kap_h1993)/(1-tau_kap_h1990));
if 0<tau_frad_h1990<1 and 0<tau_frad_h1993<1 then diffMTR_frad_h=log((1-tau_frad_h1993)/(1-tau_frad_h1990));
if 0<tau_akt_h1990<1 and 0<tau_akt_h1993<1 then diffMTR_akt_h=log((1-tau_akt_h1993)/(1-tau_akt_h1990));

if 0<c_tau_arb_i1990<1 and 0<c_tau_arb_i1993<1 then c_diffMTR_arb_i=log((1-c_tau_arb_i1993)/(1-c_tau_arb_i1990));
if 0<c_tau_apers_i1990<1 and 0<c_tau_apers_i1993<1 then c_diffMTR_apers_i=log((1-c_tau_apers_i1993)/(1-c_tau_apers_i1990));
if 0<c_tau_kap_i1990<1 and 0<c_tau_kap_i1993<1 then c_diffMTR_kap_i=log((1-c_tau_kap_i1993)/(1-c_tau_kap_i1990));
if 0<c_tau_frad_i1990<1 and 0<c_tau_frad_i1993<1 then c_diffMTR_frad_i=log((1-c_tau_frad_i1993)/(1-c_tau_frad_i1990));

if 0<c_tau_arb_h1990<1 and 0<c_tau_arb_h1993<1 then c_diffMTR_arb_h=log((1-c_tau_arb_h1993)/(1-c_tau_arb_h1990));
if 0<c_tau_apers_h1990<1 and 0<c_tau_apers_h1993<1 then c_diffMTR_apers_h=log((1-c_tau_apers_h1993)/(1-c_tau_apers_h1990));
if 0<c_tau_kap_h1990<1 and 0<c_tau_kap_h1993<1 then c_diffMTR_kap_h=log((1-c_tau_kap_h1993)/(1-c_tau_kap_h1990));
if 0<c_tau_frad_h1990<1 and 0<c_tau_frad_h1993<1 then c_diffMTR_frad_h=log((1-c_tau_frad_h1993)/(1-c_tau_frad_h1990));
if 0<c_tau_akt_h1990<1 and 0<c_tau_akt_h1993<1 then c_diffMTR_akt_h=log((1-c_tau_akt_h1993)/(1-c_tau_akt_h1990));

/* Beregner instrument for log-forskellen i net-of-tax rate */
if 0<tau_arb_i1990<1 and 0<tau_arb_i_mec1990<1 then diffMTR_arb_i_IV=log((1-tau_arb_i_mec1990)/(1-tau_arb_i1990));
if 0<tau_apers_i1990<1 and 0<tau_apers_i_mec1990<1 then diffMTR_apers_i_IV=log((1-tau_apers_i_mec1990)/(1-tau_apers_i1990));
if 0<tau_kap_i1990<1 and 0<tau_kap_i_mec1990<1 then diffMTR_kap_i_IV=log((1-tau_kap_i_mec1990)/(1-tau_kap_i1990));
if 0<tau_frad_i1990<1 and 0<tau_frad_i_mec1990<1 then diffMTR_frad_i_IV=log((1-tau_frad_i_mec1990)/(1-tau_frad_i1990));

if 0<tau_arb_h1990<1 and 0<tau_arb_h_mec1990<1 then diffMTR_arb_h_IV=log((1-tau_arb_h_mec1990)/(1-tau_arb_h1990));
if 0<tau_apers_h1990<1 and 0<tau_apers_h_mec1990<1 then diffMTR_apers_h_IV=log((1-tau_apers_h_mec1990)/(1-tau_apers_h1990));
if 0<tau_kap_h1990<1 and 0<tau_kap_h_mec1990<1 then diffMTR_kap_h_IV=log((1-tau_kap_h_mec1990)/(1-tau_kap_h1990));
if 0<tau_frad_h1990<1 and 0<tau_frad_h_mec1990<1 then diffMTR_frad_h_IV=log((1-tau_frad_h_mec1990)/(1-tau_frad_h1990));
if 0<tau_akt_h1990<1 and 0<tau_akt_h_mec1990<1 then diffMTR_akt_h_IV=log((1-tau_akt_h_mec1990)/(1-tau_akt_h1990));

if 0<c_tau_arb_i1990<1 and 0<c_tau_arb_i_mec1990<1 then c_diffMTR_arb_i_IV=log((1-c_tau_arb_i_mec1990)/(1-c_tau_arb_i1990));
if 0<c_tau_apers_i1990<1 and 0<c_tau_apers_i_mec1990<1 then c_diffMTR_apers_i_IV=log((1-c_tau_apers_i_mec1990)/(1-c_tau_apers_i1990));
if 0<c_tau_kap_i1990<1 and 0<c_tau_kap_i_mec1990<1 then c_diffMTR_kap_i_IV=log((1-c_tau_kap_i_mec1990)/(1-c_tau_kap_i1990));
if 0<c_tau_frad_i1990<1 and 0<c_tau_frad_i_mec1990<1 then c_diffMTR_frad_i_IV=log((1-c_tau_frad_i_mec1990)/(1-c_tau_frad_i1990));

if 0<c_tau_arb_h1990<1 and 0<c_tau_arb_h_mec1990<1 then c_diffMTR_arb_h_IV=log((1-c_tau_arb_h_mec1990)/(1-c_tau_arb_h1990));
if 0<c_tau_apers_h1990<1 and 0<c_tau_apers_h_mec1990<1 then c_diffMTR_apers_h_IV=log((1-c_tau_apers_h_mec1990)/(1-c_tau_apers_h1990));
if 0<c_tau_kap_h1990<1 and 0<c_tau_kap_h_mec1990<1 then c_diffMTR_kap_h_IV=log((1-c_tau_kap_h_mec1990)/(1-c_tau_kap_h1990));
if 0<c_tau_frad_h1990<1 and 0<c_tau_frad_h_mec1990<1 then c_diffMTR_frad_h_IV=log((1-c_tau_frad_h_mec1990)/(1-c_tau_frad_h1990));
if 0<c_tau_akt_h1990<1 and 0<c_tau_akt_h_mec1990<1 then c_diffMTR_akt_h_IV=log((1-c_tau_akt_h_mec1990)/(1-c_tau_akt_h1990));

/* Beregner log-forskellen i nettoindkomst */
taxable1990=ear_1990+per_1990+cap_1990-dec_1990;
taxable1993=ear_1993+per_1993+cap_1993-dec_1993;

dummytaxable=0;
if taxable1990>0 and taxable1993>0 then do;
dummytaxable=1;
difftax=log((taxable1993)/(taxable1990));
end;
broad1990=ear_1990+cap_1990;
broad1993=ear_1993+cap_1993;

dummybroad=0;
if broad1990>0 and broad1993>0 then do;
dummybroad=1;
diffbroad=log((broad1993)/(broad1990));
end;
taxable=taxable1990;
broad=broad1990;
logbroad=log(broad);
logtaxable=log(taxable);
netincome1990=ear_1990+per_1990+cap_1990-dec_1990-tax1_1990;
netincome1993=ear_1993+per_1993+cap_1993-dec_1993-tax1_1993;
c_netincome1990=c_ear_1990+c_per_1990+c_cap_1990-c_dec_1990-c_tax1_1990;
c_netincome1993=c_ear_1993+c_per_1993+c_cap_1993-c_dec_1993-c_tax1_1993;

if netincome1990>0 and netincome1993>0 then
diffinc=log((netincome1993)/(netincome1990));

if c_netincome1990>0 and c_netincome1993>0 then
c_diffinc=log((c_netincome1993)/(c_netincome1990));

/* Beregner log-forskellen i virtuel indkomst */
if virtuelindk_i_1990>0 and virtuelindk_i_1993>0 then 
diffvir_i=log(virtuelindk_i_1993/virtuelindk_i_1990);
if virtuelindk_h1_1990>0 and virtuelindk_h1_1993>0 then
diffvir_h1=log(virtuelindk_h1_1993/virtuelindk_h1_1990);
if virtuelindk_h2_1990>0 and virtuelindk_h2_1993>0 then 
diffvir_h2=log(virtuelindk_h2_1993/virtuelindk_h2_1990);

/* Beregner instrument for log-forskellen i virtuel indkomst */
if virtuelindk_i_1990>0 and virtuelindk_i_mec1990>0 then 
diffvir_i_IV=log(virtuelindk_i_mec1990/virtuelindk_i_1990);
if virtuelindk_h1_1990>0 and virtuelindk_h1_mec1990>0 then
diffvir_h1_IV=log(virtuelindk_h1_mec1990/virtuelindk_h1_1990);
if virtuelindk_h2_1990>0 and virtuelindk_h2_mec1990>0 then 
diffvir_h2_IV=log(virtuelindk_h2_mec1990/virtuelindk_h2_1990);

/* Tager log til indkomster */
if dummyear=2 then logarb=log(ear_1990);
if dummyear=3 then logarb=log((ear_1990*(-1)));

if dummyper=2 then logapers=log(per_1990);
if dummyper=3 then logapers=log((per_1990*(-1)));

if dummycap=2 then logkap=log(cap_1990);
if dummycap=3 then logkap=log((cap_1990*(-1)));

if dummydec=2 then logfrad=log(dec_1990);
if dummydec=3 then logfrad=log((dec_1990*(-1)));

/* Omdøber indkomster */
arb=ear_1990;
apers=per_1990;
kap=cap_1990;
frad=dec_1990;
tax=tax1_1990;
tau_arb_i_pre=tau_arb_i1990;
tau_arb_h_pre=tau_arb_h1990;
tau_arb_i_post=tau_arb_i1993;
tau_arb_h_post=tau_arb_h1993;
tau_arb_i_mec=tau_arb_i_mec1990;
tau_arb_h_mec=tau_arb_h_mec1990;

tau_kap_i_pre=tau_kap_i1990;
tau_kap_h_pre=tau_kap_h1990;
tau_kap_i_post=tau_kap_i1993;
tau_kap_h_post=tau_kap_h1993;
tau_kap_i_mec=tau_kap_i_mec1990;
tau_kap_h_mec=tau_kap_h_mec1990;

tau_frad_i_pre=tau_frad_i1990;
tau_frad_h_pre=tau_frad_h1990;
tau_frad_i_post=tau_frad_i1993;
tau_frad_h_post=tau_frad_h1993;
tau_frad_i_mec=tau_frad_i_mec1990;
tau_frad_h_mec=tau_frad_h_mec1990;

dummyper_income=1;
if per_income_1990>0 and per_income_1993>0 then dummyper_income=2;
if per_income_1990<0 and per_income_1993<0 then dummyper_income=3;
if dummyper_income=1 then shiftper_income=1; else shiftper_income=0;
if shiftper_income=0 then diffper_income=log(per_income_1993/per_income_1990);
else diffper_income=.;
per_income=per_income_1990;
if dummyper_income=2 then logper_income=log(per_income_1990);
if dummyper_income=3 then logper_income=log((per_income_1990*(-1)));
run;


data tax2_1991(drop=per_1991 cap_1991 dec_1991 ear_1991 c_per_1991 tax1_1991 c_tax1_1991 
                h_tax1_1991 c_cap_1991 c_dec_1991 c_ear_1991 virtuelindk_i_1991 
                virtuelindk_h1_1991 virtuelindk_h2_1991 tau_arb_i1991
                tau_apers_i1991 tau_kap_i1991 tau_frad_i1991 tau_arb_h1991 
                tau_apers_h1991 tau_kap_h1991 tau_frad_h1991 c_tau_arb_i1991 
                c_tau_apers_i1991 c_tau_kap_i1991 c_tau_frad_i1991 c_tau_arb_h1991
                c_tau_apers_h1991 c_tau_kap_h1991 c_tau_frad_h1991
                virtuelindk_i_mec1991 virtuelindk_h1_mec1991 virtuelindk_h2_mec1991 
			    virtuelindk_i_mec virtuelindk_h1_mec virtuelindk_h2_mec
                tau_arb_i_mec1991 ctype 
                tau_apers_i_mec1991 tau_kap_i_mec1991 tau_frad_i_mec1991 tau_arb_h_mec1991 
                tau_apers_h_mec1991 tau_kap_h_mec1991 tau_frad_h_mec1991 c_tau_arb_i_mec1991 
                c_tau_apers_i_mec1991 c_tau_kap_i_mec1991 c_tau_frad_i_mec1991 c_tau_arb_h_mec1991
                c_tau_apers_h_mec1991 c_tau_kap_h_mec1991 c_tau_frad_h_mec1991
                per_1994 cap_1994 dec_1994 ear_1994 c_per_1994 tax1_1994 c_tax1_1994 
                h_tax1_1994 c_cap_1994 c_dec_1994 c_ear_1994 virtuelindk_i_1994 
                virtuelindk_h1_1994 virtuelindk_h2_1994 tau_arb_i1994
                tau_apers_i1994 tau_kap_i1994 tau_frad_i1994 tau_arb_h1994 
                tau_apers_h1994 tau_kap_h1994 tau_frad_h1994 c_tau_arb_i1994 
                c_tau_apers_i1994 c_tau_kap_i1994 c_tau_frad_i1994 c_tau_arb_h1994
                c_tau_apers_h1994 c_tau_kap_h1994 c_tau_frad_h1994
                arbindk apersindk kapindk lignfrad netincome1991 netincome1994
                c_netincome1991 c_netincome1994
tau_akt_h1991 c_tau_akt_h1991 tau_akt_h_mec1991 c_tau_akt_h_mec1991 tau_akt_h1994 c_tau_akt_h1994);
set tax1991;

/* Tager højde for at indkomster kan skifte fortegn */
dummycap=1;
if cap_1991>0 and cap_1994>0 then dummycap=2;
if cap_1991<0 and cap_1994<0 then dummycap=3;
if dummycap=1 then shiftcap=1; else shiftcap=0;
dummyper=1;
if per_1991>0 and per_1994>0 then dummyper=2;
if per_1991<0 and per_1994<0 then dummyper=3;
if dummyper=1 then shiftper=1; else shiftper=0;
dummyear=1;
if ear_1991>0 and ear_1994>0 then dummyear=2;
if ear_1991<0 and ear_1994<0 then dummyear=3;
if dummyear=1 then shiftear=1; else shiftear=0;
dummydec=1;
if dec_1991>0 and dec_1994>0 then dummydec=2;
if dec_1991<0 and dec_1994<0 then dummydec=3;
if dummydec=1 then shiftdec=1; else shiftdec=0;

/* Beregner log-forskellen i indkomster */
if shiftear=0 then diffarb=log(ear_1994/ear_1991);
else diffarb=.;
if shiftdec=0 then difffrad=log(dec_1994/dec_1991);
else difffrad=.;
if shiftper=0 then diffapers=log(per_1994/per_1991);
else diffapers=.;
if shiftcap=0 then diffkap=log(cap_1994/cap_1991);
else diffkap=.;

/* Beregner log-forskellen i net-of tax rate */
if 0<tau_arb_i1991<1 and 0<tau_arb_i1994<1 then diffMTR_arb_i=log((1-tau_arb_i1994)/(1-tau_arb_i1991));
if 0<tau_apers_i1991<1 and 0<tau_apers_i1994<1 then diffMTR_apers_i=log((1-tau_apers_i1994)/(1-tau_apers_i1991));
if 0<tau_kap_i1991<1 and 0<tau_kap_i1994<1 then diffMTR_kap_i=log((1-tau_kap_i1994)/(1-tau_kap_i1991));
if 0<tau_frad_i1991<1 and 0<tau_frad_i1994<1 then diffMTR_frad_i=log((1-tau_frad_i1994)/(1-tau_frad_i1991));

if 0<tau_arb_h1991<1 and 0<tau_arb_h1994<1 then diffMTR_arb_h=log((1-tau_arb_h1994)/(1-tau_arb_h1991));
if 0<tau_apers_h1991<1 and 0<tau_apers_h1994<1 then diffMTR_apers_h=log((1-tau_apers_h1994)/(1-tau_apers_h1991));
if 0<tau_kap_h1991<1 and 0<tau_kap_h1994<1 then diffMTR_kap_h=log((1-tau_kap_h1994)/(1-tau_kap_h1991));
if 0<tau_frad_h1991<1 and 0<tau_frad_h1994<1 then diffMTR_frad_h=log((1-tau_frad_h1994)/(1-tau_frad_h1991));
if 0<tau_akt_h1991<1 and 0<tau_akt_h1994<1 then diffMTR_akt_h=log((1-tau_akt_h1994)/(1-tau_akt_h1991));

if 0<c_tau_arb_i1991<1 and 0<c_tau_arb_i1994<1 then c_diffMTR_arb_i=log((1-c_tau_arb_i1994)/(1-c_tau_arb_i1991));
if 0<c_tau_apers_i1991<1 and 0<c_tau_apers_i1994<1 then c_diffMTR_apers_i=log((1-c_tau_apers_i1994)/(1-c_tau_apers_i1991));
if 0<c_tau_kap_i1991<1 and 0<c_tau_kap_i1994<1 then c_diffMTR_kap_i=log((1-c_tau_kap_i1994)/(1-c_tau_kap_i1991));
if 0<c_tau_frad_i1991<1 and 0<c_tau_frad_i1994<1 then c_diffMTR_frad_i=log((1-c_tau_frad_i1994)/(1-c_tau_frad_i1991));

if 0<c_tau_arb_h1991<1 and 0<c_tau_arb_h1994<1 then c_diffMTR_arb_h=log((1-c_tau_arb_h1994)/(1-c_tau_arb_h1991));
if 0<c_tau_apers_h1991<1 and 0<c_tau_apers_h1994<1 then c_diffMTR_apers_h=log((1-c_tau_apers_h1994)/(1-c_tau_apers_h1991));
if 0<c_tau_kap_h1991<1 and 0<c_tau_kap_h1994<1 then c_diffMTR_kap_h=log((1-c_tau_kap_h1994)/(1-c_tau_kap_h1991));
if 0<c_tau_frad_h1991<1 and 0<c_tau_frad_h1994<1 then c_diffMTR_frad_h=log((1-c_tau_frad_h1994)/(1-c_tau_frad_h1991));
if 0<c_tau_akt_h1991<1 and 0<c_tau_akt_h1994<1 then c_diffMTR_akt_h=log((1-c_tau_akt_h1994)/(1-c_tau_akt_h1991));

/* Beregner instrument for log-forskellen i net-of-tax rate */
if 0<tau_arb_i1991<1 and 0<tau_arb_i_mec1991<1 then diffMTR_arb_i_IV=log((1-tau_arb_i_mec1991)/(1-tau_arb_i1991));
if 0<tau_apers_i1991<1 and 0<tau_apers_i_mec1991<1 then diffMTR_apers_i_IV=log((1-tau_apers_i_mec1991)/(1-tau_apers_i1991));
if 0<tau_kap_i1991<1 and 0<tau_kap_i_mec1991<1 then diffMTR_kap_i_IV=log((1-tau_kap_i_mec1991)/(1-tau_kap_i1991));
if 0<tau_frad_i1991<1 and 0<tau_frad_i_mec1991<1 then diffMTR_frad_i_IV=log((1-tau_frad_i_mec1991)/(1-tau_frad_i1991));

if 0<tau_arb_h1991<1 and 0<tau_arb_h_mec1991<1 then diffMTR_arb_h_IV=log((1-tau_arb_h_mec1991)/(1-tau_arb_h1991));
if 0<tau_apers_h1991<1 and 0<tau_apers_h_mec1991<1 then diffMTR_apers_h_IV=log((1-tau_apers_h_mec1991)/(1-tau_apers_h1991));
if 0<tau_kap_h1991<1 and 0<tau_kap_h_mec1991<1 then diffMTR_kap_h_IV=log((1-tau_kap_h_mec1991)/(1-tau_kap_h1991));
if 0<tau_frad_h1991<1 and 0<tau_frad_h_mec1991<1 then diffMTR_frad_h_IV=log((1-tau_frad_h_mec1991)/(1-tau_frad_h1991));
if 0<tau_akt_h1991<1 and 0<tau_akt_h_mec1991<1 then diffMTR_akt_h_IV=log((1-tau_akt_h_mec1991)/(1-tau_akt_h1991));

if 0<c_tau_arb_i1991<1 and 0<c_tau_arb_i_mec1991<1 then c_diffMTR_arb_i_IV=log((1-c_tau_arb_i_mec1991)/(1-c_tau_arb_i1991));
if 0<c_tau_apers_i1991<1 and 0<c_tau_apers_i_mec1991<1 then c_diffMTR_apers_i_IV=log((1-c_tau_apers_i_mec1991)/(1-c_tau_apers_i1991));
if 0<c_tau_kap_i1991<1 and 0<c_tau_kap_i_mec1991<1 then c_diffMTR_kap_i_IV=log((1-c_tau_kap_i_mec1991)/(1-c_tau_kap_i1991));
if 0<c_tau_frad_i1991<1 and 0<c_tau_frad_i_mec1991<1 then c_diffMTR_frad_i_IV=log((1-c_tau_frad_i_mec1991)/(1-c_tau_frad_i1991));

if 0<c_tau_arb_h1991<1 and 0<c_tau_arb_h_mec1991<1 then c_diffMTR_arb_h_IV=log((1-c_tau_arb_h_mec1991)/(1-c_tau_arb_h1991));
if 0<c_tau_apers_h1991<1 and 0<c_tau_apers_h_mec1991<1 then c_diffMTR_apers_h_IV=log((1-c_tau_apers_h_mec1991)/(1-c_tau_apers_h1991));
if 0<c_tau_kap_h1991<1 and 0<c_tau_kap_h_mec1991<1 then c_diffMTR_kap_h_IV=log((1-c_tau_kap_h_mec1991)/(1-c_tau_kap_h1991));
if 0<c_tau_frad_h1991<1 and 0<c_tau_frad_h_mec1991<1 then c_diffMTR_frad_h_IV=log((1-c_tau_frad_h_mec1991)/(1-c_tau_frad_h1991));
if 0<c_tau_akt_h1991<1 and 0<c_tau_akt_h_mec1991<1 then c_diffMTR_akt_h_IV=log((1-c_tau_akt_h_mec1991)/(1-c_tau_akt_h1991));

/* Beregner log-forskellen i nettoindkomst */
taxable1991=ear_1991+per_1991+cap_1991-dec_1991;
taxable1994=ear_1994+per_1994+cap_1994-dec_1994;

dummytaxable=0;
if taxable1991>0 and taxable1994>0 then do;
dummytaxable=1;
difftax=log((taxable1994)/(taxable1991));
end;
broad1991=ear_1991+cap_1991;
broad1994=ear_1994+cap_1994;

dummybroad=0;
if broad1991>0 and broad1994>0 then do;
dummybroad=1;
diffbroad=log((broad1994)/(broad1991));
end;
taxable=taxable1991;
broad=broad1991;
logbroad=log(broad);
logtaxable=log(taxable);
netincome1991=ear_1991+per_1991+cap_1991-dec_1991-tax1_1991;
netincome1994=ear_1994+per_1994+cap_1994-dec_1994-tax1_1994;
c_netincome1991=c_ear_1991+c_per_1991+c_cap_1991-c_dec_1991-c_tax1_1991;
c_netincome1994=c_ear_1994+c_per_1994+c_cap_1994-c_dec_1994-c_tax1_1994;

if netincome1991>0 and netincome1994>0 then
diffinc=log((netincome1994)/(netincome1991));

if c_netincome1991>0 and c_netincome1994>0 then
c_diffinc=log((c_netincome1994)/(c_netincome1991));

/* Beregner log-forskellen i virtuel indkomst */
if virtuelindk_i_1991>0 and virtuelindk_i_1994>0 then 
diffvir_i=log(virtuelindk_i_1994/virtuelindk_i_1991);
if virtuelindk_h1_1991>0 and virtuelindk_h1_1994>0 then
diffvir_h1=log(virtuelindk_h1_1994/virtuelindk_h1_1991);
if virtuelindk_h2_1991>0 and virtuelindk_h2_1994>0 then 
diffvir_h2=log(virtuelindk_h2_1994/virtuelindk_h2_1991);

/* Beregner instrument for log-forskellen i virtuel indkomst */
if virtuelindk_i_1991>0 and virtuelindk_i_mec1991>0 then 
diffvir_i_IV=log(virtuelindk_i_mec1991/virtuelindk_i_1991);
if virtuelindk_h1_1991>0 and virtuelindk_h1_mec1991>0 then
diffvir_h1_IV=log(virtuelindk_h1_mec1991/virtuelindk_h1_1991);
if virtuelindk_h2_1991>0 and virtuelindk_h2_mec1991>0 then 
diffvir_h2_IV=log(virtuelindk_h2_mec1991/virtuelindk_h2_1991);

/* Tager log til indkomster */
if dummyear=2 then logarb=log(ear_1991);
if dummyear=3 then logarb=log((ear_1991*(-1)));

if dummyper=2 then logapers=log(per_1991);
if dummyper=3 then logapers=log((per_1991*(-1)));

if dummycap=2 then logkap=log(cap_1991);
if dummycap=3 then logkap=log((cap_1991*(-1)));

if dummydec=2 then logfrad=log(dec_1991);
if dummydec=3 then logfrad=log((dec_1991*(-1)));

/* Omdøber indkomster */
arb=ear_1991;
apers=per_1991;
kap=cap_1991;
frad=dec_1991;
tax=tax1_1991;
tau_arb_i_pre=tau_arb_i1991;
tau_arb_h_pre=tau_arb_h1991;
tau_arb_i_post=tau_arb_i1994;
tau_arb_h_post=tau_arb_h1994;
tau_arb_i_mec=tau_arb_i_mec1991;
tau_arb_h_mec=tau_arb_h_mec1991;

tau_kap_i_pre=tau_kap_i1991;
tau_kap_h_pre=tau_kap_h1991;
tau_kap_i_post=tau_kap_i1994;
tau_kap_h_post=tau_kap_h1994;
tau_kap_i_mec=tau_kap_i_mec1991;
tau_kap_h_mec=tau_kap_h_mec1991;

tau_frad_i_pre=tau_frad_i1991;
tau_frad_h_pre=tau_frad_h1991;
tau_frad_i_post=tau_frad_i1994;
tau_frad_h_post=tau_frad_h1994;
tau_frad_i_mec=tau_frad_i_mec1991;
tau_frad_h_mec=tau_frad_h_mec1991;

dummyper_income=1;

if per_income_1991>0 and per_income_1994>0 then dummyper_income=2;
if per_income_1991<0 and per_income_1994<0 then dummyper_income=3;
if dummyper_income=1 then shiftper_income=1; else shiftper_income=0;
if shiftper_income=0 then diffper_income=log(per_income_1994/per_income_1991);
else diffper_income=.;
per_income=per_income_1991;
if dummyper_income=2 then logper_income=log(per_income_1991);
if dummyper_income=3 then logper_income=log((per_income_1991*(-1)));

run;




data tax2_1992(drop=per_1992 cap_1992 dec_1992 ear_1992 c_per_1992 tax1_1992 c_tax1_1992 
                h_tax1_1992 c_cap_1992 c_dec_1992 c_ear_1992 virtuelindk_i_1992 
                virtuelindk_h1_1992 virtuelindk_h2_1992 tau_arb_i1992
                tau_apers_i1992 tau_kap_i1992 tau_frad_i1992 tau_arb_h1992 
                tau_apers_h1992 tau_kap_h1992 tau_frad_h1992 c_tau_arb_i1992 
                c_tau_apers_i1992 c_tau_kap_i1992 c_tau_frad_i1992 c_tau_arb_h1992
                c_tau_apers_h1992 c_tau_kap_h1992 c_tau_frad_h1992
                virtuelindk_i_mec1992 virtuelindk_h1_mec1992 virtuelindk_h2_mec1992 
			    virtuelindk_i_mec virtuelindk_h1_mec virtuelindk_h2_mec
                tau_arb_i_mec1992 ctype 
                tau_apers_i_mec1992 tau_kap_i_mec1992 tau_frad_i_mec1992 tau_arb_h_mec1992 
                tau_apers_h_mec1992 tau_kap_h_mec1992 tau_frad_h_mec1992 c_tau_arb_i_mec1992 
                c_tau_apers_i_mec1992 c_tau_kap_i_mec1992 c_tau_frad_i_mec1992 c_tau_arb_h_mec1992
                c_tau_apers_h_mec1992 c_tau_kap_h_mec1992 c_tau_frad_h_mec1992
                per_1995 cap_1995 dec_1995 ear_1995 c_per_1995 tax1_1995 c_tax1_1995 
                h_tax1_1995 c_cap_1995 c_dec_1995 c_ear_1995 virtuelindk_i_1995 
                virtuelindk_h1_1995 virtuelindk_h2_1995 tau_arb_i1995
                tau_apers_i1995 tau_kap_i1995 tau_frad_i1995 tau_arb_h1995 
                tau_apers_h1995 tau_kap_h1995 tau_frad_h1995 c_tau_arb_i1995 
                c_tau_apers_i1995 c_tau_kap_i1995 c_tau_frad_i1995 c_tau_arb_h1995
                c_tau_apers_h1995 c_tau_kap_h1995 c_tau_frad_h1995
                arbindk apersindk kapindk lignfrad netincome1992 netincome1995
                c_netincome1992 c_netincome1995
tau_akt_h1992 c_tau_akt_h1992 tau_akt_h_mec1992 c_tau_akt_h_mec1992 tau_akt_h1995 c_tau_akt_h1995);
set tax1992;

/* Tager højde for at indkomster kan skifte fortegn */
dummycap=1;
if cap_1992>0 and cap_1995>0 then dummycap=2;
if cap_1992<0 and cap_1995<0 then dummycap=3;
if dummycap=1 then shiftcap=1; else shiftcap=0;
dummyper=1;
if per_1992>0 and per_1995>0 then dummyper=2;
if per_1992<0 and per_1995<0 then dummyper=3;
if dummyper=1 then shiftper=1; else shiftper=0;
dummyear=1;
if ear_1992>0 and ear_1995>0 then dummyear=2;
if ear_1992<0 and ear_1995<0 then dummyear=3;
if dummyear=1 then shiftear=1; else shiftear=0;
dummydec=1;
if dec_1992>0 and dec_1995>0 then dummydec=2;
if dec_1992<0 and dec_1995<0 then dummydec=3;
if dummydec=1 then shiftdec=1; else shiftdec=0;

/* Beregner log-forskellen i indkomster */
if shiftear=0 then diffarb=log(ear_1995/ear_1992);
else diffarb=.;
if shiftdec=0 then difffrad=log(dec_1995/dec_1992);
else difffrad=.;
if shiftper=0 then diffapers=log(per_1995/per_1992);
else diffapers=.;
if shiftcap=0 then diffkap=log(cap_1995/cap_1992);
else diffkap=.;

/* Beregner log-forskellen i net-of tax rate */
if 0<tau_arb_i1992<1 and 0<tau_arb_i1995<1 then diffMTR_arb_i=log((1-tau_arb_i1995)/(1-tau_arb_i1992));
if 0<tau_apers_i1992<1 and 0<tau_apers_i1995<1 then diffMTR_apers_i=log((1-tau_apers_i1995)/(1-tau_apers_i1992));
if 0<tau_kap_i1992<1 and 0<tau_kap_i1995<1 then diffMTR_kap_i=log((1-tau_kap_i1995)/(1-tau_kap_i1992));
if 0<tau_frad_i1992<1 and 0<tau_frad_i1995<1 then diffMTR_frad_i=log((1-tau_frad_i1995)/(1-tau_frad_i1992));

if 0<tau_arb_h1992<1 and 0<tau_arb_h1995<1 then diffMTR_arb_h=log((1-tau_arb_h1995)/(1-tau_arb_h1992));
if 0<tau_apers_h1992<1 and 0<tau_apers_h1995<1 then diffMTR_apers_h=log((1-tau_apers_h1995)/(1-tau_apers_h1992));
if 0<tau_kap_h1992<1 and 0<tau_kap_h1995<1 then diffMTR_kap_h=log((1-tau_kap_h1995)/(1-tau_kap_h1992));
if 0<tau_frad_h1992<1 and 0<tau_frad_h1995<1 then diffMTR_frad_h=log((1-tau_frad_h1995)/(1-tau_frad_h1992));
if 0<tau_akt_h1992<1 and 0<tau_akt_h1995<1 then diffMTR_akt_h=log((1-tau_akt_h1995)/(1-tau_akt_h1992));

if 0<c_tau_arb_i1992<1 and 0<c_tau_arb_i1995<1 then c_diffMTR_arb_i=log((1-c_tau_arb_i1995)/(1-c_tau_arb_i1992));
if 0<c_tau_apers_i1992<1 and 0<c_tau_apers_i1995<1 then c_diffMTR_apers_i=log((1-c_tau_apers_i1995)/(1-c_tau_apers_i1992));
if 0<c_tau_kap_i1992<1 and 0<c_tau_kap_i1995<1 then c_diffMTR_kap_i=log((1-c_tau_kap_i1995)/(1-c_tau_kap_i1992));
if 0<c_tau_frad_i1992<1 and 0<c_tau_frad_i1995<1 then c_diffMTR_frad_i=log((1-c_tau_frad_i1995)/(1-c_tau_frad_i1992));

if 0<c_tau_arb_h1992<1 and 0<c_tau_arb_h1995<1 then c_diffMTR_arb_h=log((1-c_tau_arb_h1995)/(1-c_tau_arb_h1992));
if 0<c_tau_apers_h1992<1 and 0<c_tau_apers_h1995<1 then c_diffMTR_apers_h=log((1-c_tau_apers_h1995)/(1-c_tau_apers_h1992));
if 0<c_tau_kap_h1992<1 and 0<c_tau_kap_h1995<1 then c_diffMTR_kap_h=log((1-c_tau_kap_h1995)/(1-c_tau_kap_h1992));
if 0<c_tau_frad_h1992<1 and 0<c_tau_frad_h1995<1 then c_diffMTR_frad_h=log((1-c_tau_frad_h1995)/(1-c_tau_frad_h1992));
if 0<c_tau_akt_h1992<1 and 0<c_tau_akt_h1995<1 then c_diffMTR_akt_h=log((1-c_tau_akt_h1995)/(1-c_tau_akt_h1992));

/* Beregner instrument for log-forskellen i net-of-tax rate */
if 0<tau_arb_i1992<1 and 0<tau_arb_i_mec1992<1 then diffMTR_arb_i_IV=log((1-tau_arb_i_mec1992)/(1-tau_arb_i1992));
if 0<tau_apers_i1992<1 and 0<tau_apers_i_mec1992<1 then diffMTR_apers_i_IV=log((1-tau_apers_i_mec1992)/(1-tau_apers_i1992));
if 0<tau_kap_i1992<1 and 0<tau_kap_i_mec1992<1 then diffMTR_kap_i_IV=log((1-tau_kap_i_mec1992)/(1-tau_kap_i1992));
if 0<tau_frad_i1992<1 and 0<tau_frad_i_mec1992<1 then diffMTR_frad_i_IV=log((1-tau_frad_i_mec1992)/(1-tau_frad_i1992));

if 0<tau_arb_h1992<1 and 0<tau_arb_h_mec1992<1 then diffMTR_arb_h_IV=log((1-tau_arb_h_mec1992)/(1-tau_arb_h1992));
if 0<tau_apers_h1992<1 and 0<tau_apers_h_mec1992<1 then diffMTR_apers_h_IV=log((1-tau_apers_h_mec1992)/(1-tau_apers_h1992));
if 0<tau_kap_h1992<1 and 0<tau_kap_h_mec1992<1 then diffMTR_kap_h_IV=log((1-tau_kap_h_mec1992)/(1-tau_kap_h1992));
if 0<tau_frad_h1992<1 and 0<tau_frad_h_mec1992<1 then diffMTR_frad_h_IV=log((1-tau_frad_h_mec1992)/(1-tau_frad_h1992));
if 0<tau_akt_h1992<1 and 0<tau_akt_h_mec1992<1 then diffMTR_akt_h_IV=log((1-tau_akt_h_mec1992)/(1-tau_akt_h1992));

if 0<c_tau_arb_i1992<1 and 0<c_tau_arb_i_mec1992<1 then c_diffMTR_arb_i_IV=log((1-c_tau_arb_i_mec1992)/(1-c_tau_arb_i1992));
if 0<c_tau_apers_i1992<1 and 0<c_tau_apers_i_mec1992<1 then c_diffMTR_apers_i_IV=log((1-c_tau_apers_i_mec1992)/(1-c_tau_apers_i1992));
if 0<c_tau_kap_i1992<1 and 0<c_tau_kap_i_mec1992<1 then c_diffMTR_kap_i_IV=log((1-c_tau_kap_i_mec1992)/(1-c_tau_kap_i1992));
if 0<c_tau_frad_i1992<1 and 0<c_tau_frad_i_mec1992<1 then c_diffMTR_frad_i_IV=log((1-c_tau_frad_i_mec1992)/(1-c_tau_frad_i1992));

if 0<c_tau_arb_h1992<1 and 0<c_tau_arb_h_mec1992<1 then c_diffMTR_arb_h_IV=log((1-c_tau_arb_h_mec1992)/(1-c_tau_arb_h1992));
if 0<c_tau_apers_h1992<1 and 0<c_tau_apers_h_mec1992<1 then c_diffMTR_apers_h_IV=log((1-c_tau_apers_h_mec1992)/(1-c_tau_apers_h1992));
if 0<c_tau_kap_h1992<1 and 0<c_tau_kap_h_mec1992<1 then c_diffMTR_kap_h_IV=log((1-c_tau_kap_h_mec1992)/(1-c_tau_kap_h1992));
if 0<c_tau_frad_h1992<1 and 0<c_tau_frad_h_mec1992<1 then c_diffMTR_frad_h_IV=log((1-c_tau_frad_h_mec1992)/(1-c_tau_frad_h1992));
if 0<c_tau_akt_h1992<1 and 0<c_tau_akt_h_mec1992<1 then c_diffMTR_akt_h_IV=log((1-c_tau_akt_h_mec1992)/(1-c_tau_akt_h1992));

/* Beregner log-forskellen i nettoindkomst */
taxable1992=ear_1992+per_1992+cap_1992-dec_1992;
taxable1995=ear_1995+per_1995+cap_1995-dec_1995;

dummytaxable=0;
if taxable1992>0 and taxable1995>0 then do;
dummytaxable=1;
difftax=log((taxable1995)/(taxable1992));
end;
broad1992=ear_1992+cap_1992;
broad1995=ear_1995+cap_1995;

dummybroad=0;
if broad1992>0 and broad1995>0 then do;
dummybroad=1;
diffbroad=log((broad1995)/(broad1992));
end;
taxable=taxable1992;
broad=broad1992;
logbroad=log(broad);
logtaxable=log(taxable);
netincome1992=ear_1992+per_1992+cap_1992-dec_1992-tax1_1992;
netincome1995=ear_1995+per_1995+cap_1995-dec_1995-tax1_1995;
c_netincome1992=c_ear_1992+c_per_1992+c_cap_1992-c_dec_1992-c_tax1_1992;
c_netincome1995=c_ear_1995+c_per_1995+c_cap_1995-c_dec_1995-c_tax1_1995;

if netincome1992>0 and netincome1995>0 then
diffinc=log((netincome1995)/(netincome1992));

if c_netincome1992>0 and c_netincome1995>0 then
c_diffinc=log((c_netincome1995)/(c_netincome1992));

/* Beregner log-forskellen i virtuel indkomst */
if virtuelindk_i_1992>0 and virtuelindk_i_1995>0 then 
diffvir_i=log(virtuelindk_i_1995/virtuelindk_i_1992);
if virtuelindk_h1_1992>0 and virtuelindk_h1_1995>0 then
diffvir_h1=log(virtuelindk_h1_1995/virtuelindk_h1_1992);
if virtuelindk_h2_1992>0 and virtuelindk_h2_1995>0 then 
diffvir_h2=log(virtuelindk_h2_1995/virtuelindk_h2_1992);

/* Beregner instrument for log-forskellen i virtuel indkomst */
if virtuelindk_i_1992>0 and virtuelindk_i_mec1992>0 then 
diffvir_i_IV=log(virtuelindk_i_mec1992/virtuelindk_i_1992);
if virtuelindk_h1_1992>0 and virtuelindk_h1_mec1992>0 then
diffvir_h1_IV=log(virtuelindk_h1_mec1992/virtuelindk_h1_1992);
if virtuelindk_h2_1992>0 and virtuelindk_h2_mec1992>0 then 
diffvir_h2_IV=log(virtuelindk_h2_mec1992/virtuelindk_h2_1992);

/* Tager log til indkomster */
if dummyear=2 then logarb=log(ear_1992);
if dummyear=3 then logarb=log((ear_1992*(-1)));

if dummyper=2 then logapers=log(per_1992);
if dummyper=3 then logapers=log((per_1992*(-1)));

if dummycap=2 then logkap=log(cap_1992);
if dummycap=3 then logkap=log((cap_1992*(-1)));

if dummydec=2 then logfrad=log(dec_1992);
if dummydec=3 then logfrad=log((dec_1992*(-1)));

/* Omdøber indkomster */
arb=ear_1992;
apers=per_1992;
kap=cap_1992;
frad=dec_1992;
tax=tax1_1992;
tau_arb_i_pre=tau_arb_i1992;
tau_arb_h_pre=tau_arb_h1992;
tau_arb_i_post=tau_arb_i1995;
tau_arb_h_post=tau_arb_h1995;
tau_arb_i_mec=tau_arb_i_mec1992;
tau_arb_h_mec=tau_arb_h_mec1992;

tau_kap_i_pre=tau_kap_i1992;
tau_kap_h_pre=tau_kap_h1992;
tau_kap_i_post=tau_kap_i1995;
tau_kap_h_post=tau_kap_h1995;
tau_kap_i_mec=tau_kap_i_mec1992;
tau_kap_h_mec=tau_kap_h_mec1992;

tau_frad_i_pre=tau_frad_i1992;
tau_frad_h_pre=tau_frad_h1992;
tau_frad_i_post=tau_frad_i1995;
tau_frad_h_post=tau_frad_h1995;
tau_frad_i_mec=tau_frad_i_mec1992;
tau_frad_h_mec=tau_frad_h_mec1992;
dummyper_income=1;
if per_income_1992>0 and per_income_1995>0 then dummyper_income=2;
if per_income_1992<0 and per_income_1995<0 then dummyper_income=3;
if dummyper_income=1 then shiftper_income=1; else shiftper_income=0;
if shiftper_income=0 then diffper_income=log(per_income_1995/per_income_1992);
else diffper_income=.;
per_income=per_income_1992;
if dummyper_income=2 then logper_income=log(per_income_1992);
if dummyper_income=3 then logper_income=log((per_income_1992*(-1)));

run;




data tax2_1993(drop=per_1993 cap_1993 dec_1993 ear_1993 c_per_1993 tax1_1993 c_tax1_1993 
                h_tax1_1993 c_cap_1993 c_dec_1993 c_ear_1993 virtuelindk_i_1993 
                virtuelindk_h1_1993 virtuelindk_h2_1993 tau_arb_i1993
                tau_apers_i1993 tau_kap_i1993 tau_frad_i1993 tau_arb_h1993 
                tau_apers_h1993 tau_kap_h1993 tau_frad_h1993 c_tau_arb_i1993 
                c_tau_apers_i1993 c_tau_kap_i1993 c_tau_frad_i1993 c_tau_arb_h1993
                c_tau_apers_h1993 c_tau_kap_h1993 c_tau_frad_h1993
                virtuelindk_i_mec1993 virtuelindk_h1_mec1993 virtuelindk_h2_mec1993 
			    virtuelindk_i_mec virtuelindk_h1_mec virtuelindk_h2_mec
                tau_arb_i_mec1993 ctype 
                tau_apers_i_mec1993 tau_kap_i_mec1993 tau_frad_i_mec1993 tau_arb_h_mec1993 
                tau_apers_h_mec1993 tau_kap_h_mec1993 tau_frad_h_mec1993 c_tau_arb_i_mec1993 
                c_tau_apers_i_mec1993 c_tau_kap_i_mec1993 c_tau_frad_i_mec1993 c_tau_arb_h_mec1993
                c_tau_apers_h_mec1993 c_tau_kap_h_mec1993 c_tau_frad_h_mec1993
                per_1996 cap_1996 dec_1996 ear_1996 c_per_1996 tax1_1996 c_tax1_1996 
                h_tax1_1996 c_cap_1996 c_dec_1996 c_ear_1996 virtuelindk_i_1996 
                virtuelindk_h1_1996 virtuelindk_h2_1996 tau_arb_i1996
                tau_apers_i1996 tau_kap_i1996 tau_frad_i1996 tau_arb_h1996 
                tau_apers_h1996 tau_kap_h1996 tau_frad_h1996 c_tau_arb_i1996 
                c_tau_apers_i1996 c_tau_kap_i1996 c_tau_frad_i1996 c_tau_arb_h1996
                c_tau_apers_h1996 c_tau_kap_h1996 c_tau_frad_h1996
                arbindk apersindk kapindk lignfrad netincome1993 netincome1996
                c_netincome1993 c_netincome1996
tau_akt_h1993 c_tau_akt_h1993 tau_akt_h_mec1993 c_tau_akt_h_mec1993 tau_akt_h1996 c_tau_akt_h1996);
set tax1993;

/* Tager højde for at indkomster kan skifte fortegn */
dummycap=1;
if cap_1993>0 and cap_1996>0 then dummycap=2;
if cap_1993<0 and cap_1996<0 then dummycap=3;
if dummycap=1 then shiftcap=1; else shiftcap=0;
dummyper=1;
if per_1993>0 and per_1996>0 then dummyper=2;
if per_1993<0 and per_1996<0 then dummyper=3;
if dummyper=1 then shiftper=1; else shiftper=0;
dummyear=1;
if ear_1993>0 and ear_1996>0 then dummyear=2;
if ear_1993<0 and ear_1996<0 then dummyear=3;
if dummyear=1 then shiftear=1; else shiftear=0;
dummydec=1;
if dec_1993>0 and dec_1996>0 then dummydec=2;
if dec_1993<0 and dec_1996<0 then dummydec=3;
if dummydec=1 then shiftdec=1; else shiftdec=0;

/* Beregner log-forskellen i indkomster */
if shiftear=0 then diffarb=log(ear_1996/ear_1993);
else diffarb=.;
if shiftdec=0 then difffrad=log(dec_1996/dec_1993);
else difffrad=.;
if shiftper=0 then diffapers=log(per_1996/per_1993);
else diffapers=.;
if shiftcap=0 then diffkap=log(cap_1996/cap_1993);
else diffkap=.;

/* Beregner log-forskellen i net-of tax rate */
if 0<tau_arb_i1993<1 and 0<tau_arb_i1996<1 then diffMTR_arb_i=log((1-tau_arb_i1996)/(1-tau_arb_i1993));
if 0<tau_apers_i1993<1 and 0<tau_apers_i1996<1 then diffMTR_apers_i=log((1-tau_apers_i1996)/(1-tau_apers_i1993));
if 0<tau_kap_i1993<1 and 0<tau_kap_i1996<1 then diffMTR_kap_i=log((1-tau_kap_i1996)/(1-tau_kap_i1993));
if 0<tau_frad_i1993<1 and 0<tau_frad_i1996<1 then diffMTR_frad_i=log((1-tau_frad_i1996)/(1-tau_frad_i1993));

if 0<tau_arb_h1993<1 and 0<tau_arb_h1996<1 then diffMTR_arb_h=log((1-tau_arb_h1996)/(1-tau_arb_h1993));
if 0<tau_apers_h1993<1 and 0<tau_apers_h1996<1 then diffMTR_apers_h=log((1-tau_apers_h1996)/(1-tau_apers_h1993));
if 0<tau_kap_h1993<1 and 0<tau_kap_h1996<1 then diffMTR_kap_h=log((1-tau_kap_h1996)/(1-tau_kap_h1993));
if 0<tau_frad_h1993<1 and 0<tau_frad_h1996<1 then diffMTR_frad_h=log((1-tau_frad_h1996)/(1-tau_frad_h1993));
if 0<tau_akt_h1993<1 and 0<tau_akt_h1996<1 then diffMTR_akt_h=log((1-tau_akt_h1996)/(1-tau_akt_h1993));

if 0<c_tau_arb_i1993<1 and 0<c_tau_arb_i1996<1 then c_diffMTR_arb_i=log((1-c_tau_arb_i1996)/(1-c_tau_arb_i1993));
if 0<c_tau_apers_i1993<1 and 0<c_tau_apers_i1996<1 then c_diffMTR_apers_i=log((1-c_tau_apers_i1996)/(1-c_tau_apers_i1993));
if 0<c_tau_kap_i1993<1 and 0<c_tau_kap_i1996<1 then c_diffMTR_kap_i=log((1-c_tau_kap_i1996)/(1-c_tau_kap_i1993));
if 0<c_tau_frad_i1993<1 and 0<c_tau_frad_i1996<1 then c_diffMTR_frad_i=log((1-c_tau_frad_i1996)/(1-c_tau_frad_i1993));

if 0<c_tau_arb_h1993<1 and 0<c_tau_arb_h1996<1 then c_diffMTR_arb_h=log((1-c_tau_arb_h1996)/(1-c_tau_arb_h1993));
if 0<c_tau_apers_h1993<1 and 0<c_tau_apers_h1996<1 then c_diffMTR_apers_h=log((1-c_tau_apers_h1996)/(1-c_tau_apers_h1993));
if 0<c_tau_kap_h1993<1 and 0<c_tau_kap_h1996<1 then c_diffMTR_kap_h=log((1-c_tau_kap_h1996)/(1-c_tau_kap_h1993));
if 0<c_tau_frad_h1993<1 and 0<c_tau_frad_h1996<1 then c_diffMTR_frad_h=log((1-c_tau_frad_h1996)/(1-c_tau_frad_h1993));
if 0<c_tau_akt_h1993<1 and 0<c_tau_akt_h1996<1 then c_diffMTR_akt_h=log((1-c_tau_akt_h1996)/(1-c_tau_akt_h1993));

/* Beregner instrument for log-forskellen i net-of-tax rate */
if 0<tau_arb_i1993<1 and 0<tau_arb_i_mec1993<1 then diffMTR_arb_i_IV=log((1-tau_arb_i_mec1993)/(1-tau_arb_i1993));
if 0<tau_apers_i1993<1 and 0<tau_apers_i_mec1993<1 then diffMTR_apers_i_IV=log((1-tau_apers_i_mec1993)/(1-tau_apers_i1993));
if 0<tau_kap_i1993<1 and 0<tau_kap_i_mec1993<1 then diffMTR_kap_i_IV=log((1-tau_kap_i_mec1993)/(1-tau_kap_i1993));
if 0<tau_frad_i1993<1 and 0<tau_frad_i_mec1993<1 then diffMTR_frad_i_IV=log((1-tau_frad_i_mec1993)/(1-tau_frad_i1993));


if 0<tau_arb_h1993<1 and 0<tau_arb_h_mec1993<1 then diffMTR_arb_h_IV=log((1-tau_arb_h_mec1993)/(1-tau_arb_h1993));
if 0<tau_apers_h1993<1 and 0<tau_apers_h_mec1993<1 then diffMTR_apers_h_IV=log((1-tau_apers_h_mec1993)/(1-tau_apers_h1993));
if 0<tau_kap_h1993<1 and 0<tau_kap_h_mec1993<1 then diffMTR_kap_h_IV=log((1-tau_kap_h_mec1993)/(1-tau_kap_h1993));
if 0<tau_frad_h1993<1 and 0<tau_frad_h_mec1993<1 then diffMTR_frad_h_IV=log((1-tau_frad_h_mec1993)/(1-tau_frad_h1993));
if 0<tau_akt_h1993<1 and 0<tau_akt_h_mec1993<1 then diffMTR_akt_h_IV=log((1-tau_akt_h_mec1993)/(1-tau_akt_h1993));

if 0<c_tau_arb_i1993<1 and 0<c_tau_arb_i_mec1993<1 then c_diffMTR_arb_i_IV=log((1-c_tau_arb_i_mec1993)/(1-c_tau_arb_i1993));
if 0<c_tau_apers_i1993<1 and 0<c_tau_apers_i_mec1993<1 then c_diffMTR_apers_i_IV=log((1-c_tau_apers_i_mec1993)/(1-c_tau_apers_i1993));
if 0<c_tau_kap_i1993<1 and 0<c_tau_kap_i_mec1993<1 then c_diffMTR_kap_i_IV=log((1-c_tau_kap_i_mec1993)/(1-c_tau_kap_i1993));
if 0<c_tau_frad_i1993<1 and 0<c_tau_frad_i_mec1993<1 then c_diffMTR_frad_i_IV=log((1-c_tau_frad_i_mec1993)/(1-c_tau_frad_i1993));

if 0<c_tau_arb_h1993<1 and 0<c_tau_arb_h_mec1993<1 then c_diffMTR_arb_h_IV=log((1-c_tau_arb_h_mec1993)/(1-c_tau_arb_h1993));
if 0<c_tau_apers_h1993<1 and 0<c_tau_apers_h_mec1993<1 then c_diffMTR_apers_h_IV=log((1-c_tau_apers_h_mec1993)/(1-c_tau_apers_h1993));
if 0<c_tau_kap_h1993<1 and 0<c_tau_kap_h_mec1993<1 then c_diffMTR_kap_h_IV=log((1-c_tau_kap_h_mec1993)/(1-c_tau_kap_h1993));
if 0<c_tau_frad_h1993<1 and 0<c_tau_frad_h_mec1993<1 then c_diffMTR_frad_h_IV=log((1-c_tau_frad_h_mec1993)/(1-c_tau_frad_h1993));
if 0<c_tau_akt_h1993<1 and 0<c_tau_akt_h_mec1993<1 then c_diffMTR_akt_h_IV=log((1-c_tau_akt_h_mec1993)/(1-c_tau_akt_h1993));

/* Beregner log-forskellen i nettoindkomst */
taxable1993=ear_1993+per_1993+cap_1993-dec_1993;
taxable1996=ear_1996+per_1996+cap_1996-dec_1996;

dummytaxable=0;
if taxable1993>0 and taxable1996>0 then do;
dummytaxable=1;
difftax=log((taxable1996)/(taxable1993));
end;
broad1993=ear_1993+cap_1993;
broad1996=ear_1996+cap_1996;

dummybroad=0;
if broad1993>0 and broad1996>0 then do;
dummybroad=1;
diffbroad=log((broad1996)/(broad1993));
end;
taxable=taxable1993;
broad=broad1993;
logbroad=log(broad);
logtaxable=log(taxable);
netincome1993=ear_1993+per_1993+cap_1993-dec_1993-tax1_1993;
netincome1996=ear_1996+per_1996+cap_1996-dec_1996-tax1_1996;
c_netincome1993=c_ear_1993+c_per_1993+c_cap_1993-c_dec_1993-c_tax1_1993;
c_netincome1996=c_ear_1996+c_per_1996+c_cap_1996-c_dec_1996-c_tax1_1996;

if netincome1993>0 and netincome1996>0 then
diffinc=log((netincome1996)/(netincome1993));

if c_netincome1993>0 and c_netincome1996>0 then
c_diffinc=log((c_netincome1996)/(c_netincome1993));

/* Beregner log-forskellen i virtuel indkomst */
if virtuelindk_i_1993>0 and virtuelindk_i_1996>0 then 
diffvir_i=log(virtuelindk_i_1996/virtuelindk_i_1993);
if virtuelindk_h1_1993>0 and virtuelindk_h1_1996>0 then
diffvir_h1=log(virtuelindk_h1_1996/virtuelindk_h1_1993);
if virtuelindk_h2_1993>0 and virtuelindk_h2_1996>0 then 
diffvir_h2=log(virtuelindk_h2_1996/virtuelindk_h2_1993);

/* Beregner instrument for log-forskellen i virtuel indkomst */
if virtuelindk_i_1993>0 and virtuelindk_i_mec1993>0 then 
diffvir_i_IV=log(virtuelindk_i_mec1993/virtuelindk_i_1993);
if virtuelindk_h1_1993>0 and virtuelindk_h1_mec1993>0 then
diffvir_h1_IV=log(virtuelindk_h1_mec1993/virtuelindk_h1_1993);
if virtuelindk_h2_1993>0 and virtuelindk_h2_mec1993>0 then 
diffvir_h2_IV=log(virtuelindk_h2_mec1993/virtuelindk_h2_1993);

/* Tager log til indkomster */
if dummyear=2 then logarb=log(ear_1993);
if dummyear=3 then logarb=log((ear_1993*(-1)));

if dummyper=2 then logapers=log(per_1993);
if dummyper=3 then logapers=log((per_1993*(-1)));

if dummycap=2 then logkap=log(cap_1993);
if dummycap=3 then logkap=log((cap_1993*(-1)));

if dummydec=2 then logfrad=log(dec_1993);
if dummydec=3 then logfrad=log((dec_1993*(-1)));

/* Omdøber indkomster */
arb=ear_1993;
apers=per_1993;
kap=cap_1993;
frad=dec_1993;
tax=tax1_1993;
tau_arb_i_pre=tau_arb_i1993;
tau_arb_h_pre=tau_arb_h1993;
tau_arb_i_post=tau_arb_i1996;
tau_arb_h_post=tau_arb_h1996;
tau_arb_i_mec=tau_arb_i_mec1993;
tau_arb_h_mec=tau_arb_h_mec1993;

tau_kap_i_pre=tau_kap_i1993;
tau_kap_h_pre=tau_kap_h1993;
tau_kap_i_post=tau_kap_i1996;
tau_kap_h_post=tau_kap_h1996;
tau_kap_i_mec=tau_kap_i_mec1993;
tau_kap_h_mec=tau_kap_h_mec1993;

tau_frad_i_pre=tau_frad_i1993;
tau_frad_h_pre=tau_frad_h1993;
tau_frad_i_post=tau_frad_i1996;
tau_frad_h_post=tau_frad_h1996;
tau_frad_i_mec=tau_frad_i_mec1993;
tau_frad_h_mec=tau_frad_h_mec1993;

dummyper_income=1;
if per_income_1993>0 and per_income_1996>0 then dummyper_income=2;
if per_income_1993<0 and per_income_1996<0 then dummyper_income=3;
if dummyper_income=1 then shiftper_income=1; else shiftper_income=0;
if shiftper_income=0 then diffper_income=log(per_income_1996/per_income_1993);
else diffper_income=.;
per_income=per_income_1993;
if dummyper_income=2 then logper_income=log(per_income_1993);
if dummyper_income=3 then logper_income=log((per_income_1993*(-1)));
run;




data tax2_1994(drop=per_1994 cap_1994 dec_1994 ear_1994 c_per_1994 tax1_1994 c_tax1_1994 
                h_tax1_1994 c_cap_1994 c_dec_1994 c_ear_1994 virtuelindk_i_1994 
                virtuelindk_h1_1994 virtuelindk_h2_1994 tau_arb_i1994
                tau_apers_i1994 tau_kap_i1994 tau_frad_i1994 tau_arb_h1994 
                tau_apers_h1994 tau_kap_h1994 tau_frad_h1994 c_tau_arb_i1994 
                c_tau_apers_i1994 c_tau_kap_i1994 c_tau_frad_i1994 c_tau_arb_h1994
                c_tau_apers_h1994 c_tau_kap_h1994 c_tau_frad_h1994
                virtuelindk_i_mec1994 virtuelindk_h1_mec1994 virtuelindk_h2_mec1994 
			    virtuelindk_i_mec virtuelindk_h1_mec virtuelindk_h2_mec
                tau_arb_i_mec1994 ctype 
                tau_apers_i_mec1994 tau_kap_i_mec1994 tau_frad_i_mec1994 tau_arb_h_mec1994 
                tau_apers_h_mec1994 tau_kap_h_mec1994 tau_frad_h_mec1994 c_tau_arb_i_mec1994 
                c_tau_apers_i_mec1994 c_tau_kap_i_mec1994 c_tau_frad_i_mec1994 c_tau_arb_h_mec1994
                c_tau_apers_h_mec1994 c_tau_kap_h_mec1994 c_tau_frad_h_mec1994
                per_1997 cap_1997 dec_1997 ear_1997 c_per_1997 tax1_1997 c_tax1_1997 
                h_tax1_1997 c_cap_1997 c_dec_1997 c_ear_1997 virtuelindk_i_1997 
                virtuelindk_h1_1997 virtuelindk_h2_1997 tau_arb_i1997
                tau_apers_i1997 tau_kap_i1997 tau_frad_i1997 tau_arb_h1997 
                tau_apers_h1997 tau_kap_h1997 tau_frad_h1997 c_tau_arb_i1997 
                c_tau_apers_i1997 c_tau_kap_i1997 c_tau_frad_i1997 c_tau_arb_h1997
                c_tau_apers_h1997 c_tau_kap_h1997 c_tau_frad_h1997
                arbindk apersindk kapindk lignfrad netincome1994 netincome1997
                c_netincome1994 c_netincome1997
tau_akt_h1994 c_tau_akt_h1994 tau_akt_h_mec1994 c_tau_akt_h_mec1994 tau_akt_h1997 c_tau_akt_h1997);
set tax1994;

/* Tager højde for at indkomster kan skifte fortegn */
dummycap=1;
if cap_1994>0 and cap_1997>0 then dummycap=2;
if cap_1994<0 and cap_1997<0 then dummycap=3;
if dummycap=1 then shiftcap=1; else shiftcap=0;
dummyper=1;
if per_1994>0 and per_1997>0 then dummyper=2;
if per_1994<0 and per_1997<0 then dummyper=3;
if dummyper=1 then shiftper=1; else shiftper=0;
dummyear=1;
if ear_1994>0 and ear_1997>0 then dummyear=2;
if ear_1994<0 and ear_1997<0 then dummyear=3;
if dummyear=1 then shiftear=1; else shiftear=0;
dummydec=1;
if dec_1994>0 and dec_1997>0 then dummydec=2;
if dec_1994<0 and dec_1997<0 then dummydec=3;
if dummydec=1 then shiftdec=1; else shiftdec=0;

/* Beregner log-forskellen i indkomster */
if shiftear=0 then diffarb=log(ear_1997/ear_1994);
else diffarb=.;
if shiftdec=0 then difffrad=log(dec_1997/dec_1994);
else difffrad=.;
if shiftper=0 then diffapers=log(per_1997/per_1994);
else diffapers=.;
if shiftcap=0 then diffkap=log(cap_1997/cap_1994);
else diffkap=.;

/* Beregner log-forskellen i net-of tax rate */
if 0<tau_arb_i1994<1 and 0<tau_arb_i1997<1 then diffMTR_arb_i=log((1-tau_arb_i1997)/(1-tau_arb_i1994));
if 0<tau_apers_i1994<1 and 0<tau_apers_i1997<1 then diffMTR_apers_i=log((1-tau_apers_i1997)/(1-tau_apers_i1994));
if 0<tau_kap_i1994<1 and 0<tau_kap_i1997<1 then diffMTR_kap_i=log((1-tau_kap_i1997)/(1-tau_kap_i1994));
if 0<tau_frad_i1994<1 and 0<tau_frad_i1997<1 then diffMTR_frad_i=log((1-tau_frad_i1997)/(1-tau_frad_i1994));

if 0<tau_arb_h1994<1 and 0<tau_arb_h1997<1 then diffMTR_arb_h=log((1-tau_arb_h1997)/(1-tau_arb_h1994));
if 0<tau_apers_h1994<1 and 0<tau_apers_h1997<1 then diffMTR_apers_h=log((1-tau_apers_h1997)/(1-tau_apers_h1994));
if 0<tau_kap_h1994<1 and 0<tau_kap_h1997<1 then diffMTR_kap_h=log((1-tau_kap_h1997)/(1-tau_kap_h1994));
if 0<tau_frad_h1994<1 and 0<tau_frad_h1997<1 then diffMTR_frad_h=log((1-tau_frad_h1997)/(1-tau_frad_h1994));
if 0<tau_akt_h1994<1 and 0<tau_akt_h1997<1 then diffMTR_akt_h=log((1-tau_akt_h1997)/(1-tau_akt_h1994));

if 0<c_tau_arb_i1994<1 and 0<c_tau_arb_i1997<1 then c_diffMTR_arb_i=log((1-c_tau_arb_i1997)/(1-c_tau_arb_i1994));
if 0<c_tau_apers_i1994<1 and 0<c_tau_apers_i1997<1 then c_diffMTR_apers_i=log((1-c_tau_apers_i1997)/(1-c_tau_apers_i1994));
if 0<c_tau_kap_i1994<1 and 0<c_tau_kap_i1997<1 then c_diffMTR_kap_i=log((1-c_tau_kap_i1997)/(1-c_tau_kap_i1994));
if 0<c_tau_frad_i1994<1 and 0<c_tau_frad_i1997<1 then c_diffMTR_frad_i=log((1-c_tau_frad_i1997)/(1-c_tau_frad_i1994));

if 0<c_tau_arb_h1994<1 and 0<c_tau_arb_h1997<1 then c_diffMTR_arb_h=log((1-c_tau_arb_h1997)/(1-c_tau_arb_h1994));
if 0<c_tau_apers_h1994<1 and 0<c_tau_apers_h1997<1 then c_diffMTR_apers_h=log((1-c_tau_apers_h1997)/(1-c_tau_apers_h1994));
if 0<c_tau_kap_h1994<1 and 0<c_tau_kap_h1997<1 then c_diffMTR_kap_h=log((1-c_tau_kap_h1997)/(1-c_tau_kap_h1994));
if 0<c_tau_frad_h1994<1 and 0<c_tau_frad_h1997<1 then c_diffMTR_frad_h=log((1-c_tau_frad_h1997)/(1-c_tau_frad_h1994));
if 0<c_tau_akt_h1994<1 and 0<c_tau_akt_h1997<1 then c_diffMTR_akt_h=log((1-c_tau_akt_h1997)/(1-c_tau_akt_h1994));

/* Beregner instrument for log-forskellen i net-of-tax rate */
if 0<tau_arb_i1994<1 and 0<tau_arb_i_mec1994<1 then diffMTR_arb_i_IV=log((1-tau_arb_i_mec1994)/(1-tau_arb_i1994));
if 0<tau_apers_i1994<1 and 0<tau_apers_i_mec1994<1 then diffMTR_apers_i_IV=log((1-tau_apers_i_mec1994)/(1-tau_apers_i1994));
if 0<tau_kap_i1994<1 and 0<tau_kap_i_mec1994<1 then diffMTR_kap_i_IV=log((1-tau_kap_i_mec1994)/(1-tau_kap_i1994));
if 0<tau_frad_i1994<1 and 0<tau_frad_i_mec1994<1 then diffMTR_frad_i_IV=log((1-tau_frad_i_mec1994)/(1-tau_frad_i1994));

if 0<tau_arb_h1994<1 and 0<tau_arb_h_mec1994<1 then diffMTR_arb_h_IV=log((1-tau_arb_h_mec1994)/(1-tau_arb_h1994));
if 0<tau_apers_h1994<1 and 0<tau_apers_h_mec1994<1 then diffMTR_apers_h_IV=log((1-tau_apers_h_mec1994)/(1-tau_apers_h1994));
if 0<tau_kap_h1994<1 and 0<tau_kap_h_mec1994<1 then diffMTR_kap_h_IV=log((1-tau_kap_h_mec1994)/(1-tau_kap_h1994));
if 0<tau_frad_h1994<1 and 0<tau_frad_h_mec1994<1 then diffMTR_frad_h_IV=log((1-tau_frad_h_mec1994)/(1-tau_frad_h1994));
if 0<tau_akt_h1994<1 and 0<tau_akt_h_mec1994<1 then diffMTR_akt_h_IV=log((1-tau_akt_h_mec1994)/(1-tau_akt_h1994));

if 0<c_tau_arb_i1994<1 and 0<c_tau_arb_i_mec1994<1 then c_diffMTR_arb_i_IV=log((1-c_tau_arb_i_mec1994)/(1-c_tau_arb_i1994));
if 0<c_tau_apers_i1994<1 and 0<c_tau_apers_i_mec1994<1 then c_diffMTR_apers_i_IV=log((1-c_tau_apers_i_mec1994)/(1-c_tau_apers_i1994));
if 0<c_tau_kap_i1994<1 and 0<c_tau_kap_i_mec1994<1 then c_diffMTR_kap_i_IV=log((1-c_tau_kap_i_mec1994)/(1-c_tau_kap_i1994));
if 0<c_tau_frad_i1994<1 and 0<c_tau_frad_i_mec1994<1 then c_diffMTR_frad_i_IV=log((1-c_tau_frad_i_mec1994)/(1-c_tau_frad_i1994));

if 0<c_tau_arb_h1994<1 and 0<c_tau_arb_h_mec1994<1 then c_diffMTR_arb_h_IV=log((1-c_tau_arb_h_mec1994)/(1-c_tau_arb_h1994));
if 0<c_tau_apers_h1994<1 and 0<c_tau_apers_h_mec1994<1 then c_diffMTR_apers_h_IV=log((1-c_tau_apers_h_mec1994)/(1-c_tau_apers_h1994));
if 0<c_tau_kap_h1994<1 and 0<c_tau_kap_h_mec1994<1 then c_diffMTR_kap_h_IV=log((1-c_tau_kap_h_mec1994)/(1-c_tau_kap_h1994));
if 0<c_tau_frad_h1994<1 and 0<c_tau_frad_h_mec1994<1 then c_diffMTR_frad_h_IV=log((1-c_tau_frad_h_mec1994)/(1-c_tau_frad_h1994));
if 0<c_tau_akt_h1994<1 and 0<c_tau_akt_h_mec1994<1 then c_diffMTR_akt_h_IV=log((1-c_tau_akt_h_mec1994)/(1-c_tau_akt_h1994));

/* Beregner log-forskellen i nettoindkomst */
taxable1994=ear_1994+per_1994+cap_1994-dec_1994;
taxable1997=ear_1997+per_1997+cap_1997-dec_1997;

dummytaxable=0;
if taxable1994>0 and taxable1997>0 then do;
dummytaxable=1;
difftax=log((taxable1997)/(taxable1994));
end;
broad1994=ear_1994+cap_1994;
broad1997=ear_1997+cap_1997;

dummybroad=0;
if broad1994>0 and broad1997>0 then do;
dummybroad=1;
diffbroad=log((broad1997)/(broad1994));
end;
taxable=taxable1994;
broad=broad1994;
logbroad=log(broad);
logtaxable=log(taxable);
netincome1994=ear_1994+per_1994+cap_1994-dec_1994-tax1_1994;
netincome1997=ear_1997+per_1997+cap_1997-dec_1997-tax1_1997;
c_netincome1994=c_ear_1994+c_per_1994+c_cap_1994-c_dec_1994-c_tax1_1994;
c_netincome1997=c_ear_1997+c_per_1997+c_cap_1997-c_dec_1997-c_tax1_1997;

if netincome1994>0 and netincome1997>0 then
diffinc=log((netincome1997)/(netincome1994));

if c_netincome1994>0 and c_netincome1997>0 then
c_diffinc=log((c_netincome1997)/(c_netincome1994));

/* Beregner log-forskellen i virtuel indkomst */
if virtuelindk_i_1994>0 and virtuelindk_i_1997>0 then 
diffvir_i=log(virtuelindk_i_1997/virtuelindk_i_1994);
if virtuelindk_h1_1994>0 and virtuelindk_h1_1997>0 then
diffvir_h1=log(virtuelindk_h1_1997/virtuelindk_h1_1994);
if virtuelindk_h2_1994>0 and virtuelindk_h2_1997>0 then 
diffvir_h2=log(virtuelindk_h2_1997/virtuelindk_h2_1994);

/* Beregner instrument for log-forskellen i virtuel indkomst */
if virtuelindk_i_1994>0 and virtuelindk_i_mec1994>0 then 
diffvir_i_IV=log(virtuelindk_i_mec1994/virtuelindk_i_1994);
if virtuelindk_h1_1994>0 and virtuelindk_h1_mec1994>0 then
diffvir_h1_IV=log(virtuelindk_h1_mec1994/virtuelindk_h1_1994);
if virtuelindk_h2_1994>0 and virtuelindk_h2_mec1994>0 then 
diffvir_h2_IV=log(virtuelindk_h2_mec1994/virtuelindk_h2_1994);

/* Tager log til indkomster */
if dummyear=2 then logarb=log(ear_1994);
if dummyear=3 then logarb=log((ear_1994*(-1)));

if dummyper=2 then logapers=log(per_1994);
if dummyper=3 then logapers=log((per_1994*(-1)));

if dummycap=2 then logkap=log(cap_1994);
if dummycap=3 then logkap=log((cap_1994*(-1)));

if dummydec=2 then logfrad=log(dec_1994);
if dummydec=3 then logfrad=log((dec_1994*(-1)));

/* Omdøber indkomster */
arb=ear_1994;
apers=per_1994;
kap=cap_1994;
frad=dec_1994;
tax=tax1_1994;
tau_arb_i_pre=tau_arb_i1994;
tau_arb_h_pre=tau_arb_h1994;
tau_arb_i_post=tau_arb_i1997;
tau_arb_h_post=tau_arb_h1997;
tau_arb_i_mec=tau_arb_i_mec1994;
tau_arb_h_mec=tau_arb_h_mec1994;

tau_kap_i_pre=tau_kap_i1994;
tau_kap_h_pre=tau_kap_h1994;
tau_kap_i_post=tau_kap_i1997;
tau_kap_h_post=tau_kap_h1997;
tau_kap_i_mec=tau_kap_i_mec1994;
tau_kap_h_mec=tau_kap_h_mec1994;

tau_frad_i_pre=tau_frad_i1994;
tau_frad_h_pre=tau_frad_h1994;
tau_frad_i_post=tau_frad_i1997;
tau_frad_h_post=tau_frad_h1997;
tau_frad_i_mec=tau_frad_i_mec1994;
tau_frad_h_mec=tau_frad_h_mec1994;

dummyper_income=1;
if per_income_1994>0 and per_income_1997>0 then dummyper_income=2;
if per_income_1994<0 and per_income_1997<0 then dummyper_income=3;
if dummyper_income=1 then shiftper_income=1; else shiftper_income=0;
if shiftper_income=0 then diffper_income=log(per_income_1997/per_income_1994);
else diffper_income=.;
per_income=per_income_1994;
if dummyper_income=2 then logper_income=log(per_income_1994);
if dummyper_income=3 then logper_income=log((per_income_1994*(-1)));
run;




data tax2_1995(drop=per_1995 cap_1995 dec_1995 ear_1995 c_per_1995 tax1_1995 c_tax1_1995 
                h_tax1_1995 c_cap_1995 c_dec_1995 c_ear_1995 virtuelindk_i_1995 
                virtuelindk_h1_1995 virtuelindk_h2_1995 tau_arb_i1995
                tau_apers_i1995 tau_kap_i1995 tau_frad_i1995 tau_arb_h1995 
                tau_apers_h1995 tau_kap_h1995 tau_frad_h1995 c_tau_arb_i1995 
                c_tau_apers_i1995 c_tau_kap_i1995 c_tau_frad_i1995 c_tau_arb_h1995
                c_tau_apers_h1995 c_tau_kap_h1995 c_tau_frad_h1995
                virtuelindk_i_mec1995 virtuelindk_h1_mec1995 virtuelindk_h2_mec1995 
			    virtuelindk_i_mec virtuelindk_h1_mec virtuelindk_h2_mec
                tau_arb_i_mec1995 ctype 
                tau_apers_i_mec1995 tau_kap_i_mec1995 tau_frad_i_mec1995 tau_arb_h_mec1995 
                tau_apers_h_mec1995 tau_kap_h_mec1995 tau_frad_h_mec1995 c_tau_arb_i_mec1995 
                c_tau_apers_i_mec1995 c_tau_kap_i_mec1995 c_tau_frad_i_mec1995 c_tau_arb_h_mec1995
                c_tau_apers_h_mec1995 c_tau_kap_h_mec1995 c_tau_frad_h_mec1995
                per_1998 cap_1998 dec_1998 ear_1998 c_per_1998 tax1_1998 c_tax1_1998 
                h_tax1_1998 c_cap_1998 c_dec_1998 c_ear_1998 virtuelindk_i_1998 
                virtuelindk_h1_1998 virtuelindk_h2_1998 tau_arb_i1998
                tau_apers_i1998 tau_kap_i1998 tau_frad_i1998 tau_arb_h1998 
                tau_apers_h1998 tau_kap_h1998 tau_frad_h1998 c_tau_arb_i1998 
                c_tau_apers_i1998 c_tau_kap_i1998 c_tau_frad_i1998 c_tau_arb_h1998
                c_tau_apers_h1998 c_tau_kap_h1998 c_tau_frad_h1998
                arbindk apersindk kapindk lignfrad netincome1995 netincome1998
                c_netincome1995 c_netincome1998
tau_akt_h1995 c_tau_akt_h1995 tau_akt_h_mec1995 c_tau_akt_h_mec1995 tau_akt_h1998 c_tau_akt_h1998);
set tax1995;

/* Tager højde for at indkomster kan skifte fortegn */
dummycap=1;
if cap_1995>0 and cap_1998>0 then dummycap=2;
if cap_1995<0 and cap_1998<0 then dummycap=3;
if dummycap=1 then shiftcap=1; else shiftcap=0;
dummyper=1;
if per_1995>0 and per_1998>0 then dummyper=2;
if per_1995<0 and per_1998<0 then dummyper=3;
if dummyper=1 then shiftper=1; else shiftper=0;
dummyear=1;
if ear_1995>0 and ear_1998>0 then dummyear=2;
if ear_1995<0 and ear_1998<0 then dummyear=3;
if dummyear=1 then shiftear=1; else shiftear=0;
dummydec=1;
if dec_1995>0 and dec_1998>0 then dummydec=2;
if dec_1995<0 and dec_1998<0 then dummydec=3;
if dummydec=1 then shiftdec=1; else shiftdec=0;

/* Beregner log-forskellen i indkomster */
if shiftear=0 then diffarb=log(ear_1998/ear_1995);
else diffarb=.;
if shiftdec=0 then difffrad=log(dec_1998/dec_1995);
else difffrad=.;
if shiftper=0 then diffapers=log(per_1998/per_1995);
else diffapers=.;
if shiftcap=0 then diffkap=log(cap_1998/cap_1995);
else diffkap=.;

/* Beregner log-forskellen i net-of tax rate */
if 0<tau_arb_i1995<1 and 0<tau_arb_i1998<1 then diffMTR_arb_i=log((1-tau_arb_i1998)/(1-tau_arb_i1995));
if 0<tau_apers_i1995<1 and 0<tau_apers_i1998<1 then diffMTR_apers_i=log((1-tau_apers_i1998)/(1-tau_apers_i1995));
if 0<tau_kap_i1995<1 and 0<tau_kap_i1998<1 then diffMTR_kap_i=log((1-tau_kap_i1998)/(1-tau_kap_i1995));
if 0<tau_frad_i1995<1 and 0<tau_frad_i1998<1 then diffMTR_frad_i=log((1-tau_frad_i1998)/(1-tau_frad_i1995));

if 0<tau_arb_h1995<1 and 0<tau_arb_h1998<1 then diffMTR_arb_h=log((1-tau_arb_h1998)/(1-tau_arb_h1995));
if 0<tau_apers_h1995<1 and 0<tau_apers_h1998<1 then diffMTR_apers_h=log((1-tau_apers_h1998)/(1-tau_apers_h1995));
if 0<tau_kap_h1995<1 and 0<tau_kap_h1998<1 then diffMTR_kap_h=log((1-tau_kap_h1998)/(1-tau_kap_h1995));
if 0<tau_frad_h1995<1 and 0<tau_frad_h1998<1 then diffMTR_frad_h=log((1-tau_frad_h1998)/(1-tau_frad_h1995));
if 0<tau_akt_h1995<1 and 0<tau_akt_h1998<1 then diffMTR_akt_h=log((1-tau_akt_h1998)/(1-tau_akt_h1995));

if 0<c_tau_arb_i1995<1 and 0<c_tau_arb_i1998<1 then c_diffMTR_arb_i=log((1-c_tau_arb_i1998)/(1-c_tau_arb_i1995));
if 0<c_tau_apers_i1995<1 and 0<c_tau_apers_i1998<1 then c_diffMTR_apers_i=log((1-c_tau_apers_i1998)/(1-c_tau_apers_i1995));
if 0<c_tau_kap_i1995<1 and 0<c_tau_kap_i1998<1 then c_diffMTR_kap_i=log((1-c_tau_kap_i1998)/(1-c_tau_kap_i1995));
if 0<c_tau_frad_i1995<1 and 0<c_tau_frad_i1998<1 then c_diffMTR_frad_i=log((1-c_tau_frad_i1998)/(1-c_tau_frad_i1995));

if 0<c_tau_arb_h1995<1 and 0<c_tau_arb_h1998<1 then c_diffMTR_arb_h=log((1-c_tau_arb_h1998)/(1-c_tau_arb_h1995));
if 0<c_tau_apers_h1995<1 and 0<c_tau_apers_h1998<1 then c_diffMTR_apers_h=log((1-c_tau_apers_h1998)/(1-c_tau_apers_h1995));
if 0<c_tau_kap_h1995<1 and 0<c_tau_kap_h1998<1 then c_diffMTR_kap_h=log((1-c_tau_kap_h1998)/(1-c_tau_kap_h1995));
if 0<c_tau_frad_h1995<1 and 0<c_tau_frad_h1998<1 then c_diffMTR_frad_h=log((1-c_tau_frad_h1998)/(1-c_tau_frad_h1995));
if 0<c_tau_akt_h1995<1 and 0<c_tau_akt_h1998<1 then c_diffMTR_akt_h=log((1-c_tau_akt_h1998)/(1-c_tau_akt_h1995));

/* Beregner instrument for log-forskellen i net-of-tax rate */
if 0<tau_arb_i1995<1 and 0<tau_arb_i_mec1995<1 then diffMTR_arb_i_IV=log((1-tau_arb_i_mec1995)/(1-tau_arb_i1995));
if 0<tau_apers_i1995<1 and 0<tau_apers_i_mec1995<1 then diffMTR_apers_i_IV=log((1-tau_apers_i_mec1995)/(1-tau_apers_i1995));
if 0<tau_kap_i1995<1 and 0<tau_kap_i_mec1995<1 then diffMTR_kap_i_IV=log((1-tau_kap_i_mec1995)/(1-tau_kap_i1995));
if 0<tau_frad_i1995<1 and 0<tau_frad_i_mec1995<1 then diffMTR_frad_i_IV=log((1-tau_frad_i_mec1995)/(1-tau_frad_i1995));

if 0<tau_arb_h1995<1 and 0<tau_arb_h_mec1995<1 then diffMTR_arb_h_IV=log((1-tau_arb_h_mec1995)/(1-tau_arb_h1995));
if 0<tau_apers_h1995<1 and 0<tau_apers_h_mec1995<1 then diffMTR_apers_h_IV=log((1-tau_apers_h_mec1995)/(1-tau_apers_h1995));
if 0<tau_kap_h1995<1 and 0<tau_kap_h_mec1995<1 then diffMTR_kap_h_IV=log((1-tau_kap_h_mec1995)/(1-tau_kap_h1995));
if 0<tau_frad_h1995<1 and 0<tau_frad_h_mec1995<1 then diffMTR_frad_h_IV=log((1-tau_frad_h_mec1995)/(1-tau_frad_h1995));
if 0<tau_akt_h1995<1 and 0<tau_akt_h_mec1995<1 then diffMTR_akt_h_IV=log((1-tau_akt_h_mec1995)/(1-tau_akt_h1995));

if 0<c_tau_arb_i1995<1 and 0<c_tau_arb_i_mec1995<1 then c_diffMTR_arb_i_IV=log((1-c_tau_arb_i_mec1995)/(1-c_tau_arb_i1995));
if 0<c_tau_apers_i1995<1 and 0<c_tau_apers_i_mec1995<1 then c_diffMTR_apers_i_IV=log((1-c_tau_apers_i_mec1995)/(1-c_tau_apers_i1995));
if 0<c_tau_kap_i1995<1 and 0<c_tau_kap_i_mec1995<1 then c_diffMTR_kap_i_IV=log((1-c_tau_kap_i_mec1995)/(1-c_tau_kap_i1995));
if 0<c_tau_frad_i1995<1 and 0<c_tau_frad_i_mec1995<1 then c_diffMTR_frad_i_IV=log((1-c_tau_frad_i_mec1995)/(1-c_tau_frad_i1995));

if 0<c_tau_arb_h1995<1 and 0<c_tau_arb_h_mec1995<1 then c_diffMTR_arb_h_IV=log((1-c_tau_arb_h_mec1995)/(1-c_tau_arb_h1995));
if 0<c_tau_apers_h1995<1 and 0<c_tau_apers_h_mec1995<1 then c_diffMTR_apers_h_IV=log((1-c_tau_apers_h_mec1995)/(1-c_tau_apers_h1995));
if 0<c_tau_kap_h1995<1 and 0<c_tau_kap_h_mec1995<1 then c_diffMTR_kap_h_IV=log((1-c_tau_kap_h_mec1995)/(1-c_tau_kap_h1995));
if 0<c_tau_frad_h1995<1 and 0<c_tau_frad_h_mec1995<1 then c_diffMTR_frad_h_IV=log((1-c_tau_frad_h_mec1995)/(1-c_tau_frad_h1995));
if 0<c_tau_akt_h1995<1 and 0<c_tau_akt_h_mec1995<1 then c_diffMTR_akt_h_IV=log((1-c_tau_akt_h_mec1995)/(1-c_tau_akt_h1995));

/* Beregner log-forskellen i nettoindkomst */
taxable1995=ear_1995+per_1995+cap_1995-dec_1995;
taxable1998=ear_1998+per_1998+cap_1998-dec_1998;

dummytaxable=0;
if taxable1995>0 and taxable1998>0 then do;
dummytaxable=1;
difftax=log((taxable1998)/(taxable1995));
end;
broad1995=ear_1995+cap_1995;
broad1998=ear_1998+cap_1998;

dummybroad=0;
if broad1995>0 and broad1998>0 then do;
dummybroad=1;
diffbroad=log((broad1998)/(broad1995));
end;
taxable=taxable1995;
broad=broad1995;
logbroad=log(broad);
logtaxable=log(taxable);
netincome1995=ear_1995+per_1995+cap_1995-dec_1995-tax1_1995;
netincome1998=ear_1998+per_1998+cap_1998-dec_1998-tax1_1998;
c_netincome1995=c_ear_1995+c_per_1995+c_cap_1995-c_dec_1995-c_tax1_1995;
c_netincome1998=c_ear_1998+c_per_1998+c_cap_1998-c_dec_1998-c_tax1_1998;

if netincome1995>0 and netincome1998>0 then
diffinc=log((netincome1998)/(netincome1995));

if c_netincome1995>0 and c_netincome1998>0 then
c_diffinc=log((c_netincome1998)/(c_netincome1995));

/* Beregner log-forskellen i virtuel indkomst */
if virtuelindk_i_1995>0 and virtuelindk_i_1998>0 then 
diffvir_i=log(virtuelindk_i_1998/virtuelindk_i_1995);
if virtuelindk_h1_1995>0 and virtuelindk_h1_1998>0 then
diffvir_h1=log(virtuelindk_h1_1998/virtuelindk_h1_1995);
if virtuelindk_h2_1995>0 and virtuelindk_h2_1998>0 then 
diffvir_h2=log(virtuelindk_h2_1998/virtuelindk_h2_1995);

/* Beregner instrument for log-forskellen i virtuel indkomst */
if virtuelindk_i_1995>0 and virtuelindk_i_mec1995>0 then 
diffvir_i_IV=log(virtuelindk_i_mec1995/virtuelindk_i_1995);
if virtuelindk_h1_1995>0 and virtuelindk_h1_mec1995>0 then
diffvir_h1_IV=log(virtuelindk_h1_mec1995/virtuelindk_h1_1995);
if virtuelindk_h2_1995>0 and virtuelindk_h2_mec1995>0 then 
diffvir_h2_IV=log(virtuelindk_h2_mec1995/virtuelindk_h2_1995);

/* Tager log til indkomster */
if dummyear=2 then logarb=log(ear_1995);
if dummyear=3 then logarb=log((ear_1995*(-1)));

if dummyper=2 then logapers=log(per_1995);
if dummyper=3 then logapers=log((per_1995*(-1)));

if dummycap=2 then logkap=log(cap_1995);
if dummycap=3 then logkap=log((cap_1995*(-1)));

if dummydec=2 then logfrad=log(dec_1995);
if dummydec=3 then logfrad=log((dec_1995*(-1)));

/* Omdøber indkomster */
arb=ear_1995;
apers=per_1995;
kap=cap_1995;
frad=dec_1995;
tax=tax1_1995;
tau_arb_i_pre=tau_arb_i1995;
tau_arb_h_pre=tau_arb_h1995;
tau_arb_i_post=tau_arb_i1998;
tau_arb_h_post=tau_arb_h1998;
tau_arb_i_mec=tau_arb_i_mec1995;
tau_arb_h_mec=tau_arb_h_mec1995;

tau_kap_i_pre=tau_kap_i1995;
tau_kap_h_pre=tau_kap_h1995;
tau_kap_i_post=tau_kap_i1998;
tau_kap_h_post=tau_kap_h1998;
tau_kap_i_mec=tau_kap_i_mec1995;
tau_kap_h_mec=tau_kap_h_mec1995;

tau_frad_i_pre=tau_frad_i1995;
tau_frad_h_pre=tau_frad_h1995;
tau_frad_i_post=tau_frad_i1998;
tau_frad_h_post=tau_frad_h1998;
tau_frad_i_mec=tau_frad_i_mec1995;
tau_frad_h_mec=tau_frad_h_mec1995;
dummyper_income=1;
if per_income_1995>0 and per_income_1998>0 then dummyper_income=2;
if per_income_1995<0 and per_income_1998<0 then dummyper_income=3;
if dummyper_income=1 then shiftper_income=1; else shiftper_income=0;
if shiftper_income=0 then diffper_income=log(per_income_1998/per_income_1995);
else diffper_income=.;
per_income=per_income_1995;
if dummyper_income=2 then logper_income=log(per_income_1995);
if dummyper_income=3 then logper_income=log((per_income_1995*(-1)));
run;




data tax2_1996(drop=per_1996 cap_1996 dec_1996 ear_1996 c_per_1996 tax1_1996 c_tax1_1996 
                h_tax1_1996 c_cap_1996 c_dec_1996 c_ear_1996 virtuelindk_i_1996 
                virtuelindk_h1_1996 virtuelindk_h2_1996 tau_arb_i1996
                tau_apers_i1996 tau_kap_i1996 tau_frad_i1996 tau_arb_h1996 
                tau_apers_h1996 tau_kap_h1996 tau_frad_h1996 c_tau_arb_i1996 
                c_tau_apers_i1996 c_tau_kap_i1996 c_tau_frad_i1996 c_tau_arb_h1996
                c_tau_apers_h1996 c_tau_kap_h1996 c_tau_frad_h1996
                virtuelindk_i_mec1996 virtuelindk_h1_mec1996 virtuelindk_h2_mec1996 
			    virtuelindk_i_mec virtuelindk_h1_mec virtuelindk_h2_mec
                tau_arb_i_mec1996 ctype 
                tau_apers_i_mec1996 tau_kap_i_mec1996 tau_frad_i_mec1996 tau_arb_h_mec1996 
                tau_apers_h_mec1996 tau_kap_h_mec1996 tau_frad_h_mec1996 c_tau_arb_i_mec1996 
                c_tau_apers_i_mec1996 c_tau_kap_i_mec1996 c_tau_frad_i_mec1996 c_tau_arb_h_mec1996
                c_tau_apers_h_mec1996 c_tau_kap_h_mec1996 c_tau_frad_h_mec1996
                per_1999 cap_1999 dec_1999 ear_1999 c_per_1999 tax1_1999 c_tax1_1999 
                h_tax1_1999 c_cap_1999 c_dec_1999 c_ear_1999 virtuelindk_i_1999 
                virtuelindk_h1_1999 virtuelindk_h2_1999 tau_arb_i1999
                tau_apers_i1999 tau_kap_i1999 tau_frad_i1999 tau_arb_h1999 
                tau_apers_h1999 tau_kap_h1999 tau_frad_h1999 c_tau_arb_i1999 
                c_tau_apers_i1999 c_tau_kap_i1999 c_tau_frad_i1999 c_tau_arb_h1999
                c_tau_apers_h1999 c_tau_kap_h1999 c_tau_frad_h1999
                arbindk apersindk kapindk lignfrad netincome1996 netincome1999
                c_netincome1996 c_netincome1999
tau_akt_h1996 c_tau_akt_h1996 tau_akt_h_mec1996 c_tau_akt_h_mec1996 tau_akt_h1999 c_tau_akt_h1999);
set tax1996;

/* Tager højde for at indkomster kan skifte fortegn */
dummycap=1;
if cap_1996>0 and cap_1999>0 then dummycap=2;
if cap_1996<0 and cap_1999<0 then dummycap=3;
if dummycap=1 then shiftcap=1; else shiftcap=0;
dummyper=1;
if per_1996>0 and per_1999>0 then dummyper=2;
if per_1996<0 and per_1999<0 then dummyper=3;
if dummyper=1 then shiftper=1; else shiftper=0;
dummyear=1;
if ear_1996>0 and ear_1999>0 then dummyear=2;
if ear_1996<0 and ear_1999<0 then dummyear=3;
if dummyear=1 then shiftear=1; else shiftear=0;
dummydec=1;
if dec_1996>0 and dec_1999>0 then dummydec=2;
if dec_1996<0 and dec_1999<0 then dummydec=3;
if dummydec=1 then shiftdec=1; else shiftdec=0;

/* Beregner log-forskellen i indkomster */
if shiftear=0 then diffarb=log(ear_1999/ear_1996);
else diffarb=.;
if shiftdec=0 then difffrad=log(dec_1999/dec_1996);
else difffrad=.;
if shiftper=0 then diffapers=log(per_1999/per_1996);
else diffapers=.;
if shiftcap=0 then diffkap=log(cap_1999/cap_1996);
else diffkap=.;

/* Beregner log-forskellen i net-of tax rate */
if 0<tau_arb_i1996<1 and 0<tau_arb_i1999<1 then diffMTR_arb_i=log((1-tau_arb_i1999)/(1-tau_arb_i1996));
if 0<tau_apers_i1996<1 and 0<tau_apers_i1999<1 then diffMTR_apers_i=log((1-tau_apers_i1999)/(1-tau_apers_i1996));
if 0<tau_kap_i1996<1 and 0<tau_kap_i1999<1 then diffMTR_kap_i=log((1-tau_kap_i1999)/(1-tau_kap_i1996));
if 0<tau_frad_i1996<1 and 0<tau_frad_i1999<1 then diffMTR_frad_i=log((1-tau_frad_i1999)/(1-tau_frad_i1996));

if 0<tau_arb_h1996<1 and 0<tau_arb_h1999<1 then diffMTR_arb_h=log((1-tau_arb_h1999)/(1-tau_arb_h1996));
if 0<tau_apers_h1996<1 and 0<tau_apers_h1999<1 then diffMTR_apers_h=log((1-tau_apers_h1999)/(1-tau_apers_h1996));
if 0<tau_kap_h1996<1 and 0<tau_kap_h1999<1 then diffMTR_kap_h=log((1-tau_kap_h1999)/(1-tau_kap_h1996));
if 0<tau_frad_h1996<1 and 0<tau_frad_h1999<1 then diffMTR_frad_h=log((1-tau_frad_h1999)/(1-tau_frad_h1996));
if 0<tau_akt_h1996<1 and 0<tau_akt_h1999<1 then diffMTR_akt_h=log((1-tau_akt_h1999)/(1-tau_akt_h1996));

if 0<c_tau_arb_i1996<1 and 0<c_tau_arb_i1999<1 then c_diffMTR_arb_i=log((1-c_tau_arb_i1999)/(1-c_tau_arb_i1996));
if 0<c_tau_apers_i1996<1 and 0<c_tau_apers_i1999<1 then c_diffMTR_apers_i=log((1-c_tau_apers_i1999)/(1-c_tau_apers_i1996));
if 0<c_tau_kap_i1996<1 and 0<c_tau_kap_i1999<1 then c_diffMTR_kap_i=log((1-c_tau_kap_i1999)/(1-c_tau_kap_i1996));
if 0<c_tau_frad_i1996<1 and 0<c_tau_frad_i1999<1 then c_diffMTR_frad_i=log((1-c_tau_frad_i1999)/(1-c_tau_frad_i1996));

if 0<c_tau_arb_h1996<1 and 0<c_tau_arb_h1999<1 then c_diffMTR_arb_h=log((1-c_tau_arb_h1999)/(1-c_tau_arb_h1996));
if 0<c_tau_apers_h1996<1 and 0<c_tau_apers_h1999<1 then c_diffMTR_apers_h=log((1-c_tau_apers_h1999)/(1-c_tau_apers_h1996));
if 0<c_tau_kap_h1996<1 and 0<c_tau_kap_h1999<1 then c_diffMTR_kap_h=log((1-c_tau_kap_h1999)/(1-c_tau_kap_h1996));
if 0<c_tau_frad_h1996<1 and 0<c_tau_frad_h1999<1 then c_diffMTR_frad_h=log((1-c_tau_frad_h1999)/(1-c_tau_frad_h1996));
if 0<c_tau_akt_h1996<1 and 0<c_tau_akt_h1999<1 then c_diffMTR_akt_h=log((1-c_tau_akt_h1999)/(1-c_tau_akt_h1996));

/* Beregner instrument for log-forskellen i net-of-tax rate */
if 0<tau_arb_i1996<1 and 0<tau_arb_i_mec1996<1 then diffMTR_arb_i_IV=log((1-tau_arb_i_mec1996)/(1-tau_arb_i1996));
if 0<tau_apers_i1996<1 and 0<tau_apers_i_mec1996<1 then diffMTR_apers_i_IV=log((1-tau_apers_i_mec1996)/(1-tau_apers_i1996));
if 0<tau_kap_i1996<1 and 0<tau_kap_i_mec1996<1 then diffMTR_kap_i_IV=log((1-tau_kap_i_mec1996)/(1-tau_kap_i1996));
if 0<tau_frad_i1996<1 and 0<tau_frad_i_mec1996<1 then diffMTR_frad_i_IV=log((1-tau_frad_i_mec1996)/(1-tau_frad_i1996));

if 0<tau_arb_h1996<1 and 0<tau_arb_h_mec1996<1 then diffMTR_arb_h_IV=log((1-tau_arb_h_mec1996)/(1-tau_arb_h1996));
if 0<tau_apers_h1996<1 and 0<tau_apers_h_mec1996<1 then diffMTR_apers_h_IV=log((1-tau_apers_h_mec1996)/(1-tau_apers_h1996));
if 0<tau_kap_h1996<1 and 0<tau_kap_h_mec1996<1 then diffMTR_kap_h_IV=log((1-tau_kap_h_mec1996)/(1-tau_kap_h1996));
if 0<tau_frad_h1996<1 and 0<tau_frad_h_mec1996<1 then diffMTR_frad_h_IV=log((1-tau_frad_h_mec1996)/(1-tau_frad_h1996));
if 0<tau_akt_h1996<1 and 0<tau_akt_h_mec1996<1 then diffMTR_akt_h_IV=log((1-tau_akt_h_mec1996)/(1-tau_akt_h1996));

if 0<c_tau_arb_i1996<1 and 0<c_tau_arb_i_mec1996<1 then c_diffMTR_arb_i_IV=log((1-c_tau_arb_i_mec1996)/(1-c_tau_arb_i1996));
if 0<c_tau_apers_i1996<1 and 0<c_tau_apers_i_mec1996<1 then c_diffMTR_apers_i_IV=log((1-c_tau_apers_i_mec1996)/(1-c_tau_apers_i1996));
if 0<c_tau_kap_i1996<1 and 0<c_tau_kap_i_mec1996<1 then c_diffMTR_kap_i_IV=log((1-c_tau_kap_i_mec1996)/(1-c_tau_kap_i1996));
if 0<c_tau_frad_i1996<1 and 0<c_tau_frad_i_mec1996<1 then c_diffMTR_frad_i_IV=log((1-c_tau_frad_i_mec1996)/(1-c_tau_frad_i1996));

if 0<c_tau_arb_h1996<1 and 0<c_tau_arb_h_mec1996<1 then c_diffMTR_arb_h_IV=log((1-c_tau_arb_h_mec1996)/(1-c_tau_arb_h1996));
if 0<c_tau_apers_h1996<1 and 0<c_tau_apers_h_mec1996<1 then c_diffMTR_apers_h_IV=log((1-c_tau_apers_h_mec1996)/(1-c_tau_apers_h1996));
if 0<c_tau_kap_h1996<1 and 0<c_tau_kap_h_mec1996<1 then c_diffMTR_kap_h_IV=log((1-c_tau_kap_h_mec1996)/(1-c_tau_kap_h1996));
if 0<c_tau_frad_h1996<1 and 0<c_tau_frad_h_mec1996<1 then c_diffMTR_frad_h_IV=log((1-c_tau_frad_h_mec1996)/(1-c_tau_frad_h1996));
if 0<c_tau_akt_h1996<1 and 0<c_tau_akt_h_mec1996<1 then c_diffMTR_akt_h_IV=log((1-c_tau_akt_h_mec1996)/(1-c_tau_akt_h1996));

/* Beregner log-forskellen i nettoindkomst */
taxable1996=ear_1996+per_1996+cap_1996-dec_1996;
taxable1999=ear_1999+per_1999+cap_1999-dec_1999;

dummytaxable=0;
if taxable1996>0 and taxable1999>0 then do;
dummytaxable=1;
difftax=log((taxable1999)/(taxable1996));
end;
broad1996=ear_1996+cap_1996;
broad1999=ear_1999+cap_1999;

dummybroad=0;
if broad1996>0 and broad1999>0 then do;
dummybroad=1;
diffbroad=log((broad1999)/(broad1996));
end;
taxable=taxable1996;
broad=broad1996;
logbroad=log(broad);
logtaxable=log(taxable);
netincome1996=ear_1996+per_1996+cap_1996-dec_1996-tax1_1996;
netincome1999=ear_1999+per_1999+cap_1999-dec_1999-tax1_1999;
c_netincome1996=c_ear_1996+c_per_1996+c_cap_1996-c_dec_1996-c_tax1_1996;
c_netincome1999=c_ear_1999+c_per_1999+c_cap_1999-c_dec_1999-c_tax1_1999;

if netincome1996>0 and netincome1999>0 then
diffinc=log((netincome1999)/(netincome1996));

if c_netincome1996>0 and c_netincome1999>0 then
c_diffinc=log((c_netincome1999)/(c_netincome1996));

/* Beregner log-forskellen i virtuel indkomst */
if virtuelindk_i_1996>0 and virtuelindk_i_1999>0 then 
diffvir_i=log(virtuelindk_i_1999/virtuelindk_i_1996);
if virtuelindk_h1_1996>0 and virtuelindk_h1_1999>0 then
diffvir_h1=log(virtuelindk_h1_1999/virtuelindk_h1_1996);
if virtuelindk_h2_1996>0 and virtuelindk_h2_1999>0 then 
diffvir_h2=log(virtuelindk_h2_1999/virtuelindk_h2_1996);

/* Beregner instrument for log-forskellen i virtuel indkomst */
if virtuelindk_i_1996>0 and virtuelindk_i_mec1996>0 then 
diffvir_i_IV=log(virtuelindk_i_mec1996/virtuelindk_i_1996);
if virtuelindk_h1_1996>0 and virtuelindk_h1_mec1996>0 then
diffvir_h1_IV=log(virtuelindk_h1_mec1996/virtuelindk_h1_1996);
if virtuelindk_h2_1996>0 and virtuelindk_h2_mec1996>0 then 
diffvir_h2_IV=log(virtuelindk_h2_mec1996/virtuelindk_h2_1996);

/* Tager log til indkomster */
if dummyear=2 then logarb=log(ear_1996);
if dummyear=3 then logarb=log((ear_1996*(-1)));

if dummyper=2 then logapers=log(per_1996);
if dummyper=3 then logapers=log((per_1996*(-1)));

if dummycap=2 then logkap=log(cap_1996);
if dummycap=3 then logkap=log((cap_1996*(-1)));

if dummydec=2 then logfrad=log(dec_1996);
if dummydec=3 then logfrad=log((dec_1996*(-1)));

/* Omdøber indkomster */
arb=ear_1996;
apers=per_1996;
kap=cap_1996;
frad=dec_1996;
tax=tax1_1996;
tau_arb_i_pre=tau_arb_i1996;
tau_arb_h_pre=tau_arb_h1996;
tau_arb_i_post=tau_arb_i1999;
tau_arb_h_post=tau_arb_h1999;
tau_arb_i_mec=tau_arb_i_mec1996;
tau_arb_h_mec=tau_arb_h_mec1996;

tau_kap_i_pre=tau_kap_i1996;
tau_kap_h_pre=tau_kap_h1996;
tau_kap_i_post=tau_kap_i1999;
tau_kap_h_post=tau_kap_h1999;
tau_kap_i_mec=tau_kap_i_mec1996;
tau_kap_h_mec=tau_kap_h_mec1996;

tau_frad_i_pre=tau_frad_i1996;
tau_frad_h_pre=tau_frad_h1996;
tau_frad_i_post=tau_frad_i1999;
tau_frad_h_post=tau_frad_h1999;
tau_frad_i_mec=tau_frad_i_mec1996;
tau_frad_h_mec=tau_frad_h_mec1996;
dummyper_income=1;
if per_income_1996>0 and per_income_1999>0 then dummyper_income=2;
if per_income_1996<0 and per_income_1999<0 then dummyper_income=3;
if dummyper_income=1 then shiftper_income=1; else shiftper_income=0;
if shiftper_income=0 then diffper_income=log(per_income_1999/per_income_1996);
else diffper_income=.;
per_income=per_income_1996;
if dummyper_income=2 then logper_income=log(per_income_1996);
if dummyper_income=3 then logper_income=log((per_income_1996*(-1)));
run;




data tax2_1997(drop=per_1997 cap_1997 dec_1997 ear_1997 c_per_1997 tax1_1997 c_tax1_1997 
                h_tax1_1997 c_cap_1997 c_dec_1997 c_ear_1997 virtuelindk_i_1997 
                virtuelindk_h1_1997 virtuelindk_h2_1997 tau_arb_i1997
                tau_apers_i1997 tau_kap_i1997 tau_frad_i1997 tau_arb_h1997 
                tau_apers_h1997 tau_kap_h1997 tau_frad_h1997 c_tau_arb_i1997 
                c_tau_apers_i1997 c_tau_kap_i1997 c_tau_frad_i1997 c_tau_arb_h1997
                c_tau_apers_h1997 c_tau_kap_h1997 c_tau_frad_h1997
                virtuelindk_i_mec1997 virtuelindk_h1_mec1997 virtuelindk_h2_mec1997 
			    virtuelindk_i_mec virtuelindk_h1_mec virtuelindk_h2_mec
                tau_arb_i_mec1997 
                tau_apers_i_mec1997 tau_kap_i_mec1997 tau_frad_i_mec1997 tau_arb_h_mec1997 
                tau_apers_h_mec1997 tau_kap_h_mec1997 tau_frad_h_mec1997 c_tau_arb_i_mec1997 
                c_tau_apers_i_mec1997 c_tau_kap_i_mec1997 c_tau_frad_i_mec1997 c_tau_arb_h_mec1997
                c_tau_apers_h_mec1997 c_tau_kap_h_mec1997 c_tau_frad_h_mec1997
                per_2000 cap_2000 dec_2000 ear_2000 c_per_2000 tax1_2000 c_tax1_2000 
                h_tax1_2000 c_cap_2000 c_dec_2000 c_ear_2000 virtuelindk_i_2000 
                virtuelindk_h1_2000 virtuelindk_h2_2000 tau_arb_i2000
                tau_apers_i2000 tau_kap_i2000 tau_frad_i2000 tau_arb_h2000 
                tau_apers_h2000 tau_kap_h2000 tau_frad_h2000 c_tau_arb_i2000 
                c_tau_apers_i2000 c_tau_kap_i2000 c_tau_frad_i2000 c_tau_arb_h2000
                c_tau_apers_h2000 c_tau_kap_h2000 c_tau_frad_h2000
                arbindk apersindk kapindk lignfrad netincome1997 netincome2000
                c_netincome1997 c_netincome2000
tau_akt_h1997 c_tau_akt_h1997 tau_akt_h_mec1997 c_tau_akt_h_mec1997 tau_akt_h2000 c_tau_akt_h2000);
set tax1997;

/* Tager højde for at indkomster kan skifte fortegn */
dummycap=1;
if cap_1997>0 and cap_2000>0 then dummycap=2;
if cap_1997<0 and cap_2000<0 then dummycap=3;
if dummycap=1 then shiftcap=1; else shiftcap=0;
dummyper=1;
if per_1997>0 and per_2000>0 then dummyper=2;
if per_1997<0 and per_2000<0 then dummyper=3;
if dummyper=1 then shiftper=1; else shiftper=0;
dummyear=1;
if ear_1997>0 and ear_2000>0 then dummyear=2;
if ear_1997<0 and ear_2000<0 then dummyear=3;
if dummyear=1 then shiftear=1; else shiftear=0;
dummydec=1;
if dec_1997>0 and dec_2000>0 then dummydec=2;
if dec_1997<0 and dec_2000<0 then dummydec=3;
if dummydec=1 then shiftdec=1; else shiftdec=0;

/* Beregner log-forskellen i indkomster */
if shiftear=0 then diffarb=log(ear_2000/ear_1997);
else diffarb=.;
if shiftdec=0 then difffrad=log(dec_2000/dec_1997);
else difffrad=.;
if shiftper=0 then diffapers=log(per_2000/per_1997);
else diffapers=.;
if shiftcap=0 then diffkap=log(cap_2000/cap_1997);
else diffkap=.;

/* Beregner log-forskellen i net-of tax rate */
if 0<tau_arb_i1997<1 and 0<tau_arb_i2000<1 then diffMTR_arb_i=log((1-tau_arb_i2000)/(1-tau_arb_i1997));
if 0<tau_apers_i1997<1 and 0<tau_apers_i2000<1 then diffMTR_apers_i=log((1-tau_apers_i2000)/(1-tau_apers_i1997));
if 0<tau_kap_i1997<1 and 0<tau_kap_i2000<1 then diffMTR_kap_i=log((1-tau_kap_i2000)/(1-tau_kap_i1997));
if 0<tau_frad_i1997<1 and 0<tau_frad_i2000<1 then diffMTR_frad_i=log((1-tau_frad_i2000)/(1-tau_frad_i1997));

if 0<tau_arb_h1997<1 and 0<tau_arb_h2000<1 then diffMTR_arb_h=log((1-tau_arb_h2000)/(1-tau_arb_h1997));
if 0<tau_apers_h1997<1 and 0<tau_apers_h2000<1 then diffMTR_apers_h=log((1-tau_apers_h2000)/(1-tau_apers_h1997));
if 0<tau_kap_h1997<1 and 0<tau_kap_h2000<1 then diffMTR_kap_h=log((1-tau_kap_h2000)/(1-tau_kap_h1997));
if 0<tau_frad_h1997<1 and 0<tau_frad_h2000<1 then diffMTR_frad_h=log((1-tau_frad_h2000)/(1-tau_frad_h1997));
if 0<tau_akt_h1997<1 and 0<tau_akt_h2000<1 then diffMTR_akt_h=log((1-tau_akt_h2000)/(1-tau_akt_h1997));

if 0<c_tau_arb_i1997<1 and 0<c_tau_arb_i2000<1 then c_diffMTR_arb_i=log((1-c_tau_arb_i2000)/(1-c_tau_arb_i1997));
if 0<c_tau_apers_i1997<1 and 0<c_tau_apers_i2000<1 then c_diffMTR_apers_i=log((1-c_tau_apers_i2000)/(1-c_tau_apers_i1997));
if 0<c_tau_kap_i1997<1 and 0<c_tau_kap_i2000<1 then c_diffMTR_kap_i=log((1-c_tau_kap_i2000)/(1-c_tau_kap_i1997));
if 0<c_tau_frad_i1997<1 and 0<c_tau_frad_i2000<1 then c_diffMTR_frad_i=log((1-c_tau_frad_i2000)/(1-c_tau_frad_i1997));

if 0<c_tau_arb_h1997<1 and 0<c_tau_arb_h2000<1 then c_diffMTR_arb_h=log((1-c_tau_arb_h2000)/(1-c_tau_arb_h1997));
if 0<c_tau_apers_h1997<1 and 0<c_tau_apers_h2000<1 then c_diffMTR_apers_h=log((1-c_tau_apers_h2000)/(1-c_tau_apers_h1997));
if 0<c_tau_kap_h1997<1 and 0<c_tau_kap_h2000<1 then c_diffMTR_kap_h=log((1-c_tau_kap_h2000)/(1-c_tau_kap_h1997));
if 0<c_tau_frad_h1997<1 and 0<c_tau_frad_h2000<1 then c_diffMTR_frad_h=log((1-c_tau_frad_h2000)/(1-c_tau_frad_h1997));
if 0<c_tau_akt_h1997<1 and 0<c_tau_akt_h2000<1 then c_diffMTR_akt_h=log((1-c_tau_akt_h2000)/(1-c_tau_akt_h1997));

/* Beregner instrument for log-forskellen i net-of-tax rate */
if 0<tau_arb_i1997<1 and 0<tau_arb_i_mec1997<1 then diffMTR_arb_i_IV=log((1-tau_arb_i_mec1997)/(1-tau_arb_i1997));
if 0<tau_apers_i1997<1 and 0<tau_apers_i_mec1997<1 then diffMTR_apers_i_IV=log((1-tau_apers_i_mec1997)/(1-tau_apers_i1997));
if 0<tau_kap_i1997<1 and 0<tau_kap_i_mec1997<1 then diffMTR_kap_i_IV=log((1-tau_kap_i_mec1997)/(1-tau_kap_i1997));
if 0<tau_frad_i1997<1 and 0<tau_frad_i_mec1997<1 then diffMTR_frad_i_IV=log((1-tau_frad_i_mec1997)/(1-tau_frad_i1997));

if 0<tau_arb_h1997<1 and 0<tau_arb_h_mec1997<1 then diffMTR_arb_h_IV=log((1-tau_arb_h_mec1997)/(1-tau_arb_h1997));
if 0<tau_apers_h1997<1 and 0<tau_apers_h_mec1997<1 then diffMTR_apers_h_IV=log((1-tau_apers_h_mec1997)/(1-tau_apers_h1997));
if 0<tau_kap_h1997<1 and 0<tau_kap_h_mec1997<1 then diffMTR_kap_h_IV=log((1-tau_kap_h_mec1997)/(1-tau_kap_h1997));
if 0<tau_frad_h1997<1 and 0<tau_frad_h_mec1997<1 then diffMTR_frad_h_IV=log((1-tau_frad_h_mec1997)/(1-tau_frad_h1997));
if 0<tau_akt_h1997<1 and 0<tau_akt_h_mec1997<1 then diffMTR_akt_h_IV=log((1-tau_akt_h_mec1997)/(1-tau_akt_h1997));

if 0<c_tau_arb_i1997<1 and 0<c_tau_arb_i_mec1997<1 then c_diffMTR_arb_i_IV=log((1-c_tau_arb_i_mec1997)/(1-c_tau_arb_i1997));
if 0<c_tau_apers_i1997<1 and 0<c_tau_apers_i_mec1997<1 then c_diffMTR_apers_i_IV=log((1-c_tau_apers_i_mec1997)/(1-c_tau_apers_i1997));
if 0<c_tau_kap_i1997<1 and 0<c_tau_kap_i_mec1997<1 then c_diffMTR_kap_i_IV=log((1-c_tau_kap_i_mec1997)/(1-c_tau_kap_i1997));
if 0<c_tau_frad_i1997<1 and 0<c_tau_frad_i_mec1997<1 then c_diffMTR_frad_i_IV=log((1-c_tau_frad_i_mec1997)/(1-c_tau_frad_i1997));

if 0<c_tau_arb_h1997<1 and 0<c_tau_arb_h_mec1997<1 then c_diffMTR_arb_h_IV=log((1-c_tau_arb_h_mec1997)/(1-c_tau_arb_h1997));
if 0<c_tau_apers_h1997<1 and 0<c_tau_apers_h_mec1997<1 then c_diffMTR_apers_h_IV=log((1-c_tau_apers_h_mec1997)/(1-c_tau_apers_h1997));
if 0<c_tau_kap_h1997<1 and 0<c_tau_kap_h_mec1997<1 then c_diffMTR_kap_h_IV=log((1-c_tau_kap_h_mec1997)/(1-c_tau_kap_h1997));
if 0<c_tau_frad_h1997<1 and 0<c_tau_frad_h_mec1997<1 then c_diffMTR_frad_h_IV=log((1-c_tau_frad_h_mec1997)/(1-c_tau_frad_h1997));
if 0<c_tau_akt_h1997<1 and 0<c_tau_akt_h_mec1997<1 then c_diffMTR_akt_h_IV=log((1-c_tau_akt_h_mec1997)/(1-c_tau_akt_h1997));


/* Beregner log-forskellen i nettoindkomst */
taxable1997=ear_1997+per_1997+cap_1997-dec_1997;
taxable2000=ear_2000+per_2000+cap_2000-dec_2000;

dummytaxable=0;
if taxable1997>0 and taxable2000>0 then do;
dummytaxable=1;
difftax=log((taxable2000)/(taxable1997));
end;
broad1997=ear_1997+cap_1997;
broad2000=ear_2000+cap_2000;

dummybroad=0;
if broad1997>0 and broad2000>0 then do;
dummybroad=1;
diffbroad=log((broad2000)/(broad1997));
end;
taxable=taxable1997;
broad=broad1997;
logbroad=log(broad);
logtaxable=log(taxable);
netincome1997=ear_1997+per_1997+cap_1997-dec_1997-tax1_1997;
netincome2000=ear_2000+per_2000+cap_2000-dec_2000-tax1_2000;
c_netincome1997=c_ear_1997+c_per_1997+c_cap_1997-c_dec_1997-c_tax1_1997;
c_netincome2000=c_ear_2000+c_per_2000+c_cap_2000-c_dec_2000-c_tax1_2000;

if netincome1997>0 and netincome2000>0 then
diffinc=log((netincome2000)/(netincome1997));

if c_netincome1997>0 and c_netincome2000>0 then
c_diffinc=log((c_netincome2000)/(c_netincome1997));

/* Beregner log-forskellen i virtuel indkomst */
if virtuelindk_i_1997>0 and virtuelindk_i_2000>0 then 
diffvir_i=log(virtuelindk_i_2000/virtuelindk_i_1997);
if virtuelindk_h1_1997>0 and virtuelindk_h1_2000>0 then
diffvir_h1=log(virtuelindk_h1_2000/virtuelindk_h1_1997);
if virtuelindk_h2_1997>0 and virtuelindk_h2_2000>0 then 
diffvir_h2=log(virtuelindk_h2_2000/virtuelindk_h2_1997);

/* Beregner instrument for log-forskellen i virtuel indkomst */
if virtuelindk_i_1997>0 and virtuelindk_i_mec1997>0 then 
diffvir_i_IV=log(virtuelindk_i_mec1997/virtuelindk_i_1997);
if virtuelindk_h1_1997>0 and virtuelindk_h1_mec1997>0 then
diffvir_h1_IV=log(virtuelindk_h1_mec1997/virtuelindk_h1_1997);
if virtuelindk_h2_1997>0 and virtuelindk_h2_mec1997>0 then 
diffvir_h2_IV=log(virtuelindk_h2_mec1997/virtuelindk_h2_1997);

/* Tager log til indkomster */
if dummyear=2 then logarb=log(ear_1997);
if dummyear=3 then logarb=log((ear_1997*(-1)));

if dummyper=2 then logapers=log(per_1997);
if dummyper=3 then logapers=log((per_1997*(-1)));

if dummycap=2 then logkap=log(cap_1997);
if dummycap=3 then logkap=log((cap_1997*(-1)));

if dummydec=2 then logfrad=log(dec_1997);
if dummydec=3 then logfrad=log((dec_1997*(-1)));

/* Omdøber indkomster */
arb=ear_1997;
apers=per_1997;
kap=cap_1997;
frad=dec_1997;
tax=tax1_1997;
tau_arb_i_pre=tau_arb_i1997;
tau_arb_h_pre=tau_arb_h1997;
tau_arb_i_post=tau_arb_i2000;
tau_arb_h_post=tau_arb_h2000;
tau_arb_i_mec=tau_arb_i_mec1997;
tau_arb_h_mec=tau_arb_h_mec1997;

tau_kap_i_pre=tau_kap_i1997;
tau_kap_h_pre=tau_kap_h1997;
tau_kap_i_post=tau_kap_i2000;
tau_kap_h_post=tau_kap_h2000;
tau_kap_i_mec=tau_kap_i_mec1997;
tau_kap_h_mec=tau_kap_h_mec1997;

tau_frad_i_pre=tau_frad_i1997;
tau_frad_h_pre=tau_frad_h1997;
tau_frad_i_post=tau_frad_i2000;
tau_frad_h_post=tau_frad_h2000;
tau_frad_i_mec=tau_frad_i_mec1997;
tau_frad_h_mec=tau_frad_h_mec1997;
dummyper_income=1;
if per_income_1997>0 and per_income_2000>0 then dummyper_income=2;
if per_income_1997<0 and per_income_2000<0 then dummyper_income=3;
if dummyper_income=1 then shiftper_income=1; else shiftper_income=0;
if shiftper_income=0 then diffper_income=log(per_income_2000/per_income_1997);
else diffper_income=.;
per_income=per_income_1997;
if dummyper_income=2 then logper_income=log(per_income_1997);
if dummyper_income=3 then logper_income=log((per_income_1997*(-1)));
run;




data tax2_1998(drop=per_1998 cap_1998 dec_1998 ear_1998 c_per_1998 tax1_1998 c_tax1_1998 
                h_tax1_1998 c_cap_1998 c_dec_1998 c_ear_1998 virtuelindk_i_1998 
                virtuelindk_h1_1998 virtuelindk_h2_1998 tau_arb_i1998
                tau_apers_i1998 tau_kap_i1998 tau_frad_i1998 tau_arb_h1998 
                tau_apers_h1998 tau_kap_h1998 tau_frad_h1998 c_tau_arb_i1998 
                c_tau_apers_i1998 c_tau_kap_i1998 c_tau_frad_i1998 c_tau_arb_h1998
                c_tau_apers_h1998 c_tau_kap_h1998 c_tau_frad_h1998
                virtuelindk_i_mec1998 virtuelindk_h1_mec1998 virtuelindk_h2_mec1998 
			    virtuelindk_i_mec virtuelindk_h1_mec virtuelindk_h2_mec
                tau_arb_i_mec1998
                tau_apers_i_mec1998 tau_kap_i_mec1998 tau_frad_i_mec1998 tau_arb_h_mec1998 
                tau_apers_h_mec1998 tau_kap_h_mec1998 tau_frad_h_mec1998 c_tau_arb_i_mec1998 
                c_tau_apers_i_mec1998 c_tau_kap_i_mec1998 c_tau_frad_i_mec1998 c_tau_arb_h_mec1998
                c_tau_apers_h_mec1998 c_tau_kap_h_mec1998 c_tau_frad_h_mec1998
                per_2001 cap_2001 dec_2001 ear_2001 c_per_2001 tax1_2001 c_tax1_2001 
                h_tax1_2001 c_cap_2001 c_dec_2001 c_ear_2001 virtuelindk_i_2001 
                virtuelindk_h1_2001 virtuelindk_h2_2001 tau_arb_i2001
                tau_apers_i2001 tau_kap_i2001 tau_frad_i2001 tau_arb_h2001 
                tau_apers_h2001 tau_kap_h2001 tau_frad_h2001 c_tau_arb_i2001 
                c_tau_apers_i2001 c_tau_kap_i2001 c_tau_frad_i2001 c_tau_arb_h2001
                c_tau_apers_h2001 c_tau_kap_h2001 c_tau_frad_h2001
                arbindk apersindk kapindk lignfrad netincome1998 netincome2001
                c_netincome1998 c_netincome2001
tau_akt_h1998 c_tau_akt_h1998 tau_akt_h_mec1998 c_tau_akt_h_mec1998 tau_akt_h2001 c_tau_akt_h2001);
set tax1998;

/* Tager højde for at indkomster kan skifte fortegn */
dummycap=1;
if cap_1998>0 and cap_2001>0 then dummycap=2;
if cap_1998<0 and cap_2001<0 then dummycap=3;
if dummycap=1 then shiftcap=1; else shiftcap=0;
dummyper=1;
if per_1998>0 and per_2001>0 then dummyper=2;
if per_1998<0 and per_2001<0 then dummyper=3;
if dummyper=1 then shiftper=1; else shiftper=0;
dummyear=1;
if ear_1998>0 and ear_2001>0 then dummyear=2;
if ear_1998<0 and ear_2001<0 then dummyear=3;
if dummyear=1 then shiftear=1; else shiftear=0;
dummydec=1;
if dec_1998>0 and dec_2001>0 then dummydec=2;
if dec_1998<0 and dec_2001<0 then dummydec=3;
if dummydec=1 then shiftdec=1; else shiftdec=0;

/* Beregner log-forskellen i indkomster */
if shiftear=0 then diffarb=log(ear_2001/ear_1998);
else diffarb=.;
if shiftdec=0 then difffrad=log(dec_2001/dec_1998);
else difffrad=.;
if shiftper=0 then diffapers=log(per_2001/per_1998);
else diffapers=.;
if shiftcap=0 then diffkap=log(cap_2001/cap_1998);
else diffkap=.;

/* Beregner log-forskellen i net-of tax rate */
if 0<tau_arb_i1998<1 and 0<tau_arb_i2001<1 then diffMTR_arb_i=log((1-tau_arb_i2001)/(1-tau_arb_i1998));
if 0<tau_apers_i1998<1 and 0<tau_apers_i2001<1 then diffMTR_apers_i=log((1-tau_apers_i2001)/(1-tau_apers_i1998));
if 0<tau_kap_i1998<1 and 0<tau_kap_i2001<1 then diffMTR_kap_i=log((1-tau_kap_i2001)/(1-tau_kap_i1998));
if 0<tau_frad_i1998<1 and 0<tau_frad_i2001<1 then diffMTR_frad_i=log((1-tau_frad_i2001)/(1-tau_frad_i1998));

if 0<tau_arb_h1998<1 and 0<tau_arb_h2001<1 then diffMTR_arb_h=log((1-tau_arb_h2001)/(1-tau_arb_h1998));
if 0<tau_apers_h1998<1 and 0<tau_apers_h2001<1 then diffMTR_apers_h=log((1-tau_apers_h2001)/(1-tau_apers_h1998));
if 0<tau_kap_h1998<1 and 0<tau_kap_h2001<1 then diffMTR_kap_h=log((1-tau_kap_h2001)/(1-tau_kap_h1998));
if 0<tau_frad_h1998<1 and 0<tau_frad_h2001<1 then diffMTR_frad_h=log((1-tau_frad_h2001)/(1-tau_frad_h1998));
if 0<tau_akt_h1998<1 and 0<tau_akt_h2001<1 then diffMTR_akt_h=log((1-tau_akt_h2001)/(1-tau_akt_h1998));

if 0<c_tau_arb_i1998<1 and 0<c_tau_arb_i2001<1 then c_diffMTR_arb_i=log((1-c_tau_arb_i2001)/(1-c_tau_arb_i1998));
if 0<c_tau_apers_i1998<1 and 0<c_tau_apers_i2001<1 then c_diffMTR_apers_i=log((1-c_tau_apers_i2001)/(1-c_tau_apers_i1998));
if 0<c_tau_kap_i1998<1 and 0<c_tau_kap_i2001<1 then c_diffMTR_kap_i=log((1-c_tau_kap_i2001)/(1-c_tau_kap_i1998));
if 0<c_tau_frad_i1998<1 and 0<c_tau_frad_i2001<1 then c_diffMTR_frad_i=log((1-c_tau_frad_i2001)/(1-c_tau_frad_i1998));

if 0<c_tau_arb_h1998<1 and 0<c_tau_arb_h2001<1 then c_diffMTR_arb_h=log((1-c_tau_arb_h2001)/(1-c_tau_arb_h1998));
if 0<c_tau_apers_h1998<1 and 0<c_tau_apers_h2001<1 then c_diffMTR_apers_h=log((1-c_tau_apers_h2001)/(1-c_tau_apers_h1998));
if 0<c_tau_kap_h1998<1 and 0<c_tau_kap_h2001<1 then c_diffMTR_kap_h=log((1-c_tau_kap_h2001)/(1-c_tau_kap_h1998));
if 0<c_tau_frad_h1998<1 and 0<c_tau_frad_h2001<1 then c_diffMTR_frad_h=log((1-c_tau_frad_h2001)/(1-c_tau_frad_h1998));
if 0<c_tau_akt_h1998<1 and 0<c_tau_akt_h2001<1 then c_diffMTR_akt_h=log((1-c_tau_akt_h2001)/(1-c_tau_akt_h1998));


/* Beregner instrument for log-forskellen i net-of-tax rate */
if 0<tau_arb_i1998<1 and 0<tau_arb_i_mec1998<1 then diffMTR_arb_i_IV=log((1-tau_arb_i_mec1998)/(1-tau_arb_i1998));
if 0<tau_apers_i1998<1 and 0<tau_apers_i_mec1998<1 then diffMTR_apers_i_IV=log((1-tau_apers_i_mec1998)/(1-tau_apers_i1998));
if 0<tau_kap_i1998<1 and 0<tau_kap_i_mec1998<1 then diffMTR_kap_i_IV=log((1-tau_kap_i_mec1998)/(1-tau_kap_i1998));
if 0<tau_frad_i1998<1 and 0<tau_frad_i_mec1998<1 then diffMTR_frad_i_IV=log((1-tau_frad_i_mec1998)/(1-tau_frad_i1998));

if 0<tau_arb_h1998<1 and 0<tau_arb_h_mec1998<1 then diffMTR_arb_h_IV=log((1-tau_arb_h_mec1998)/(1-tau_arb_h1998));
if 0<tau_apers_h1998<1 and 0<tau_apers_h_mec1998<1 then diffMTR_apers_h_IV=log((1-tau_apers_h_mec1998)/(1-tau_apers_h1998));
if 0<tau_kap_h1998<1 and 0<tau_kap_h_mec1998<1 then diffMTR_kap_h_IV=log((1-tau_kap_h_mec1998)/(1-tau_kap_h1998));
if 0<tau_frad_h1998<1 and 0<tau_frad_h_mec1998<1 then diffMTR_frad_h_IV=log((1-tau_frad_h_mec1998)/(1-tau_frad_h1998));
if 0<tau_akt_h1998<1 and 0<tau_akt_h_mec1998<1 then diffMTR_akt_h_IV=log((1-tau_akt_h_mec1998)/(1-tau_akt_h1998));

if 0<c_tau_arb_i1998<1 and 0<c_tau_arb_i_mec1998<1 then c_diffMTR_arb_i_IV=log((1-c_tau_arb_i_mec1998)/(1-c_tau_arb_i1998));
if 0<c_tau_apers_i1998<1 and 0<c_tau_apers_i_mec1998<1 then c_diffMTR_apers_i_IV=log((1-c_tau_apers_i_mec1998)/(1-c_tau_apers_i1998));
if 0<c_tau_kap_i1998<1 and 0<c_tau_kap_i_mec1998<1 then c_diffMTR_kap_i_IV=log((1-c_tau_kap_i_mec1998)/(1-c_tau_kap_i1998));
if 0<c_tau_frad_i1998<1 and 0<c_tau_frad_i_mec1998<1 then c_diffMTR_frad_i_IV=log((1-c_tau_frad_i_mec1998)/(1-c_tau_frad_i1998));

if 0<c_tau_arb_h1998<1 and 0<c_tau_arb_h_mec1998<1 then c_diffMTR_arb_h_IV=log((1-c_tau_arb_h_mec1998)/(1-c_tau_arb_h1998));
if 0<c_tau_apers_h1998<1 and 0<c_tau_apers_h_mec1998<1 then c_diffMTR_apers_h_IV=log((1-c_tau_apers_h_mec1998)/(1-c_tau_apers_h1998));
if 0<c_tau_kap_h1998<1 and 0<c_tau_kap_h_mec1998<1 then c_diffMTR_kap_h_IV=log((1-c_tau_kap_h_mec1998)/(1-c_tau_kap_h1998));
if 0<c_tau_frad_h1998<1 and 0<c_tau_frad_h_mec1998<1 then c_diffMTR_frad_h_IV=log((1-c_tau_frad_h_mec1998)/(1-c_tau_frad_h1998));
if 0<c_tau_akt_h1998<1 and 0<c_tau_akt_h_mec1998<1 then c_diffMTR_akt_h_IV=log((1-c_tau_akt_h_mec1998)/(1-c_tau_akt_h1998));

/* Beregner log-forskellen i nettoindkomst */
taxable1998=ear_1998+per_1998+cap_1998-dec_1998;
taxable2001=ear_2001+per_2001+cap_2001-dec_2001;

dummytaxable=0;
if taxable1998>0 and taxable2001>0 then do;
dummytaxable=1;
difftax=log((taxable2001)/(taxable1998));
end;
broad1998=ear_1998+cap_1998;
broad2001=ear_2001+cap_2001;

dummybroad=0;
if broad1998>0 and broad2001>0 then do;
dummybroad=1;
diffbroad=log((broad2001)/(broad1998));
end;
taxable=taxable1998;
broad=broad1998;
logbroad=log(broad);
logtaxable=log(taxable);
netincome1998=ear_1998+per_1998+cap_1998-dec_1998-tax1_1998;
netincome2001=ear_2001+per_2001+cap_2001-dec_2001-tax1_2001;
c_netincome1998=c_ear_1998+c_per_1998+c_cap_1998-c_dec_1998-c_tax1_1998;
c_netincome2001=c_ear_2001+c_per_2001+c_cap_2001-c_dec_2001-c_tax1_2001;

if netincome1998>0 and netincome2001>0 then
diffinc=log((netincome2001)/(netincome1998));

if c_netincome1998>0 and c_netincome2001>0 then
c_diffinc=log((c_netincome2001)/(c_netincome1998));

/* Beregner log-forskellen i virtuel indkomst */
if virtuelindk_i_1998>0 and virtuelindk_i_2001>0 then 
diffvir_i=log(virtuelindk_i_2001/virtuelindk_i_1998);
if virtuelindk_h1_1998>0 and virtuelindk_h1_2001>0 then
diffvir_h1=log(virtuelindk_h1_2001/virtuelindk_h1_1998);
if virtuelindk_h2_1998>0 and virtuelindk_h2_2001>0 then 
diffvir_h2=log(virtuelindk_h2_2001/virtuelindk_h2_1998);

/* Beregner instrument for log-forskellen i virtuel indkomst */
if virtuelindk_i_1998>0 and virtuelindk_i_mec1998>0 then 
diffvir_i_IV=log(virtuelindk_i_mec1998/virtuelindk_i_1998);
if virtuelindk_h1_1998>0 and virtuelindk_h1_mec1998>0 then
diffvir_h1_IV=log(virtuelindk_h1_mec1998/virtuelindk_h1_1998);
if virtuelindk_h2_1998>0 and virtuelindk_h2_mec1998>0 then 
diffvir_h2_IV=log(virtuelindk_h2_mec1998/virtuelindk_h2_1998);

/* Tager log til indkomster */
if dummyear=2 then logarb=log(ear_1998);
if dummyear=3 then logarb=log((ear_1998*(-1)));

if dummyper=2 then logapers=log(per_1998);
if dummyper=3 then logapers=log((per_1998*(-1)));

if dummycap=2 then logkap=log(cap_1998);
if dummycap=3 then logkap=log((cap_1998*(-1)));

if dummydec=2 then logfrad=log(dec_1998);
if dummydec=3 then logfrad=log((dec_1998*(-1)));

/* Omdøber indkomster */
arb=ear_1998;
apers=per_1998;
kap=cap_1998;
frad=dec_1998;
tax=tax1_1998;
tau_arb_i_pre=tau_arb_i1998;
tau_arb_h_pre=tau_arb_h1998;
tau_arb_i_post=tau_arb_i2001;
tau_arb_h_post=tau_arb_h2001;
tau_arb_i_mec=tau_arb_i_mec1998;
tau_arb_h_mec=tau_arb_h_mec1998;

tau_kap_i_pre=tau_kap_i1998;
tau_kap_h_pre=tau_kap_h1998;
tau_kap_i_post=tau_kap_i2001;
tau_kap_h_post=tau_kap_h2001;
tau_kap_i_mec=tau_kap_i_mec1998;
tau_kap_h_mec=tau_kap_h_mec1998;

tau_frad_i_pre=tau_frad_i1998;
tau_frad_h_pre=tau_frad_h1998;
tau_frad_i_post=tau_frad_i2001;
tau_frad_h_post=tau_frad_h2001;
tau_frad_i_mec=tau_frad_i_mec1998;
tau_frad_h_mec=tau_frad_h_mec1998;
dummyper_income=1;
if per_income_1998>0 and per_income_2001>0 then dummyper_income=2;
if per_income_1998<0 and per_income_2001<0 then dummyper_income=3;
if dummyper_income=1 then shiftper_income=1; else shiftper_income=0;
if shiftper_income=0 then diffper_income=log(per_income_2001/per_income_1998);
else diffper_income=.;
per_income=per_income_1998;
if dummyper_income=2 then logper_income=log(per_income_1998);
if dummyper_income=3 then logper_income=log((per_income_1998*(-1)));
run;




data tax2_1999(drop=per_1999 cap_1999 dec_1999 ear_1999 c_per_1999 tax1_1999 c_tax1_1999 
                h_tax1_1999 c_cap_1999 c_dec_1999 c_ear_1999 virtuelindk_i_1999 
                virtuelindk_h1_1999 virtuelindk_h2_1999 tau_arb_i1999
                tau_apers_i1999 tau_kap_i1999 tau_frad_i1999 tau_arb_h1999 
                tau_apers_h1999 tau_kap_h1999 tau_frad_h1999 c_tau_arb_i1999 
                c_tau_apers_i1999 c_tau_kap_i1999 c_tau_frad_i1999 c_tau_arb_h1999
                c_tau_apers_h1999 c_tau_kap_h1999 c_tau_frad_h1999
                virtuelindk_i_mec1999 virtuelindk_h1_mec1999 virtuelindk_h2_mec1999 
			    virtuelindk_i_mec virtuelindk_h1_mec virtuelindk_h2_mec
                tau_arb_i_mec1999 
                tau_apers_i_mec1999 tau_kap_i_mec1999 tau_frad_i_mec1999 tau_arb_h_mec1999 
                tau_apers_h_mec1999 tau_kap_h_mec1999 tau_frad_h_mec1999 c_tau_arb_i_mec1999 
                c_tau_apers_i_mec1999 c_tau_kap_i_mec1999 c_tau_frad_i_mec1999 c_tau_arb_h_mec1999
                c_tau_apers_h_mec1999 c_tau_kap_h_mec1999 c_tau_frad_h_mec1999
                per_2002 cap_2002 dec_2002 ear_2002 c_per_2002 tax1_2002 c_tax1_2002 
                h_tax1_2002 c_cap_2002 c_dec_2002 c_ear_2002 virtuelindk_i_2002 
                virtuelindk_h1_2002 virtuelindk_h2_2002 tau_arb_i2002
                tau_apers_i2002 tau_kap_i2002 tau_frad_i2002 tau_arb_h2002 
                tau_apers_h2002 tau_kap_h2002 tau_frad_h2002 c_tau_arb_i2002 
                c_tau_apers_i2002 c_tau_kap_i2002 c_tau_frad_i2002 c_tau_arb_h2002
                c_tau_apers_h2002 c_tau_kap_h2002 c_tau_frad_h2002
                arbindk apersindk kapindk lignfrad netincome1999 netincome2002
                c_netincome1999 c_netincome2002
tau_akt_h1999 c_tau_akt_h1999 tau_akt_h_mec1999 c_tau_akt_h_mec1999 tau_akt_h2002 c_tau_akt_h2002);
set tax1999;

/* Tager højde for at indkomster kan skifte fortegn */
dummycap=1;
if cap_1999>0 and cap_2002>0 then dummycap=2;
if cap_1999<0 and cap_2002<0 then dummycap=3;
if dummycap=1 then shiftcap=1; else shiftcap=0;
dummyper=1;
if per_1999>0 and per_2002>0 then dummyper=2;
if per_1999<0 and per_2002<0 then dummyper=3;
if dummyper=1 then shiftper=1; else shiftper=0;
dummyear=1;
if ear_1999>0 and ear_2002>0 then dummyear=2;
if ear_1999<0 and ear_2002<0 then dummyear=3;
if dummyear=1 then shiftear=1; else shiftear=0;
dummydec=1;
if dec_1999>0 and dec_2002>0 then dummydec=2;
if dec_1999<0 and dec_2002<0 then dummydec=3;
if dummydec=1 then shiftdec=1; else shiftdec=0;

/* Beregner log-forskellen i indkomster */
if shiftear=0 then diffarb=log(ear_2002/ear_1999);
else diffarb=.;
if shiftdec=0 then difffrad=log(dec_2002/dec_1999);
else difffrad=.;
if shiftper=0 then diffapers=log(per_2002/per_1999);
else diffapers=.;
if shiftcap=0 then diffkap=log(cap_2002/cap_1999);
else diffkap=.;

/* Beregner log-forskellen i net-of tax rate */
if 0<tau_arb_i1999<1 and 0<tau_arb_i2002<1 then diffMTR_arb_i=log((1-tau_arb_i2002)/(1-tau_arb_i1999));
if 0<tau_apers_i1999<1 and 0<tau_apers_i2002<1 then diffMTR_apers_i=log((1-tau_apers_i2002)/(1-tau_apers_i1999));
if 0<tau_kap_i1999<1 and 0<tau_kap_i2002<1 then diffMTR_kap_i=log((1-tau_kap_i2002)/(1-tau_kap_i1999));
if 0<tau_frad_i1999<1 and 0<tau_frad_i2002<1 then diffMTR_frad_i=log((1-tau_frad_i2002)/(1-tau_frad_i1999));

if 0<tau_arb_h1999<1 and 0<tau_arb_h2002<1 then diffMTR_arb_h=log((1-tau_arb_h2002)/(1-tau_arb_h1999));
if 0<tau_apers_h1999<1 and 0<tau_apers_h2002<1 then diffMTR_apers_h=log((1-tau_apers_h2002)/(1-tau_apers_h1999));
if 0<tau_kap_h1999<1 and 0<tau_kap_h2002<1 then diffMTR_kap_h=log((1-tau_kap_h2002)/(1-tau_kap_h1999));
if 0<tau_frad_h1999<1 and 0<tau_frad_h2002<1 then diffMTR_frad_h=log((1-tau_frad_h2002)/(1-tau_frad_h1999));
if 0<tau_akt_h1999<1 and 0<tau_akt_h2002<1 then diffMTR_akt_h=log((1-tau_akt_h2002)/(1-tau_akt_h1999));

if 0<c_tau_arb_i1999<1 and 0<c_tau_arb_i2002<1 then c_diffMTR_arb_i=log((1-c_tau_arb_i2002)/(1-c_tau_arb_i1999));
if 0<c_tau_apers_i1999<1 and 0<c_tau_apers_i2002<1 then c_diffMTR_apers_i=log((1-c_tau_apers_i2002)/(1-c_tau_apers_i1999));
if 0<c_tau_kap_i1999<1 and 0<c_tau_kap_i2002<1 then c_diffMTR_kap_i=log((1-c_tau_kap_i2002)/(1-c_tau_kap_i1999));
if 0<c_tau_frad_i1999<1 and 0<c_tau_frad_i2002<1 then c_diffMTR_frad_i=log((1-c_tau_frad_i2002)/(1-c_tau_frad_i1999));

if 0<c_tau_arb_h1999<1 and 0<c_tau_arb_h2002<1 then c_diffMTR_arb_h=log((1-c_tau_arb_h2002)/(1-c_tau_arb_h1999));
if 0<c_tau_apers_h1999<1 and 0<c_tau_apers_h2002<1 then c_diffMTR_apers_h=log((1-c_tau_apers_h2002)/(1-c_tau_apers_h1999));
if 0<c_tau_kap_h1999<1 and 0<c_tau_kap_h2002<1 then c_diffMTR_kap_h=log((1-c_tau_kap_h2002)/(1-c_tau_kap_h1999));
if 0<c_tau_frad_h1999<1 and 0<c_tau_frad_h2002<1 then c_diffMTR_frad_h=log((1-c_tau_frad_h2002)/(1-c_tau_frad_h1999));
if 0<c_tau_akt_h1999<1 and 0<c_tau_akt_h2002<1 then c_diffMTR_akt_h=log((1-c_tau_akt_h2002)/(1-c_tau_akt_h1999));

/* Beregner instrument for log-forskellen i net-of-tax rate */
if 0<tau_arb_i1999<1 and 0<tau_arb_i_mec1999<1 then diffMTR_arb_i_IV=log((1-tau_arb_i_mec1999)/(1-tau_arb_i1999));
if 0<tau_apers_i1999<1 and 0<tau_apers_i_mec1999<1 then diffMTR_apers_i_IV=log((1-tau_apers_i_mec1999)/(1-tau_apers_i1999));
if 0<tau_kap_i1999<1 and 0<tau_kap_i_mec1999<1 then diffMTR_kap_i_IV=log((1-tau_kap_i_mec1999)/(1-tau_kap_i1999));
if 0<tau_frad_i1999<1 and 0<tau_frad_i_mec1999<1 then diffMTR_frad_i_IV=log((1-tau_frad_i_mec1999)/(1-tau_frad_i1999));

if 0<tau_arb_h1999<1 and 0<tau_arb_h_mec1999<1 then diffMTR_arb_h_IV=log((1-tau_arb_h_mec1999)/(1-tau_arb_h1999));
if 0<tau_apers_h1999<1 and 0<tau_apers_h_mec1999<1 then diffMTR_apers_h_IV=log((1-tau_apers_h_mec1999)/(1-tau_apers_h1999));
if 0<tau_kap_h1999<1 and 0<tau_kap_h_mec1999<1 then diffMTR_kap_h_IV=log((1-tau_kap_h_mec1999)/(1-tau_kap_h1999));
if 0<tau_frad_h1999<1 and 0<tau_frad_h_mec1999<1 then diffMTR_frad_h_IV=log((1-tau_frad_h_mec1999)/(1-tau_frad_h1999));
if 0<tau_akt_h1999<1 and 0<tau_akt_h_mec1999<1 then diffMTR_akt_h_IV=log((1-tau_akt_h_mec1999)/(1-tau_akt_h1999));

if 0<c_tau_arb_i1999<1 and 0<c_tau_arb_i_mec1999<1 then c_diffMTR_arb_i_IV=log((1-c_tau_arb_i_mec1999)/(1-c_tau_arb_i1999));
if 0<c_tau_apers_i1999<1 and 0<c_tau_apers_i_mec1999<1 then c_diffMTR_apers_i_IV=log((1-c_tau_apers_i_mec1999)/(1-c_tau_apers_i1999));
if 0<c_tau_kap_i1999<1 and 0<c_tau_kap_i_mec1999<1 then c_diffMTR_kap_i_IV=log((1-c_tau_kap_i_mec1999)/(1-c_tau_kap_i1999));
if 0<c_tau_frad_i1999<1 and 0<c_tau_frad_i_mec1999<1 then c_diffMTR_frad_i_IV=log((1-c_tau_frad_i_mec1999)/(1-c_tau_frad_i1999));

if 0<c_tau_arb_h1999<1 and 0<c_tau_arb_h_mec1999<1 then c_diffMTR_arb_h_IV=log((1-c_tau_arb_h_mec1999)/(1-c_tau_arb_h1999));
if 0<c_tau_apers_h1999<1 and 0<c_tau_apers_h_mec1999<1 then c_diffMTR_apers_h_IV=log((1-c_tau_apers_h_mec1999)/(1-c_tau_apers_h1999));
if 0<c_tau_kap_h1999<1 and 0<c_tau_kap_h_mec1999<1 then c_diffMTR_kap_h_IV=log((1-c_tau_kap_h_mec1999)/(1-c_tau_kap_h1999));
if 0<c_tau_frad_h1999<1 and 0<c_tau_frad_h_mec1999<1 then c_diffMTR_frad_h_IV=log((1-c_tau_frad_h_mec1999)/(1-c_tau_frad_h1999));
if 0<c_tau_akt_h1999<1 and 0<c_tau_akt_h_mec1999<1 then c_diffMTR_akt_h_IV=log((1-c_tau_akt_h_mec1999)/(1-c_tau_akt_h1999));

/* Beregner log-forskellen i nettoindkomst */
taxable1999=ear_1999+per_1999+cap_1999-dec_1999;
taxable2002=ear_2002+per_2002+cap_2002-dec_2002;

dummytaxable=0;
if taxable1999>0 and taxable2002>0 then do;
dummytaxable=1;
difftax=log((taxable2002)/(taxable1999));
end;
broad1999=ear_1999+cap_1999;
broad2002=ear_2002+cap_2002;

dummybroad=0;
if broad1999>0 and broad2002>0 then do;
dummybroad=1;
diffbroad=log((broad2002)/(broad1999));
end;
taxable=taxable1999;
broad=broad1999;
logbroad=log(broad);
logtaxable=log(taxable);
netincome1999=ear_1999+per_1999+cap_1999-dec_1999-tax1_1999;
netincome2002=ear_2002+per_2002+cap_2002-dec_2002-tax1_2002;
c_netincome1999=c_ear_1999+c_per_1999+c_cap_1999-c_dec_1999-c_tax1_1999;
c_netincome2002=c_ear_2002+c_per_2002+c_cap_2002-c_dec_2002-c_tax1_2002;

if netincome1999>0 and netincome2002>0 then
diffinc=log((netincome2002)/(netincome1999));

if c_netincome1999>0 and c_netincome2002>0 then
c_diffinc=log((c_netincome2002)/(c_netincome1999));

/* Beregner log-forskellen i virtuel indkomst */
if virtuelindk_i_1999>0 and virtuelindk_i_2002>0 then 
diffvir_i=log(virtuelindk_i_2002/virtuelindk_i_1999);
if virtuelindk_h1_1999>0 and virtuelindk_h1_2002>0 then
diffvir_h1=log(virtuelindk_h1_2002/virtuelindk_h1_1999);
if virtuelindk_h2_1999>0 and virtuelindk_h2_2002>0 then 
diffvir_h2=log(virtuelindk_h2_2002/virtuelindk_h2_1999);

/* Beregner instrument for log-forskellen i virtuel indkomst */
if virtuelindk_i_1999>0 and virtuelindk_i_mec1999>0 then 
diffvir_i_IV=log(virtuelindk_i_mec1999/virtuelindk_i_1999);
if virtuelindk_h1_1999>0 and virtuelindk_h1_mec1999>0 then
diffvir_h1_IV=log(virtuelindk_h1_mec1999/virtuelindk_h1_1999);
if virtuelindk_h2_1999>0 and virtuelindk_h2_mec1999>0 then 
diffvir_h2_IV=log(virtuelindk_h2_mec1999/virtuelindk_h2_1999);

/* Tager log til indkomster */
if dummyear=2 then logarb=log(ear_1999);
if dummyear=3 then logarb=log((ear_1999*(-1)));

if dummyper=2 then logapers=log(per_1999);
if dummyper=3 then logapers=log((per_1999*(-1)));

if dummycap=2 then logkap=log(cap_1999);
if dummycap=3 then logkap=log((cap_1999*(-1)));

if dummydec=2 then logfrad=log(dec_1999);
if dummydec=3 then logfrad=log((dec_1999*(-1)));

/* Omdøber indkomster */
arb=ear_1999;
apers=per_1999;
kap=cap_1999;
frad=dec_1999;
tax=tax1_1999;
tau_arb_i_pre=tau_arb_i1999;
tau_arb_h_pre=tau_arb_h1999;
tau_arb_i_post=tau_arb_i2002;
tau_arb_h_post=tau_arb_h2002;
tau_arb_i_mec=tau_arb_i_mec1999;
tau_arb_h_mec=tau_arb_h_mec1999;

tau_kap_i_pre=tau_kap_i1999;
tau_kap_h_pre=tau_kap_h1999;
tau_kap_i_post=tau_kap_i2002;
tau_kap_h_post=tau_kap_h2002;
tau_kap_i_mec=tau_kap_i_mec1999;
tau_kap_h_mec=tau_kap_h_mec1999;

tau_frad_i_pre=tau_frad_i1999;
tau_frad_h_pre=tau_frad_h1999;
tau_frad_i_post=tau_frad_i2002;
tau_frad_h_post=tau_frad_h2002;
tau_frad_i_mec=tau_frad_i_mec1999;
tau_frad_h_mec=tau_frad_h_mec1999;
dummyper_income=1;
if per_income_1999>0 and per_income_2002>0 then dummyper_income=2;
if per_income_1999<0 and per_income_2002<0 then dummyper_income=3;
if dummyper_income=1 then shiftper_income=1; else shiftper_income=0;
if shiftper_income=0 then diffper_income=log(per_income_2002/per_income_1999);
else diffper_income=.;
per_income=per_income_1999;
if dummyper_income=2 then logper_income=log(per_income_1999);
if dummyper_income=3 then logper_income=log((per_income_1999*(-1)));
run;




data tax2_2000(drop=per_2000 cap_2000 dec_2000 ear_2000 c_per_2000 tax1_2000 c_tax1_2000 
                h_tax1_2000 c_cap_2000 c_dec_2000 c_ear_2000 virtuelindk_i_2000 
                virtuelindk_h1_2000 virtuelindk_h2_2000 tau_arb_i2000
                tau_apers_i2000 tau_kap_i2000 tau_frad_i2000 tau_arb_h2000 
                tau_apers_h2000 tau_kap_h2000 tau_frad_h2000 c_tau_arb_i2000 
                c_tau_apers_i2000 c_tau_kap_i2000 c_tau_frad_i2000 c_tau_arb_h2000
                c_tau_apers_h2000 c_tau_kap_h2000 c_tau_frad_h2000
                virtuelindk_i_mec2000 virtuelindk_h1_mec2000 virtuelindk_h2_mec2000 
			    virtuelindk_i_mec virtuelindk_h1_mec virtuelindk_h2_mec
                tau_arb_i_mec2000 
                tau_apers_i_mec2000 tau_kap_i_mec2000 tau_frad_i_mec2000 tau_arb_h_mec2000 
                tau_apers_h_mec2000 tau_kap_h_mec2000 tau_frad_h_mec2000 c_tau_arb_i_mec2000 
                c_tau_apers_i_mec2000 c_tau_kap_i_mec2000 c_tau_frad_i_mec2000 c_tau_arb_h_mec2000
                c_tau_apers_h_mec2000 c_tau_kap_h_mec2000 c_tau_frad_h_mec2000
                per_2003 cap_2003 dec_2003 ear_2003 c_per_2003 tax1_2003 c_tax1_2003 
                h_tax1_2003 c_cap_2003 c_dec_2003 c_ear_2003 virtuelindk_i_2003 
                virtuelindk_h1_2003 virtuelindk_h2_2003 tau_arb_i2003
                tau_apers_i2003 tau_kap_i2003 tau_frad_i2003 tau_arb_h2003 
                tau_apers_h2003 tau_kap_h2003 tau_frad_h2003 c_tau_arb_i2003 
                c_tau_apers_i2003 c_tau_kap_i2003 c_tau_frad_i2003 c_tau_arb_h2003
                c_tau_apers_h2003 c_tau_kap_h2003 c_tau_frad_h2003
                arbindk apersindk kapindk lignfrad netincome2000 netincome2003
                c_netincome2000 c_netincome2003
tau_akt_h2000 c_tau_akt_h2000 tau_akt_h_mec2000 c_tau_akt_h_mec2000 tau_akt_h2003 c_tau_akt_h2003);
set tax2000;

/* Tager højde for at indkomster kan skifte fortegn */
dummycap=1;
if cap_2000>0 and cap_2003>0 then dummycap=2;
if cap_2000<0 and cap_2003<0 then dummycap=3;
if dummycap=1 then shiftcap=1; else shiftcap=0;
dummyper=1;
if per_2000>0 and per_2003>0 then dummyper=2;
if per_2000<0 and per_2003<0 then dummyper=3;
if dummyper=1 then shiftper=1; else shiftper=0;
dummyear=1;
if ear_2000>0 and ear_2003>0 then dummyear=2;
if ear_2000<0 and ear_2003<0 then dummyear=3;
if dummyear=1 then shiftear=1; else shiftear=0;
dummydec=1;
if dec_2000>0 and dec_2003>0 then dummydec=2;
if dec_2000<0 and dec_2003<0 then dummydec=3;
if dummydec=1 then shiftdec=1; else shiftdec=0;

/* Beregner log-forskellen i indkomster */
if shiftear=0 then diffarb=log(ear_2003/ear_2000);
else diffarb=.;
if shiftdec=0 then difffrad=log(dec_2003/dec_2000);
else difffrad=.;
if shiftper=0 then diffapers=log(per_2003/per_2000);
else diffapers=.;
if shiftcap=0 then diffkap=log(cap_2003/cap_2000);
else diffkap=.;

/* Beregner log-forskellen i net-of tax rate */
if 0<tau_arb_i2000<1 and 0<tau_arb_i2003<1 then diffMTR_arb_i=log((1-tau_arb_i2003)/(1-tau_arb_i2000));
if 0<tau_apers_i2000<1 and 0<tau_apers_i2003<1 then diffMTR_apers_i=log((1-tau_apers_i2003)/(1-tau_apers_i2000));
if 0<tau_kap_i2000<1 and 0<tau_kap_i2003<1 then diffMTR_kap_i=log((1-tau_kap_i2003)/(1-tau_kap_i2000));
if 0<tau_frad_i2000<1 and 0<tau_frad_i2003<1 then diffMTR_frad_i=log((1-tau_frad_i2003)/(1-tau_frad_i2000));

if 0<tau_arb_h2000<1 and 0<tau_arb_h2003<1 then diffMTR_arb_h=log((1-tau_arb_h2003)/(1-tau_arb_h2000));
if 0<tau_apers_h2000<1 and 0<tau_apers_h2003<1 then diffMTR_apers_h=log((1-tau_apers_h2003)/(1-tau_apers_h2000));
if 0<tau_kap_h2000<1 and 0<tau_kap_h2003<1 then diffMTR_kap_h=log((1-tau_kap_h2003)/(1-tau_kap_h2000));
if 0<tau_frad_h2000<1 and 0<tau_frad_h2003<1 then diffMTR_frad_h=log((1-tau_frad_h2003)/(1-tau_frad_h2000));
if 0<tau_akt_h2000<1 and 0<tau_akt_h2003<1 then diffMTR_akt_h=log((1-tau_akt_h2003)/(1-tau_akt_h2000));

if 0<c_tau_arb_i2000<1 and 0<c_tau_arb_i2003<1 then c_diffMTR_arb_i=log((1-c_tau_arb_i2003)/(1-c_tau_arb_i2000));
if 0<c_tau_apers_i2000<1 and 0<c_tau_apers_i2003<1 then c_diffMTR_apers_i=log((1-c_tau_apers_i2003)/(1-c_tau_apers_i2000));
if 0<c_tau_kap_i2000<1 and 0<c_tau_kap_i2003<1 then c_diffMTR_kap_i=log((1-c_tau_kap_i2003)/(1-c_tau_kap_i2000));
if 0<c_tau_frad_i2000<1 and 0<c_tau_frad_i2003<1 then c_diffMTR_frad_i=log((1-c_tau_frad_i2003)/(1-c_tau_frad_i2000));

if 0<c_tau_arb_h2000<1 and 0<c_tau_arb_h2003<1 then c_diffMTR_arb_h=log((1-c_tau_arb_h2003)/(1-c_tau_arb_h2000));
if 0<c_tau_apers_h2000<1 and 0<c_tau_apers_h2003<1 then c_diffMTR_apers_h=log((1-c_tau_apers_h2003)/(1-c_tau_apers_h2000));
if 0<c_tau_kap_h2000<1 and 0<c_tau_kap_h2003<1 then c_diffMTR_kap_h=log((1-c_tau_kap_h2003)/(1-c_tau_kap_h2000));
if 0<c_tau_frad_h2000<1 and 0<c_tau_frad_h2003<1 then c_diffMTR_frad_h=log((1-c_tau_frad_h2003)/(1-c_tau_frad_h2000));
if 0<c_tau_akt_h2000<1 and 0<c_tau_akt_h2003<1 then c_diffMTR_akt_h=log((1-c_tau_akt_h2003)/(1-c_tau_akt_h2000));

/* Beregner instrument for log-forskellen i net-of-tax rate */
if 0<tau_arb_i2000<1 and 0<tau_arb_i_mec2000<1 then diffMTR_arb_i_IV=log((1-tau_arb_i_mec2000)/(1-tau_arb_i2000));
if 0<tau_apers_i2000<1 and 0<tau_apers_i_mec2000<1 then diffMTR_apers_i_IV=log((1-tau_apers_i_mec2000)/(1-tau_apers_i2000));
if 0<tau_kap_i2000<1 and 0<tau_kap_i_mec2000<1 then diffMTR_kap_i_IV=log((1-tau_kap_i_mec2000)/(1-tau_kap_i2000));
if 0<tau_frad_i2000<1 and 0<tau_frad_i_mec2000<1 then diffMTR_frad_i_IV=log((1-tau_frad_i_mec2000)/(1-tau_frad_i2000));

if 0<tau_arb_h2000<1 and 0<tau_arb_h_mec2000<1 then diffMTR_arb_h_IV=log((1-tau_arb_h_mec2000)/(1-tau_arb_h2000));
if 0<tau_apers_h2000<1 and 0<tau_apers_h_mec2000<1 then diffMTR_apers_h_IV=log((1-tau_apers_h_mec2000)/(1-tau_apers_h2000));
if 0<tau_kap_h2000<1 and 0<tau_kap_h_mec2000<1 then diffMTR_kap_h_IV=log((1-tau_kap_h_mec2000)/(1-tau_kap_h2000));
if 0<tau_frad_h2000<1 and 0<tau_frad_h_mec2000<1 then diffMTR_frad_h_IV=log((1-tau_frad_h_mec2000)/(1-tau_frad_h2000));
if 0<tau_akt_h2000<1 and 0<tau_akt_h_mec2000<1 then diffMTR_akt_h_IV=log((1-tau_akt_h_mec2000)/(1-tau_akt_h2000));

if 0<c_tau_arb_i2000<1 and 0<c_tau_arb_i_mec2000<1 then c_diffMTR_arb_i_IV=log((1-c_tau_arb_i_mec2000)/(1-c_tau_arb_i2000));
if 0<c_tau_apers_i2000<1 and 0<c_tau_apers_i_mec2000<1 then c_diffMTR_apers_i_IV=log((1-c_tau_apers_i_mec2000)/(1-c_tau_apers_i2000));
if 0<c_tau_kap_i2000<1 and 0<c_tau_kap_i_mec2000<1 then c_diffMTR_kap_i_IV=log((1-c_tau_kap_i_mec2000)/(1-c_tau_kap_i2000));
if 0<c_tau_frad_i2000<1 and 0<c_tau_frad_i_mec2000<1 then c_diffMTR_frad_i_IV=log((1-c_tau_frad_i_mec2000)/(1-c_tau_frad_i2000));

if 0<c_tau_arb_h2000<1 and 0<c_tau_arb_h_mec2000<1 then c_diffMTR_arb_h_IV=log((1-c_tau_arb_h_mec2000)/(1-c_tau_arb_h2000));
if 0<c_tau_apers_h2000<1 and 0<c_tau_apers_h_mec2000<1 then c_diffMTR_apers_h_IV=log((1-c_tau_apers_h_mec2000)/(1-c_tau_apers_h2000));
if 0<c_tau_kap_h2000<1 and 0<c_tau_kap_h_mec2000<1 then c_diffMTR_kap_h_IV=log((1-c_tau_kap_h_mec2000)/(1-c_tau_kap_h2000));
if 0<c_tau_frad_h2000<1 and 0<c_tau_frad_h_mec2000<1 then c_diffMTR_frad_h_IV=log((1-c_tau_frad_h_mec2000)/(1-c_tau_frad_h2000));
if 0<c_tau_akt_h2000<1 and 0<c_tau_akt_h_mec2000<1 then c_diffMTR_akt_h_IV=log((1-c_tau_akt_h_mec2000)/(1-c_tau_akt_h2000));

/* Beregner log-forskellen i nettoindkomst */
taxable2000=ear_2000+per_2000+cap_2000-dec_2000;
taxable2003=ear_2003+per_2003+cap_2003-dec_2003;

dummytaxable=0;
if taxable2000>0 and taxable2003>0 then do;
dummytaxable=1;
difftax=log((taxable2003)/(taxable2000));
end;
broad2000=ear_2000+cap_2000;
broad2003=ear_2003+cap_2003;

dummybroad=0;
if broad2000>0 and broad2003>0 then do;
dummybroad=1;
diffbroad=log((broad2003)/(broad2000));
end;
taxable=taxable2000;
broad=broad2000;
logbroad=log(broad);
logtaxable=log(taxable);
netincome2000=ear_2000+per_2000+cap_2000-dec_2000-tax1_2000;
netincome2003=ear_2003+per_2003+cap_2003-dec_2003-tax1_2003;
c_netincome2000=c_ear_2000+c_per_2000+c_cap_2000-c_dec_2000-c_tax1_2000;
c_netincome2003=c_ear_2003+c_per_2003+c_cap_2003-c_dec_2003-c_tax1_2003;

if netincome2000>0 and netincome2003>0 then
diffinc=log((netincome2003)/(netincome2000));

if c_netincome2000>0 and c_netincome2003>0 then
c_diffinc=log((c_netincome2003)/(c_netincome2000));

/* Beregner log-forskellen i virtuel indkomst */
if virtuelindk_i_2000>0 and virtuelindk_i_2003>0 then 
diffvir_i=log(virtuelindk_i_2003/virtuelindk_i_2000);
if virtuelindk_h1_2000>0 and virtuelindk_h1_2003>0 then
diffvir_h1=log(virtuelindk_h1_2003/virtuelindk_h1_2000);
if virtuelindk_h2_2000>0 and virtuelindk_h2_2003>0 then 
diffvir_h2=log(virtuelindk_h2_2003/virtuelindk_h2_2000);

/* Beregner instrument for log-forskellen i virtuel indkomst */
if virtuelindk_i_2000>0 and virtuelindk_i_mec2000>0 then 
diffvir_i_IV=log(virtuelindk_i_mec2000/virtuelindk_i_2000);
if virtuelindk_h1_2000>0 and virtuelindk_h1_mec2000>0 then
diffvir_h1_IV=log(virtuelindk_h1_mec2000/virtuelindk_h1_2000);
if virtuelindk_h2_2000>0 and virtuelindk_h2_mec2000>0 then 
diffvir_h2_IV=log(virtuelindk_h2_mec2000/virtuelindk_h2_2000);

/* Tager log til indkomster */
if dummyear=2 then logarb=log(ear_2000);
if dummyear=3 then logarb=log((ear_2000*(-1)));

if dummyper=2 then logapers=log(per_2000);
if dummyper=3 then logapers=log((per_2000*(-1)));

if dummycap=2 then logkap=log(cap_2000);
if dummycap=3 then logkap=log((cap_2000*(-1)));

if dummydec=2 then logfrad=log(dec_2000);
if dummydec=3 then logfrad=log((dec_2000*(-1)));

/* Omdøber indkomster */
arb=ear_2000;
apers=per_2000;
kap=cap_2000;
frad=dec_2000;
tax=tax1_2000;
tau_arb_i_pre=tau_arb_i2000;
tau_arb_h_pre=tau_arb_h2000;
tau_arb_i_post=tau_arb_i2003;
tau_arb_h_post=tau_arb_h2003;
tau_arb_i_mec=tau_arb_i_mec2000;
tau_arb_h_mec=tau_arb_h_mec2000;

tau_kap_i_pre=tau_kap_i2000;
tau_kap_h_pre=tau_kap_h2000;
tau_kap_i_post=tau_kap_i2003;
tau_kap_h_post=tau_kap_h2003;
tau_kap_i_mec=tau_kap_i_mec2000;
tau_kap_h_mec=tau_kap_h_mec2000;

tau_frad_i_pre=tau_frad_i2000;
tau_frad_h_pre=tau_frad_h2000;
tau_frad_i_post=tau_frad_i2003;
tau_frad_h_post=tau_frad_h2003;
tau_frad_i_mec=tau_frad_i_mec2000;
tau_frad_h_mec=tau_frad_h_mec2000;
dummyper_income=1;
if per_income_2000>0 and per_income_2003>0 then dummyper_income=2;
if per_income_2000<0 and per_income_2003<0 then dummyper_income=3;
if dummyper_income=1 then shiftper_income=1; else shiftper_income=0;
if shiftper_income=0 then diffper_income=log(per_income_2003/per_income_2000);
else diffper_income=.;
per_income=per_income_2000;
if dummyper_income=2 then logper_income=log(per_income_2000);
if dummyper_income=3 then logper_income=log((per_income_2000*(-1)));
run;




data tax2_2001(drop=per_2001 cap_2001 dec_2001 ear_2001 c_per_2001 tax1_2001 c_tax1_2001 
                h_tax1_2001 c_cap_2001 c_dec_2001 c_ear_2001 virtuelindk_i_2001 
                virtuelindk_h1_2001 virtuelindk_h2_2001 tau_arb_i2001
                tau_apers_i2001 tau_kap_i2001 tau_frad_i2001 tau_arb_h2001 
                tau_apers_h2001 tau_kap_h2001 tau_frad_h2001 c_tau_arb_i2001 
                c_tau_apers_i2001 c_tau_kap_i2001 c_tau_frad_i2001 c_tau_arb_h2001
                c_tau_apers_h2001 c_tau_kap_h2001 c_tau_frad_h2001
                virtuelindk_i_mec2001 virtuelindk_h1_mec2001 virtuelindk_h2_mec2001 
			    virtuelindk_i_mec virtuelindk_h1_mec virtuelindk_h2_mec
                tau_arb_i_mec2001
                tau_apers_i_mec2001 tau_kap_i_mec2001 tau_frad_i_mec2001 tau_arb_h_mec2001 
                tau_apers_h_mec2001 tau_kap_h_mec2001 tau_frad_h_mec2001 c_tau_arb_i_mec2001 
                c_tau_apers_i_mec2001 c_tau_kap_i_mec2001 c_tau_frad_i_mec2001 c_tau_arb_h_mec2001
                c_tau_apers_h_mec2001 c_tau_kap_h_mec2001 c_tau_frad_h_mec2001
                per_2004 cap_2004 dec_2004 ear_2004 c_per_2004 tax1_2004 c_tax1_2004 
                h_tax1_2004 c_cap_2004 c_dec_2004 c_ear_2004 virtuelindk_i_2004 
                virtuelindk_h1_2004 virtuelindk_h2_2004 tau_arb_i2004
                tau_apers_i2004 tau_kap_i2004 tau_frad_i2004 tau_arb_h2004 
                tau_apers_h2004 tau_kap_h2004 tau_frad_h2004 c_tau_arb_i2004 
                c_tau_apers_i2004 c_tau_kap_i2004 c_tau_frad_i2004 c_tau_arb_h2004
                c_tau_apers_h2004 c_tau_kap_h2004 c_tau_frad_h2004
                arbindk apersindk kapindk lignfrad netincome2001 netincome2004
                c_netincome2001 c_netincome2004
tau_akt_h2001 c_tau_akt_h2001 tau_akt_h_mec2001 c_tau_akt_h_mec2001 tau_akt_h2004 c_tau_akt_h2004);
set tax2001;

/* Tager højde for at indkomster kan skifte fortegn */
dummycap=1;
if cap_2001>0 and cap_2004>0 then dummycap=2;
if cap_2001<0 and cap_2004<0 then dummycap=3;
if dummycap=1 then shiftcap=1; else shiftcap=0;
dummyper=1;
if per_2001>0 and per_2004>0 then dummyper=2;
if per_2001<0 and per_2004<0 then dummyper=3;
if dummyper=1 then shiftper=1; else shiftper=0;
dummyear=1;
if ear_2001>0 and ear_2004>0 then dummyear=2;
if ear_2001<0 and ear_2004<0 then dummyear=3;
if dummyear=1 then shiftear=1; else shiftear=0;
dummydec=1;
if dec_2001>0 and dec_2004>0 then dummydec=2;
if dec_2001<0 and dec_2004<0 then dummydec=3;
if dummydec=1 then shiftdec=1; else shiftdec=0;

/* Beregner log-forskellen i indkomster */
if shiftear=0 then diffarb=log(ear_2004/ear_2001);
else diffarb=.;
if shiftdec=0 then difffrad=log(dec_2004/dec_2001);
else difffrad=.;
if shiftper=0 then diffapers=log(per_2004/per_2001);
else diffapers=.;
if shiftcap=0 then diffkap=log(cap_2004/cap_2001);
else diffkap=.;

/* Beregner log-forskellen i net-of tax rate */
if 0<tau_arb_i2001<1 and 0<tau_arb_i2004<1 then diffMTR_arb_i=log((1-tau_arb_i2004)/(1-tau_arb_i2001));
if 0<tau_apers_i2001<1 and 0<tau_apers_i2004<1 then diffMTR_apers_i=log((1-tau_apers_i2004)/(1-tau_apers_i2001));
if 0<tau_kap_i2001<1 and 0<tau_kap_i2004<1 then diffMTR_kap_i=log((1-tau_kap_i2004)/(1-tau_kap_i2001));
if 0<tau_frad_i2001<1 and 0<tau_frad_i2004<1 then diffMTR_frad_i=log((1-tau_frad_i2004)/(1-tau_frad_i2001));

if 0<tau_arb_h2001<1 and 0<tau_arb_h2004<1 then diffMTR_arb_h=log((1-tau_arb_h2004)/(1-tau_arb_h2001));
if 0<tau_apers_h2001<1 and 0<tau_apers_h2004<1 then diffMTR_apers_h=log((1-tau_apers_h2004)/(1-tau_apers_h2001));
if 0<tau_kap_h2001<1 and 0<tau_kap_h2004<1 then diffMTR_kap_h=log((1-tau_kap_h2004)/(1-tau_kap_h2001));
if 0<tau_frad_h2001<1 and 0<tau_frad_h2004<1 then diffMTR_frad_h=log((1-tau_frad_h2004)/(1-tau_frad_h2001));
if 0<tau_akt_h2001<1 and 0<tau_akt_h2004<1 then diffMTR_akt_h=log((1-tau_akt_h2004)/(1-tau_akt_h2001));

if 0<c_tau_arb_i2001<1 and 0<c_tau_arb_i2004<1 then c_diffMTR_arb_i=log((1-c_tau_arb_i2004)/(1-c_tau_arb_i2001));
if 0<c_tau_apers_i2001<1 and 0<c_tau_apers_i2004<1 then c_diffMTR_apers_i=log((1-c_tau_apers_i2004)/(1-c_tau_apers_i2001));
if 0<c_tau_kap_i2001<1 and 0<c_tau_kap_i2004<1 then c_diffMTR_kap_i=log((1-c_tau_kap_i2004)/(1-c_tau_kap_i2001));
if 0<c_tau_frad_i2001<1 and 0<c_tau_frad_i2004<1 then c_diffMTR_frad_i=log((1-c_tau_frad_i2004)/(1-c_tau_frad_i2001));

if 0<c_tau_arb_h2001<1 and 0<c_tau_arb_h2004<1 then c_diffMTR_arb_h=log((1-c_tau_arb_h2004)/(1-c_tau_arb_h2001));
if 0<c_tau_apers_h2001<1 and 0<c_tau_apers_h2004<1 then c_diffMTR_apers_h=log((1-c_tau_apers_h2004)/(1-c_tau_apers_h2001));
if 0<c_tau_kap_h2001<1 and 0<c_tau_kap_h2004<1 then c_diffMTR_kap_h=log((1-c_tau_kap_h2004)/(1-c_tau_kap_h2001));
if 0<c_tau_frad_h2001<1 and 0<c_tau_frad_h2004<1 then c_diffMTR_frad_h=log((1-c_tau_frad_h2004)/(1-c_tau_frad_h2001));
if 0<c_tau_akt_h2001<1 and 0<c_tau_akt_h2004<1 then c_diffMTR_akt_h=log((1-c_tau_akt_h2004)/(1-c_tau_akt_h2001));

/* Beregner instrument for log-forskellen i net-of-tax rate */
if 0<tau_arb_i2001<1 and 0<tau_arb_i_mec2001<1 then diffMTR_arb_i_IV=log((1-tau_arb_i_mec2001)/(1-tau_arb_i2001));
if 0<tau_apers_i2001<1 and 0<tau_apers_i_mec2001<1 then diffMTR_apers_i_IV=log((1-tau_apers_i_mec2001)/(1-tau_apers_i2001));
if 0<tau_kap_i2001<1 and 0<tau_kap_i_mec2001<1 then diffMTR_kap_i_IV=log((1-tau_kap_i_mec2001)/(1-tau_kap_i2001));
if 0<tau_frad_i2001<1 and 0<tau_frad_i_mec2001<1 then diffMTR_frad_i_IV=log((1-tau_frad_i_mec2001)/(1-tau_frad_i2001));

if 0<tau_arb_h2001<1 and 0<tau_arb_h_mec2001<1 then diffMTR_arb_h_IV=log((1-tau_arb_h_mec2001)/(1-tau_arb_h2001));
if 0<tau_apers_h2001<1 and 0<tau_apers_h_mec2001<1 then diffMTR_apers_h_IV=log((1-tau_apers_h_mec2001)/(1-tau_apers_h2001));
if 0<tau_kap_h2001<1 and 0<tau_kap_h_mec2001<1 then diffMTR_kap_h_IV=log((1-tau_kap_h_mec2001)/(1-tau_kap_h2001));
if 0<tau_frad_h2001<1 and 0<tau_frad_h_mec2001<1 then diffMTR_frad_h_IV=log((1-tau_frad_h_mec2001)/(1-tau_frad_h2001));
if 0<tau_akt_h2001<1 and 0<tau_akt_h_mec2001<1 then diffMTR_akt_h_IV=log((1-tau_akt_h_mec2001)/(1-tau_akt_h2001));

if 0<c_tau_arb_i2001<1 and 0<c_tau_arb_i_mec2001<1 then c_diffMTR_arb_i_IV=log((1-c_tau_arb_i_mec2001)/(1-c_tau_arb_i2001));
if 0<c_tau_apers_i2001<1 and 0<c_tau_apers_i_mec2001<1 then c_diffMTR_apers_i_IV=log((1-c_tau_apers_i_mec2001)/(1-c_tau_apers_i2001));
if 0<c_tau_kap_i2001<1 and 0<c_tau_kap_i_mec2001<1 then c_diffMTR_kap_i_IV=log((1-c_tau_kap_i_mec2001)/(1-c_tau_kap_i2001));
if 0<c_tau_frad_i2001<1 and 0<c_tau_frad_i_mec2001<1 then c_diffMTR_frad_i_IV=log((1-c_tau_frad_i_mec2001)/(1-c_tau_frad_i2001));

if 0<c_tau_arb_h2001<1 and 0<c_tau_arb_h_mec2001<1 then c_diffMTR_arb_h_IV=log((1-c_tau_arb_h_mec2001)/(1-c_tau_arb_h2001));
if 0<c_tau_apers_h2001<1 and 0<c_tau_apers_h_mec2001<1 then c_diffMTR_apers_h_IV=log((1-c_tau_apers_h_mec2001)/(1-c_tau_apers_h2001));
if 0<c_tau_kap_h2001<1 and 0<c_tau_kap_h_mec2001<1 then c_diffMTR_kap_h_IV=log((1-c_tau_kap_h_mec2001)/(1-c_tau_kap_h2001));
if 0<c_tau_frad_h2001<1 and 0<c_tau_frad_h_mec2001<1 then c_diffMTR_frad_h_IV=log((1-c_tau_frad_h_mec2001)/(1-c_tau_frad_h2001));
if 0<c_tau_akt_h2001<1 and 0<c_tau_akt_h_mec2001<1 then c_diffMTR_akt_h_IV=log((1-c_tau_akt_h_mec2001)/(1-c_tau_akt_h2001));

/* Beregner log-forskellen i nettoindkomst */
taxable2001=ear_2001+per_2001+cap_2001-dec_2001;
taxable2004=ear_2004+per_2004+cap_2004-dec_2004;

dummytaxable=0;
if taxable2001>0 and taxable2004>0 then do;
dummytaxable=1;
difftax=log((taxable2004)/(taxable2001));
end;
broad2001=ear_2001+cap_2001;
broad2004=ear_2004+cap_2004;

dummybroad=0;
if broad2001>0 and broad2004>0 then do;
dummybroad=1;
diffbroad=log((broad2004)/(broad2001));
end;
taxable=taxable2001;
broad=broad2001;
logbroad=log(broad);
logtaxable=log(taxable);
netincome2001=ear_2001+per_2001+cap_2001-dec_2001-tax1_2001;
netincome2004=ear_2004+per_2004+cap_2004-dec_2004-tax1_2004;
c_netincome2001=c_ear_2001+c_per_2001+c_cap_2001-c_dec_2001-c_tax1_2001;
c_netincome2004=c_ear_2004+c_per_2004+c_cap_2004-c_dec_2004-c_tax1_2004;

if netincome2001>0 and netincome2004>0 then
diffinc=log((netincome2004)/(netincome2001));

if c_netincome2001>0 and c_netincome2004>0 then
c_diffinc=log((c_netincome2004)/(c_netincome2001));

/* Beregner log-forskellen i virtuel indkomst */
if virtuelindk_i_2001>0 and virtuelindk_i_2004>0 then 
diffvir_i=log(virtuelindk_i_2004/virtuelindk_i_2001);
if virtuelindk_h1_2001>0 and virtuelindk_h1_2004>0 then
diffvir_h1=log(virtuelindk_h1_2004/virtuelindk_h1_2001);
if virtuelindk_h2_2001>0 and virtuelindk_h2_2004>0 then 
diffvir_h2=log(virtuelindk_h2_2004/virtuelindk_h2_2001);

/* Beregner instrument for log-forskellen i virtuel indkomst */
if virtuelindk_i_2001>0 and virtuelindk_i_mec2001>0 then 
diffvir_i_IV=log(virtuelindk_i_mec2001/virtuelindk_i_2001);
if virtuelindk_h1_2001>0 and virtuelindk_h1_mec2001>0 then
diffvir_h1_IV=log(virtuelindk_h1_mec2001/virtuelindk_h1_2001);
if virtuelindk_h2_2001>0 and virtuelindk_h2_mec2001>0 then 
diffvir_h2_IV=log(virtuelindk_h2_mec2001/virtuelindk_h2_2001);

/* Tager log til indkomster */
if dummyear=2 then logarb=log(ear_2001);
if dummyear=3 then logarb=log((ear_2001*(-1)));

if dummyper=2 then logapers=log(per_2001);
if dummyper=3 then logapers=log((per_2001*(-1)));

if dummycap=2 then logkap=log(cap_2001);
if dummycap=3 then logkap=log((cap_2001*(-1)));

if dummydec=2 then logfrad=log(dec_2001);
if dummydec=3 then logfrad=log((dec_2001*(-1)));

/* Omdøber indkomster */
arb=ear_2001;
apers=per_2001;
kap=cap_2001;
frad=dec_2001;
tax=tax1_2001;
tau_arb_i_pre=tau_arb_i2001;
tau_arb_h_pre=tau_arb_h2001;
tau_arb_i_post=tau_arb_i2004;
tau_arb_h_post=tau_arb_h2004;
tau_arb_i_mec=tau_arb_i_mec2001;
tau_arb_h_mec=tau_arb_h_mec2001;

tau_kap_i_pre=tau_kap_i2001;
tau_kap_h_pre=tau_kap_h2001;
tau_kap_i_post=tau_kap_i2004;
tau_kap_h_post=tau_kap_h2004;
tau_kap_i_mec=tau_kap_i_mec2001;
tau_kap_h_mec=tau_kap_h_mec2001;

tau_frad_i_pre=tau_frad_i2001;
tau_frad_h_pre=tau_frad_h2001;
tau_frad_i_post=tau_frad_i2004;
tau_frad_h_post=tau_frad_h2004;
tau_frad_i_mec=tau_frad_i_mec2001;
tau_frad_h_mec=tau_frad_h_mec2001;
dummyper_income=1;
if per_income_2001>0 and per_income_2004>0 then dummyper_income=2;
if per_income_2001<0 and per_income_2004<0 then dummyper_income=3;
if dummyper_income=1 then shiftper_income=1; else shiftper_income=0;
if shiftper_income=0 then diffper_income=log(per_income_2004/per_income_2001);
else diffper_income=.;
per_income=per_income_2001;
if dummyper_income=2 then logper_income=log(per_income_2001);
if dummyper_income=3 then logper_income=log((per_income_2001*(-1)));
run;




data tax2_2002(drop=per_2002 cap_2002 dec_2002 ear_2002 c_per_2002 tax1_2002 c_tax1_2002 
                h_tax1_2002 c_cap_2002 c_dec_2002 c_ear_2002 virtuelindk_i_2002 
                virtuelindk_h1_2002 virtuelindk_h2_2002 tau_arb_i2002
                tau_apers_i2002 tau_kap_i2002 tau_frad_i2002 tau_arb_h2002 
                tau_apers_h2002 tau_kap_h2002 tau_frad_h2002 c_tau_arb_i2002 
                c_tau_apers_i2002 c_tau_kap_i2002 c_tau_frad_i2002 c_tau_arb_h2002
                c_tau_apers_h2002 c_tau_kap_h2002 c_tau_frad_h2002
                virtuelindk_i_mec2002 virtuelindk_h1_mec2002 virtuelindk_h2_mec2002 
			    virtuelindk_i_mec virtuelindk_h1_mec virtuelindk_h2_mec
                tau_arb_i_mec2002 
                tau_apers_i_mec2002 tau_kap_i_mec2002 tau_frad_i_mec2002 tau_arb_h_mec2002 
                tau_apers_h_mec2002 tau_kap_h_mec2002 tau_frad_h_mec2002 c_tau_arb_i_mec2002 
                c_tau_apers_i_mec2002 c_tau_kap_i_mec2002 c_tau_frad_i_mec2002 c_tau_arb_h_mec2002
                c_tau_apers_h_mec2002 c_tau_kap_h_mec2002 c_tau_frad_h_mec2002
                per_2005 cap_2005 dec_2005 ear_2005 c_per_2005 tax1_2005 c_tax1_2005 
                h_tax1_2005 c_cap_2005 c_dec_2005 c_ear_2005 virtuelindk_i_2005 
                virtuelindk_h1_2005 virtuelindk_h2_2005 tau_arb_i2005
                tau_apers_i2005 tau_kap_i2005 tau_frad_i2005 tau_arb_h2005 
                tau_apers_h2005 tau_kap_h2005 tau_frad_h2005 c_tau_arb_i2005 
                c_tau_apers_i2005 c_tau_kap_i2005 c_tau_frad_i2005 c_tau_arb_h2005
                c_tau_apers_h2005 c_tau_kap_h2005 c_tau_frad_h2005
                arbindk apersindk kapindk lignfrad netincome2002 netincome2005
                c_netincome2002 c_netincome2005
tau_akt_h2002 c_tau_akt_h2002 tau_akt_h_mec2002 c_tau_akt_h_mec2002 tau_akt_h2005 c_tau_akt_h2005);
set tax2002;

/* Tager højde for at indkomster kan skifte fortegn */
dummycap=1;
if cap_2002>0 and cap_2005>0 then dummycap=2;
if cap_2002<0 and cap_2005<0 then dummycap=3;
if dummycap=1 then shiftcap=1; else shiftcap=0;
dummyper=1;
if per_2002>0 and per_2005>0 then dummyper=2;
if per_2002<0 and per_2005<0 then dummyper=3;
if dummyper=1 then shiftper=1; else shiftper=0;
dummyear=1;
if ear_2002>0 and ear_2005>0 then dummyear=2;
if ear_2002<0 and ear_2005<0 then dummyear=3;
if dummyear=1 then shiftear=1; else shiftear=0;
dummydec=1;
if dec_2002>0 and dec_2005>0 then dummydec=2;
if dec_2002<0 and dec_2005<0 then dummydec=3;
if dummydec=1 then shiftdec=1; else shiftdec=0;

/* Beregner log-forskellen i indkomster */
if shiftear=0 then diffarb=log(ear_2005/ear_2002);
else diffarb=.;
if shiftdec=0 then difffrad=log(dec_2005/dec_2002);
else difffrad=.;
if shiftper=0 then diffapers=log(per_2005/per_2002);
else diffapers=.;
if shiftcap=0 then diffkap=log(cap_2005/cap_2002);
else diffkap=.;

/* Beregner log-forskellen i net-of tax rate */
if 0<tau_arb_i2002<1 and 0<tau_arb_i2005<1 then diffMTR_arb_i=log((1-tau_arb_i2005)/(1-tau_arb_i2002));
if 0<tau_apers_i2002<1 and 0<tau_apers_i2005<1 then diffMTR_apers_i=log((1-tau_apers_i2005)/(1-tau_apers_i2002));
if 0<tau_kap_i2002<1 and 0<tau_kap_i2005<1 then diffMTR_kap_i=log((1-tau_kap_i2005)/(1-tau_kap_i2002));
if 0<tau_frad_i2002<1 and 0<tau_frad_i2005<1 then diffMTR_frad_i=log((1-tau_frad_i2005)/(1-tau_frad_i2002));

if 0<tau_arb_h2002<1 and 0<tau_arb_h2005<1 then diffMTR_arb_h=log((1-tau_arb_h2005)/(1-tau_arb_h2002));
if 0<tau_apers_h2002<1 and 0<tau_apers_h2005<1 then diffMTR_apers_h=log((1-tau_apers_h2005)/(1-tau_apers_h2002));
if 0<tau_kap_h2002<1 and 0<tau_kap_h2005<1 then diffMTR_kap_h=log((1-tau_kap_h2005)/(1-tau_kap_h2002));
if 0<tau_frad_h2002<1 and 0<tau_frad_h2005<1 then diffMTR_frad_h=log((1-tau_frad_h2005)/(1-tau_frad_h2002));
if 0<tau_akt_h2002<1 and 0<tau_akt_h2005<1 then diffMTR_akt_h=log((1-tau_akt_h2005)/(1-tau_akt_h2002));

if 0<c_tau_arb_i2002<1 and 0<c_tau_arb_i2005<1 then c_diffMTR_arb_i=log((1-c_tau_arb_i2005)/(1-c_tau_arb_i2002));
if 0<c_tau_apers_i2002<1 and 0<c_tau_apers_i2005<1 then c_diffMTR_apers_i=log((1-c_tau_apers_i2005)/(1-c_tau_apers_i2002));
if 0<c_tau_kap_i2002<1 and 0<c_tau_kap_i2005<1 then c_diffMTR_kap_i=log((1-c_tau_kap_i2005)/(1-c_tau_kap_i2002));
if 0<c_tau_frad_i2002<1 and 0<c_tau_frad_i2005<1 then c_diffMTR_frad_i=log((1-c_tau_frad_i2005)/(1-c_tau_frad_i2002));

if 0<c_tau_arb_h2002<1 and 0<c_tau_arb_h2005<1 then c_diffMTR_arb_h=log((1-c_tau_arb_h2005)/(1-c_tau_arb_h2002));
if 0<c_tau_apers_h2002<1 and 0<c_tau_apers_h2005<1 then c_diffMTR_apers_h=log((1-c_tau_apers_h2005)/(1-c_tau_apers_h2002));
if 0<c_tau_kap_h2002<1 and 0<c_tau_kap_h2005<1 then c_diffMTR_kap_h=log((1-c_tau_kap_h2005)/(1-c_tau_kap_h2002));
if 0<c_tau_frad_h2002<1 and 0<c_tau_frad_h2005<1 then c_diffMTR_frad_h=log((1-c_tau_frad_h2005)/(1-c_tau_frad_h2002));
if 0<c_tau_akt_h2002<1 and 0<c_tau_akt_h2005<1 then c_diffMTR_akt_h=log((1-c_tau_akt_h2005)/(1-c_tau_akt_h2002));

/* Beregner instrument for log-forskellen i net-of-tax rate */
if 0<tau_arb_i2002<1 and 0<tau_arb_i_mec2002<1 then diffMTR_arb_i_IV=log((1-tau_arb_i_mec2002)/(1-tau_arb_i2002));
if 0<tau_apers_i2002<1 and 0<tau_apers_i_mec2002<1 then diffMTR_apers_i_IV=log((1-tau_apers_i_mec2002)/(1-tau_apers_i2002));
if 0<tau_kap_i2002<1 and 0<tau_kap_i_mec2002<1 then diffMTR_kap_i_IV=log((1-tau_kap_i_mec2002)/(1-tau_kap_i2002));
if 0<tau_frad_i2002<1 and 0<tau_frad_i_mec2002<1 then diffMTR_frad_i_IV=log((1-tau_frad_i_mec2002)/(1-tau_frad_i2002));

if 0<tau_arb_h2002<1 and 0<tau_arb_h_mec2002<1 then diffMTR_arb_h_IV=log((1-tau_arb_h_mec2002)/(1-tau_arb_h2002));
if 0<tau_apers_h2002<1 and 0<tau_apers_h_mec2002<1 then diffMTR_apers_h_IV=log((1-tau_apers_h_mec2002)/(1-tau_apers_h2002));
if 0<tau_kap_h2002<1 and 0<tau_kap_h_mec2002<1 then diffMTR_kap_h_IV=log((1-tau_kap_h_mec2002)/(1-tau_kap_h2002));
if 0<tau_frad_h2002<1 and 0<tau_frad_h_mec2002<1 then diffMTR_frad_h_IV=log((1-tau_frad_h_mec2002)/(1-tau_frad_h2002));
if 0<tau_akt_h2002<1 and 0<tau_akt_h_mec2002<1 then diffMTR_akt_h_IV=log((1-tau_akt_h_mec2002)/(1-tau_akt_h2002));

if 0<c_tau_arb_i2002<1 and 0<c_tau_arb_i_mec2002<1 then c_diffMTR_arb_i_IV=log((1-c_tau_arb_i_mec2002)/(1-c_tau_arb_i2002));
if 0<c_tau_apers_i2002<1 and 0<c_tau_apers_i_mec2002<1 then c_diffMTR_apers_i_IV=log((1-c_tau_apers_i_mec2002)/(1-c_tau_apers_i2002));
if 0<c_tau_kap_i2002<1 and 0<c_tau_kap_i_mec2002<1 then c_diffMTR_kap_i_IV=log((1-c_tau_kap_i_mec2002)/(1-c_tau_kap_i2002));
if 0<c_tau_frad_i2002<1 and 0<c_tau_frad_i_mec2002<1 then c_diffMTR_frad_i_IV=log((1-c_tau_frad_i_mec2002)/(1-c_tau_frad_i2002));

if 0<c_tau_arb_h2002<1 and 0<c_tau_arb_h_mec2002<1 then c_diffMTR_arb_h_IV=log((1-c_tau_arb_h_mec2002)/(1-c_tau_arb_h2002));
if 0<c_tau_apers_h2002<1 and 0<c_tau_apers_h_mec2002<1 then c_diffMTR_apers_h_IV=log((1-c_tau_apers_h_mec2002)/(1-c_tau_apers_h2002));
if 0<c_tau_kap_h2002<1 and 0<c_tau_kap_h_mec2002<1 then c_diffMTR_kap_h_IV=log((1-c_tau_kap_h_mec2002)/(1-c_tau_kap_h2002));
if 0<c_tau_akt_h2002<1 and 0<c_tau_akt_h_mec2002<1 then c_diffMTR_akt_h_IV=log((1-c_tau_akt_h_mec2002)/(1-c_tau_akt_h2002));

/* Beregner log-forskellen i nettoindkomst */
taxable2002=ear_2002+per_2002+cap_2002-dec_2002;
taxable2005=ear_2005+per_2005+cap_2005-dec_2005;

dummytaxable=0;
if taxable2002>0 and taxable2005>0 then do;
dummytaxable=1;
difftax=log((taxable2005)/(taxable2002));
end;
broad2002=ear_2002+cap_2002;
broad2005=ear_2005+cap_2005;

dummybroad=0;
if broad2002>0 and broad2005>0 then do;
dummybroad=1;
diffbroad=log((broad2005)/(broad2002));
end;
taxable=taxable2002;
broad=broad2002;
logbroad=log(broad);
logtaxable=log(taxable);
logbroad=log(broad);
logtaxable=log(taxable);
netincome2002=ear_2002+per_2002+cap_2002-dec_2002-tax1_2002;
netincome2005=ear_2005+per_2005+cap_2005-dec_2005-tax1_2005;
c_netincome2002=c_ear_2002+c_per_2002+c_cap_2002-c_dec_2002-c_tax1_2002;
c_netincome2005=c_ear_2005+c_per_2005+c_cap_2005-c_dec_2005-c_tax1_2005;

if netincome2002>0 and netincome2005>0 then
diffinc=log((netincome2005)/(netincome2002));

if c_netincome2002>0 and c_netincome2005>0 then
c_diffinc=log((c_netincome2005)/(c_netincome2002));

/* Beregner log-forskellen i virtuel indkomst */
if virtuelindk_i_2002>0 and virtuelindk_i_2005>0 then 
diffvir_i=log(virtuelindk_i_2005/virtuelindk_i_2002);
if virtuelindk_h1_2002>0 and virtuelindk_h1_2005>0 then
diffvir_h1=log(virtuelindk_h1_2005/virtuelindk_h1_2002);
if virtuelindk_h2_2002>0 and virtuelindk_h2_2005>0 then 
diffvir_h2=log(virtuelindk_h2_2005/virtuelindk_h2_2002);

/* Beregner instrument for log-forskellen i virtuel indkomst */
if virtuelindk_i_2002>0 and virtuelindk_i_mec2002>0 then 
diffvir_i_IV=log(virtuelindk_i_mec2002/virtuelindk_i_2002);
if virtuelindk_h1_2002>0 and virtuelindk_h1_mec2002>0 then
diffvir_h1_IV=log(virtuelindk_h1_mec2002/virtuelindk_h1_2002);
if virtuelindk_h2_2002>0 and virtuelindk_h2_mec2002>0 then 
diffvir_h2_IV=log(virtuelindk_h2_mec2002/virtuelindk_h2_2002);

/* Tager log til indkomster */
if dummyear=2 then logarb=log(ear_2002);
if dummyear=3 then logarb=log((ear_2002*(-1)));

if dummyper=2 then logapers=log(per_2002);
if dummyper=3 then logapers=log((per_2002*(-1)));

if dummycap=2 then logkap=log(cap_2002);
if dummycap=3 then logkap=log((cap_2002*(-1)));

if dummydec=2 then logfrad=log(dec_2002);
if dummydec=3 then logfrad=log((dec_2002*(-1)));

/* Omdøber indkomster */
arb=ear_2002;
apers=per_2002;
kap=cap_2002;
frad=dec_2002;
tax=tax1_2002;
tau_arb_i_pre=tau_arb_i2002;
tau_arb_h_pre=tau_arb_h2002;
tau_arb_i_post=tau_arb_i2005;
tau_arb_h_post=tau_arb_h2005;
tau_arb_i_mec=tau_arb_i_mec2002;
tau_arb_h_mec=tau_arb_h_mec2002;

tau_kap_i_pre=tau_kap_i2002;
tau_kap_h_pre=tau_kap_h2002;
tau_kap_i_post=tau_kap_i2005;
tau_kap_h_post=tau_kap_h2005;
tau_kap_i_mec=tau_kap_i_mec2002;
tau_kap_h_mec=tau_kap_h_mec2002;

tau_frad_i_pre=tau_frad_i2002;
tau_frad_h_pre=tau_frad_h2002;
tau_frad_i_post=tau_frad_i2005;
tau_frad_h_post=tau_frad_h2005;
tau_frad_i_mec=tau_frad_i_mec2002;
tau_frad_h_mec=tau_frad_h_mec2002;
dummyper_income=1;
if per_income_2002>0 and per_income_2005>0 then dummyper_income=2;
if per_income_2002<0 and per_income_2005<0 then dummyper_income=3;
if dummyper_income=1 then shiftper_income=1; else shiftper_income=0;
if shiftper_income=0 then diffper_income=log(per_income_2005/per_income_2002);
else diffper_income=.;
per_income=per_income_2002;
if dummyper_income=2 then logper_income=log(per_income_2002);
if dummyper_income=3 then logper_income=log((per_income_2002*(-1)));
run;

/* STEP 4: USING DATA FROM STEP 3 AND ADMINISTRATIVE DATA ON MUNUCIPALITY OF LIVING, THIS STEP MERGES YEARLY 
           DATASETS INTO ONE DATASET, ADD SOCIOECONOMIC CONTROLS AND CONSTRUCT INCOME CONTROLS */

%macro ho;
%do i=1984 %to 2002;
data fain&i(keep=kom pnr);
set fain.fain&i;
run;

proc sort data=fain&i; by pnr; run;

proc sort data=tax2_&i; by pnr; run;

data tak&i;
merge tax2_&i(in=a) fain&i(in=b);
by pnr;
if 100<=kom<=147 then amt=1;
if 151<=kom<=189 then amt=2;
if 201<=kom<=237 then amt=3;
if 251<=kom<=271 then amt=4;
if 301<=kom<=345 then amt=5;
if 351<=kom<=397 then amt=6;
if 400<=kom<=411 then amt=7;
if 421<=kom<=499 then amt=8;
if 501<=kom<=545 then amt=9;
if 551<=kom<=577 then amt=10;
if 601<=kom<=631 then amt=11;
if 651<=kom<=685 then amt=12;
if 701<=kom<=751 then amt=13;
if 761<=kom<=793 then amt=14;
if 801<=kom<=861 then amt=15;
if 000<=kom<=019 or 996<=kom<=999 then amt=16;
if 931<=kom<=963 then amt=17;


if a=1 and b=1;
run;
%end;
%mend;
%ho;

%macro x;
%do i=1984 %to 2002;
proc sort data=bif.unem&i; by amt; run;
proc sort data=tak&i; by amt; run;

data skat2&i;
merge bif.unem&i tak&i (in=a);
by amt;
if a=1;
run;

proc sort data=skat2&i; by pnr; run;

%end;
%mend;
%x;


proc datasets library=work; delete fain1984-fain2002 tax2_1984-tax2_2002 tak1984-tak2002 skat1984-skat2005
tax1984-tax2002 ska2002 skat2005_indkomst2002; 
run;


 data tax1984_2002;
 set /*bif.indkomst1982 bif.indkomst1983*/ skat21984 skat21985 skat21986 skat21987 skat21988 skat21989 skat21990 skat21991
 skat21992 skat21993 skat21994 skat21995 skat21996 skat21997 skat21998 skat21999
 skat22000 skat22001 skat22002;
/*if ieland='-' then delete;*/
run;


proc datasets library=work; delete skat21984-skat22005; 
run;


data bif.tax1984_2002(drop=hffsp pdb932);
set tax1984_2002(drop=c_per_income_1984-c_per_income_2005 
akt_1991-akt_2005 c_akt_1991-c_akt_2005 
per_income_1985 per_income_1986 per_income_1988-per_income_2005); 

 /* køn*/
if kon=1 then mand=1; else mand=0;

/*kvindegrupper*/
if kon=0 then kvinde=1; else kvinde=0;
if kon=0 and cstatus=1 and anc017>0 then enligkvindeborn=1; else enligkvindeborn=0;
if cstatus=2 then giftkvinde=1; else giftkvinde=0;

/*uddannelseslængde*/
if 90309910<=hffsp<=90309920 then udd1=1; else udd1=0;
if 10000000<=hffsp<=30999999 then udd2=1; else udd2=0;
if 35000000<=hffsp<=35999999 then udd3=1; else udd3=0;
if 40000000<=hffsp<=40999999 then udd4=1; else udd4=0;
if 50000000<=hffsp<=50999999 then udd5=1; else udd5=0;
if 60000000<=hffsp<=70999999 then udd6=1; else udd6=0;
if udd1=0 and udd2=0 and udd3=0 and udd4=0 and udd5=0 and udd6=0 then udd1=1;

/*industri*/
if 011110<=pdb932<=145000 then ind1=1; else ind1=0;
if 151110<=pdb932<=372000 then ind2=1; else ind2=0;
if 401100<=pdb932<=410000 then ind3=1; else ind3=0;
if 451100<=pdb932<=455000 then ind4=1; else ind4=0;
if 501010<=pdb932<=555200 then ind5=1; else ind5=0;
if 601000<=pdb932<=642040 or pdb932=926220 then ind6=1; else ind6=0;
if 651100<=pdb932<=748790 then ind7=1; else ind7=0;
if 751100<=pdb932<=926210 or 926290<=pdb932<=950000 or pdb932=990000 then ind8=1; else ind8=0;
if pdb932=980000 then ind9=1; else ind9=0;
if ind1=0 and ind2=0 and ind3=0 and ind4=0 and ind5=0 and ind6=0 and ind7=0
and ind8=0 and ind9=0 then ind9=1;

/*BNP-vækst*/
if year=1984 then gdp=3.08;
if year=1985 then gdp=4.00;
if year=1986 then gdp=4.74;
if year=1987 then gdp=0.68;
if year=1988 then gdp=-0.71;
if year=1989 then gdp=-1.02;
if year=1990 then gdp=1.11;
if year=1991 then gdp=1.29;
if year=1992 then gdp=1.46;
if year=1993 then gdp=-0.76;
if year=1994 then gdp=4.85;
if year=1995 then gdp=2.93;
if year=1996 then gdp=2.47;
if year=1997 then gdp=2.67;
if year=1998 then gdp=1.76;
if year=1999 then gdp=2.76;
if year=2000 then gdp=3.28;
if year=2001 then gdp=0.70;
if year=2002 then gdp=0.58;

/* Bunching */
if -2000<=bkink<=2000 then bk=1; else bk=0;
if -2000<=mkink<=2000 then mk=1; else mk=0; 
if -2000<=tkink<=2000 then tk=1; else tk=0; 
kink=bk+mk+tk;
/*if kink ne 0 then delete;*/

/*oprindelsesland*/
/*
nonoecd=1;
if ieland in(5104,5106,5108,5110,5120,5126,5130,5134,5140,5142,5150,5154,5156,5160,5164,
             5170,5172,5174,5182,5184,5314,5354,5390,5444,5466,5502,5514,5776,5778) 
then nonoecd=0;
*/
/* immigrantstatus */
/*immigrant=1;
if ietype=1 then immigrant=0;
*/
/* beskæftigelsesstatus*//*
occ=4;
if 11<=pstill<=20 then occ=1;
if 31<=pstill<=37 then occ=2;
if pstill=40 then occ=3;*/

if year=1984 then a=1; 
if year=1985 then a=2; 
if year=1986 then a=3;
if year=1987 then a=4; 
if year=1988 then a=5; 
if year=1989 then a=6;
if year=1990 then a=7;
if year=1991 then a=8;
if year=1992 then a=9;  
if year=1993 then a=10;  
if year=1994 then a=11;  
if year=1995 then a=12;
if year=1996 then a=13;  
if year=1997 then a=14;  
if year=1998 then a=15; 
if year=1999 then a=16;
if year=2000 then a=17;
if year=2001 then a=18;
if year=2002 then a=19; 

if a=1 then d84=1; else d84=0;
if a=2 then d85=1; else d85=0;
if a=3 then d86=1; else d86=0;
if a=4 then d87=1; else d87=0;
if a=5 then d88=1; else d88=0;
if a=6 then d89=1; else d89=0;
if a=7 then d90=1; else d90=0;
if a=8 then d91=1; else d91=0;
if a=9 then d92=1; else d92=0;
if a=10 then d93=1; else d93=0;
if a=11 then d94=1; else d94=0;
if a=12 then d95=1; else d95=0;
if a=13 then d96=1; else d96=0;
if a=14 then d97=1; else d97=0;
if a=15 then d98=1; else d98=0;
if a=16 then d99=1; else d99=0;
if a=17 then d00=1; else d00=0;
if a=18 then d01=1; else d01=0;
if a=19 then d02=1; else d02=0;

if amt=1 then amt1=1; else amt1=0;
if amt=2 then amt2=1; else amt2=0;
if amt=3 then amt3=1; else amt3=0;
if amt=4 then amt4=1; else amt4=0;
if amt=5 then amt5=1; else amt5=0;
if amt=6 then amt6=1; else amt6=0;
if amt=7 then amt7=1; else amt7=0;
if amt=8 then amt8=1; else amt8=0;
if amt=9 then amt9=1; else amt9=0;
if amt=10 then amt10=1; else amt10=0;
if amt=11 then amt11=1; else amt11=0;
if amt=12 then amt12=1; else amt12=0;
if amt=13 then amt13=1; else amt13=0;
if amt=14 then amt14=1; else amt14=0;
if amt=15 then amt15=1; else amt15=0;

run;

proc sort data=bif.tax1984_2002; by pnr year; run;


/********************/
/* Indkomst    1982 */
/********************/ 

/* STEP 1: Datasæt dannes */
/* Laver datasæt med relevante satser og beløbsgrænser */

/* Samler data i ét datasæt */
Data bif.indkomst1982(keep=pnr year apers arb kap frad logper_income per_income
logapers logarb logkap logfrad taxable logtaxable broad logbroad);
 merge indk.indk1982(in=a)  indk2.indkomst1982(in=b);

by pnr;
year=1982;
apers=(qovskvir+qtilpens+vederlag-qfrdpen)*2.36;
kap=(rentbank+rentobl+rentinde-qkapud)*2.36;
arb=qlontmp2*2.36;
frad=(qfradrag-qkapud)*2.36;
broad=arb+kap;
taxable=arb+apers+kap-frad;

per_income=arb+apers;

if apers<0 then apers=apers*(-1);
if apers>0 then logapers=log(apers);

if arb<0 then arb=arb*(-1);
if arb>0 then logarb=log(arb);

if kap<0 then kap=kap*(-1);
if kap>0 then logkap=log(kap);

if frad<0 then frad=frad*(-1);
if frad>0 then logfrad=log(frad);

if per_income<0 then per_income=per_income*(-1);
if per_income>0 then logper_income=log(per_income);

if broad<0 then broad=broad*(-1);
if broad>0 then logbroad=log(broad);

if taxable<0 then taxable=taxable*(-1);
if taxable>0 then logtaxable=log(taxable);

if a=1 and b=1;
run;


/********************/
/* Indkomst    1983 */
/********************/ 

/* STEP 1: Datasæt dannes */
/* Laver datasæt med relevante satser og beløbsgrænser */

/* Samler data i ét datasæt */
Data bif.indkomst1983(keep=pnr year apers arb kap frad logapers logarb logkap logfrad
logper_income per_income taxable logtaxable broad logbroad);
 merge indk.indk1983(in=a)  indk2.indkomst1983(in=b);

by pnr;
year=1983;
apers=(qovskvir+qtilpens+vederlag+qhoninio-qfrdpen)*2.33;
kap=(rentbank+rentobl+rentinde-qkapud)*2.33;
arb=qlontmp2*2.33;
frad=(qfradrag-qkapud)*2.33;
per_income=arb+apers;
broad=arb+kap;
taxable=arb+apers+kap-frad;

if apers<0 then apers=apers*(-1);
if apers>0 then logapers=log(apers);

if arb<0 then arb=arb*(-1);
if arb>0 then logarb=log(arb);

if kap<0 then kap=kap*(-1);
if kap>0 then logkap=log(kap);

if frad<0 then frad=frad*(-1);
if frad>0 then logfrad=log(frad);

if broad<0 then broad=broad*(-1);
if broad>0 then logbroad=log(broad);

if taxable<0 then taxable=taxable*(-1);
if taxable>0 then logtaxable=log(taxable);

if per_income<0 then per_income=per_income*(-1);
if per_income>0 then logper_income=log(per_income);
if a=1 and b=1;
run;


Data k;
set bif.indkomst1982 bif.indkomst1983 bif.tax1984_2002(keep=pnr year logarb logapers 
logkap logfrad arb apers kap frad per_income logper_income logtaxable taxable logbroad broad);

run;

proc sort data=k; by pnr year; run;

data controls;
set k;

arb2=arb;
if arb<0 then arb2=arb*(-1);
apers2=apers;
if apers<0 then apers2=apers*(-1);
kap2=kap;
if kap<0 then kap2=kap*(-1);
frad2=frad;
if frad<0 then frad2=frad*(-1); 
per_income2=per_income;
if per_income<0 then per_income2=per_income*(-1);


if arb2 ne 0 then logarb2=log(arb2);
if apers2 ne 0 then logapers2=log(apers2);
if per_income2 ne 0 then logper_income2=log(per_income2);
if kap2 ne 0 then logkap2=log(kap2);
if frad2 ne 0 then logfrad2=log(frad2);

lag2pnr=lag(pnr);
lag2year=lag(year);

parb2=lag(arb2);
if pnr ne lag(pnr) then parb2=.;
if year ne lag(year)+1 then parb2=.;
if parb2>0 then plogarb2=log(parb2);
if parb2>0 then dlogarb2=logarb2-plogarb2;

p2arb2=lag(parb2);
if pnr ne lag(lag2pnr) then p2arb2=.;
if year ne lag(lag2year)+2 then p2arb2=.;
if p2arb2>0 then p2logarb2=log(p2arb2);
if p2arb2>0 then d2logarb2=plogarb2-p2logarb2;

papers2=lag(apers2);
if pnr ne lag(pnr) then papers2=.;
if year ne lag(year)+1 then papers2=.;
if papers2>0 then plogapers2=log(papers2);
if papers2>0 then dlogapers2=logapers2-plogapers2;

p2apers2=lag(papers2);
if pnr ne lag(lag2pnr) then p2apers2=.;
if year ne lag(lag2year)+2 then p2apers2=.;
if p2apers2>0 then p2logapers2=log(p2apers2);
if p2apers2>0 then d2logapers2=plogapers2-p2logapers2;

pper_income2=lag(per_income2);
if pnr ne lag(pnr) then pper_income2=.;
if year ne lag(year)+1 then pper_income2=.;
if pper_income2>0 then plogper_income2=log(pper_income2);
if pper_income2>0 then dlogper_income2=logper_income2-plogper_income2;

p2per_income2=lag(pper_income2);
if pnr ne lag(lag2pnr) then p2per_income2=.;
if year ne lag(lag2year)+2 then p2per_income2=.;
if p2per_income2>0 then p2logper_income2=log(p2per_income2);
if p2per_income2>0 then d2logper_income2=plogper_income2-p2logper_income2;

pkap2=lag(kap2);
if pnr ne lag(pnr) then pkap2=.;
if year ne lag(year)+1 then pkap2=.;
if pkap2>0 then plogkap2=log(pkap2);
if pkap2>0 then dlogkap2=logkap2-plogkap2;

p2kap2=lag(pkap2);
if pnr ne lag(lag2pnr) then p2kap2=.;
if year ne lag(lag2year)+2 then p2kap2=.;
if p2kap2>0 then p2logkap2=log(p2kap2);
if p2kap2>0 then d2logkap2=plogkap2-p2logkap2;

pfrad2=lag(frad2);
if pnr ne lag(pnr) then pfrad2=.;
if year ne lag(year)+1 then pfrad2=.;
if pfrad2>0 then plogfrad2=log(pfrad2);
if pfrad2>0 then dlogfrad2=logfrad2-plogfrad2;

p2frad2=lag(pfrad2);
if pnr ne lag(lag2pnr) then p2frad2=.;
if year ne lag(lag2year)+2 then p2frad2=.;
if p2frad2>0 then p2logfrad2=log(p2frad2);
if p2frad2>0 then d2logfrad2=plogfrad2-p2logfrad2;

taxable2=taxable;
if taxable<0 then taxable2=taxable*(-1);
if taxable2 ne 0 then logtaxable2=log(taxable2);

ptaxable2=lag(taxable2);
if pnr ne lag(pnr) then ptaxable2=.;
if year ne lag(year)+1 then ptaxable2=.;
if ptaxable2>0 then plogtaxable2=log(ptaxable2);
if ptaxable2>0 then dlogtaxable2=logtaxable2-plogtaxable2;

p2taxable2=lag(ptaxable2);
if pnr ne lag(lag2pnr) then p2taxable2=.;
if year ne lag(lag2year)+2 then p2taxable2=.;
if p2taxable2>0 then p2logtaxable2=log(p2taxable2);
if p2taxable2>0 then d2logtaxable2=plogtaxable2-p2logtaxable2;

broad2=broad;
if broad<0 then broad2=broad*(-1);
if broad2 ne 0 then logbroad2=log(broad2);

pbroad2=lag(broad2);
if pnr ne lag(pnr) then pbroad2=.;
if year ne lag(year)+1 then pbroad2=.;
if pbroad2>0 then plogbroad2=log(pbroad2);
if pbroad2>0 then dlogbroad2=logbroad2-plogbroad2;

p2broad2=lag(pbroad2);
if pnr ne lag(lag2pnr) then p2broad2=.;
if year ne lag(lag2year)+2 then p2broad2=.;
if p2broad2>0 then p2logbroad2=log(p2broad2);
if p2broad2>0 then d2logbroad2=plogbroad2-p2logbroad2;

run;
 

proc sort data=controls; by pnr year; run;


data samle2;
merge controls(drop=lag2year lag2pnr)
bif.tax1984_2002(drop=per_income logper_income arb apers kap frad logarb logapers logkap logfrad logbroad logtaxable taxable broad in=b);
by pnr year;

if arb ne . and parb2 ne . and p2arb2 ne . and logarb ne . and plogarb2 ne . and p2logarb2 ne .
and dlogarb2 ne . and d2logarb2 ne .
and diffarb ne . and diffMTR_arb_i ne . and diffMTR_arb_i_IV ne . and diffMTR_arb_h ne .
and diffMTR_arb_h_IV ne . and diffvir_i ne . and diffvir_h1 ne . and
diffvir_h2 ne . and diffvir_i_IV ne . and diffvir_h1_IV ne . and diffvir_h2_IV ne . 
then arbstatus=1; else arbstatus=0; 

if arb ne . and parb2 ne . and logarb ne . and dlogarb2 ne .
and diffarb ne . and diffMTR_arb_i ne . and diffMTR_arb_i_IV ne . and diffMTR_arb_h ne .
and diffMTR_arb_h_IV ne . and diffvir_i ne . and diffvir_h1 ne . and
diffvir_h2 ne . and diffvir_i_IV ne . and diffvir_h1_IV ne . and diffvir_h2_IV ne . 
then arbstatus2=1; else arbstatus2=0; 

if apers ne . and papers2 ne . and p2apers2 ne . and logapers ne . and plogapers2 ne . 
and p2logapers2 ne . and dlogapers2 ne . and d2logapers2 ne .
and diffapers ne . and diffMTR_apers_i ne . and diffMTR_apers_i_IV ne . and diffMTR_apers_h ne .
and diffMTR_apers_h_IV ne . and diffvir_i ne . and diffvir_h1 ne . and
diffvir_h2 ne . and diffvir_i_IV ne . and diffvir_h1_IV ne . and diffvir_h2_IV ne . 
then apersstatus=1; else apersstatus=0;

if apers ne . and papers2 ne . and logapers ne . and dlogapers2 ne .  
and diffapers ne . and diffMTR_apers_i ne . and diffMTR_apers_i_IV ne . and diffMTR_apers_h ne .
and diffMTR_apers_h_IV ne . and diffvir_i ne . and diffvir_h1 ne . and
diffvir_h2 ne . and diffvir_i_IV ne . and diffvir_h1_IV ne . and diffvir_h2_IV ne . 
then apersstatus2=1; else apersstatus2=0;

if per_income ne . and pper_income2 ne . and p2per_income2 ne . and logper_income ne . and plogper_income2 ne . and p2logper_income2 ne .
and dlogper_income2 ne . and d2logper_income2 ne .
and diffper_income ne . and diffMTR_arb_i ne . and diffMTR_arb_i_IV ne . and diffMTR_arb_h ne .
and diffMTR_arb_h_IV ne . and diffvir_i ne . and diffvir_h1 ne . and
diffvir_h2 ne . and diffvir_i_IV ne . and diffvir_h1_IV ne . and diffvir_h2_IV ne . 
then per_incomestatus=1; else per_incomestatus=0; 

if per_income ne . and pper_income2 ne . and logper_income ne . and dlogper_income2 ne .
and diffper_income ne . and diffMTR_arb_i ne . and diffMTR_arb_i_IV ne . and diffMTR_arb_h ne .
and diffMTR_arb_h_IV ne . and diffvir_i ne . and diffvir_h1 ne . and
diffvir_h2 ne . and diffvir_i_IV ne . and diffvir_h1_IV ne . and diffvir_h2_IV ne . 
then per_incomestatus2=1; else per_incomestatus2=0; 

if kap ne . and pkap2 ne . and p2kap2 ne . and logkap ne . and plogkap2 ne . and p2logkap2 ne .
and dlogkap2 ne . and d2logkap2 ne .
and diffkap ne . and diffMTR_kap_i ne . and diffMTR_kap_i_IV ne . and diffMTR_kap_h ne .
and diffMTR_kap_h_IV ne . and diffvir_i ne . and diffvir_h1 ne . and
diffvir_h2 ne . and diffvir_i_IV ne . and diffvir_h1_IV ne . and diffvir_h2_IV ne . 
then kapstatus=1; else kapstatus=0;


if kap ne . and pkap2 ne . and logkap ne . and dlogkap2 ne .
and diffkap ne . and diffMTR_kap_i ne . and diffMTR_kap_i_IV ne . and diffMTR_kap_h ne .
and diffMTR_kap_h_IV ne . and diffvir_i ne . and diffvir_h1 ne . and
diffvir_h2 ne . and diffvir_i_IV ne . and diffvir_h1_IV ne . and diffvir_h2_IV ne . 
then kapstatus2=1; else kapstatus2=0;

if frad ne . and pfrad2 ne . and p2frad2 ne . and logfrad ne . and plogfrad2 ne . and 
p2logfrad2 ne . and dlogfrad2 ne . and d2logfrad2 ne .
and difffrad ne . and diffMTR_frad_i ne . and diffMTR_frad_i_IV ne . and diffMTR_frad_h ne .
and diffMTR_frad_h_IV ne . and diffvir_i ne . and diffvir_h1 ne . and
diffvir_h2 ne . and diffvir_i_IV ne . and diffvir_h1_IV ne . and diffvir_h2_IV ne . 
then fradstatus=1; else fradstatus=0;

if frad ne . and pfrad2 ne . and logfrad ne . 
and difffrad ne . and diffMTR_frad_i ne . and diffMTR_frad_i_IV ne . and diffMTR_frad_h ne .
and diffMTR_frad_h_IV ne . and diffvir_i ne . and diffvir_h1 ne . and
diffvir_h2 ne . and diffvir_i_IV ne . and diffvir_h1_IV ne . and diffvir_h2_IV ne . 
then fradstatus2=1; else fradstatus2=0;

count=arbstatus+kapstatus+fradstatus;
if count<1 then delete;
indkomst=arb+apers+kap;

if b=1;
run;

proc sort data=samle2; by year; run;

proc univariate data=samle2(where=(arbstatus=1) keep=indkomst arbstatus year) noprint;
var indkomst;
by year;
output out=p_arbstatus pctlpts=20 40 60 80 90 pctlpre=arbstatus_;
run;


proc univariate data=samle2(where=(arbstatus2=1) keep=indkomst arbstatus2 year) noprint;
var indkomst;
by year;
output out=p_arbstatus2 pctlpts=20 40 60 80 pctlpre=arbstatus2_;
run;


proc univariate data=samle2(where=(per_incomestatus=1) keep=indkomst per_incomestatus year) noprint;
var indkomst;
by year;
output out=p_per_incomestatus pctlpts=20 40 60 80 pctlpre=per_incomestatus_;
run;


proc univariate data=samle2(where=(per_incomestatus2=1) keep=indkomst per_incomestatus2 year) noprint;
var indkomst;
by year;
output out=p_per_incomestatus2 pctlpts=20 40 60 80 pctlpre=per_incomestatus2_;
run;



proc univariate data=samle2(where=(apersstatus=1) keep=indkomst apersstatus year) noprint;
var indkomst;
by year;
output out=p_apersstatus pctlpts=20 40 60 80 pctlpre=apersstatus_;
run;


proc univariate data=samle2(where=(apersstatus2=1) keep=indkomst apersstatus2 year) noprint;
var indkomst;
by year;
output out=p_apersstatus2 pctlpts=20 40 60 80 pctlpre=apersstatus2_;
run;


proc univariate data=samle2(where=(kapstatus=1) keep=indkomst kapstatus year) noprint;
var indkomst;
by year;
output out=p_kapstatus pctlpts=20 40 60 80 pctlpre=kapstatus_;
run;


proc univariate data=samle2(where=(kapstatus2=1) keep=indkomst kapstatus2 year) noprint;
var indkomst;
by year;
output out=p_kapstatus2 pctlpts=20 40 60 80 pctlpre=kapstatus2_;
run;


proc univariate data=samle2(where=(fradstatus=1) keep=indkomst fradstatus year) noprint;
var indkomst;
by year;
output out=p_fradstatus pctlpts=20 40 60 80 pctlpre=fradstatus_;
run;


proc univariate data=samle2(where=(fradstatus2=1) keep=indkomst fradstatus2 year) noprint;
var indkomst;
by year;
output out=p_fradstatus2 pctlpts=20 40 60 80 pctlpre=fradstatus2_;
run;



data bif.tax84_02(drop=/*pdb932 hffsp*/ bopkom kon amt arledgr top_dummy mellem_dummy bund_dummy notax_dummy
top_dummy_mec mellem_dummy_mec bund_dummy_mec notax_dummy_mec /*c_aktind akt_1991 akt_1992
akt_1993 akt_1994 akt_1995 akt_1996 akt_1997 akt_1998 akt_1999 akt_2000 akt_2001 akt_2002 akt_2003 akt_2004 akt_2005
c_akt_1991 c_akt_1992 c_akt_1993 c_akt_1994 c_akt_1995 c_akt_1996 c_akt_1997 c_akt_1998
c_akt_1999 c_akt_2000 c_akt_2001 c_akt_2002 c_akt_2003 c_akt_2004 c_akt_2005*/
arbstatus_20 arbstatus_40 arbstatus_60 arbstatus_80
arbstatus2_20 arbstatus2_40 arbstatus2_60 arbstatus2_80
apersstatus_20 apersstatus_40 apersstatus_60 apersstatus_80
apersstatus2_20 apersstatus2_40 apersstatus2_60 apersstatus2_80
kapstatus_20 kapstatus_40 kapstatus_60 kapstatus_80
kapstatus2_20 kapstatus2_40 kapstatus2_60 kapstatus2_80
fradstatus_20 fradstatus_40 fradstatus_60 fradstatus_80
fradstatus2_20 fradstatus2_40 fradstatus2_60 fradstatus2_80);
merge samle2(in=b) p_arbstatus(in=c) p_arbstatus2(in=d) p_apersstatus(in=e) p_apersstatus2(in=f)
      p_kapstatus(in=g) p_kapstatus2(in=h) p_fradstatus(in=i) p_fradstatus2(in=j)
p_per_incomestatus(in=k) p_per_incomestatus2(in=l); 
by year;

if indkomst<arbstatus_20 then e1=1;
if arbstatus_20<=indkomst<arbstatus_40 then e1=2;
if arbstatus_40<=indkomst<arbstatus_60 then e1=3;
if arbstatus_60<=indkomst<arbstatus_80 then e1=4;
if indkomst=>arbstatus_80 then e1=5;
if indkomst=>arbstatus_90 then e1=6;

if indkomst<arbstatus2_20 then e2=1;
if arbstatus2_20<=indkomst<arbstatus2_40 then e2=2;
if arbstatus2_40<=indkomst<arbstatus2_60 then e2=3;
if arbstatus2_60<=indkomst<arbstatus2_80 then e2=4;
if indkomst=>arbstatus2_80 then e2=5;

if indkomst<apersstatus_20 then e3=1;
if apersstatus_20<=indkomst<apersstatus_40 then e3=2;
if apersstatus_40<=indkomst<apersstatus_60 then e3=3;
if apersstatus_60<=indkomst<apersstatus_80 then e3=4;
if indkomst=>apersstatus_80 then e3=5;

if indkomst<apersstatus2_20 then e4=1;
if apersstatus2_20<=indkomst<apersstatus2_40 then e4=2;
if apersstatus2_40<=indkomst<apersstatus2_60 then e4=3;
if apersstatus2_60<=indkomst<apersstatus2_80 then e4=4;
if indkomst=>apersstatus2_80 then e4=5;

if indkomst<kapstatus_20 then e5=1;
if kapstatus2_20<=indkomst<kapstatus_40 then e5=2;
if kapstatus2_40<=indkomst<kapstatus_60 then e5=3;
if kapstatus2_60<=indkomst<kapstatus_80 then e5=4;
if indkomst=>kapstatus_80 then e5=5;

if indkomst<kapstatus2_20 then e6=1;
if kapstatus2_20<=indkomst<kapstatus2_40 then e6=2;
if kapstatus2_40<=indkomst<kapstatus2_60 then e6=3;
if kapstatus2_60<=indkomst<kapstatus2_80 then e6=4;
if indkomst=>kapstatus2_80 then e6=5;

if indkomst<fradstatus_20 then e7=1;
if fradstatus_20<=indkomst<fradstatus_40 then e7=2;
if fradstatus_40<=indkomst<fradstatus_60 then e7=3;
if fradstatus_60<=indkomst<fradstatus_80 then e7=4;
if indkomst=>fradstatus_80 then e7=5;

if indkomst<fradstatus2_20 then e8=1;
if fradstatus2_20<=indkomst<fradstatus2_40 then e8=2;
if fradstatus2_40<=indkomst<fradstatus2_60 then e8=3;
if fradstatus2_60<=indkomst<fradstatus2_80 then e8=4;
if indkomst=>fradstatus2_80 then e8=5;

if indkomst<per_incomestatus_20 then e9=1;
if per_incomestatus_20<=indkomst<per_incomestatus_40 then e9=2;
if per_incomestatus_40<=indkomst<per_incomestatus_60 then e9=3;
if per_incomestatus_60<=indkomst<per_incomestatus_80 then e9=4;
if indkomst=>per_incomestatus_80 then e9=5;

if indkomst<per_incomestatus2_20 then e10=1;
if per_incomestatus2_20<=indkomst<per_incomestatus2_40 then e10=2;
if per_incomestatus2_40<=indkomst<per_incomestatus2_60 then e10=3;
if per_incomestatus2_60<=indkomst<per_incomestatus2_80 then e10=4;
if indkomst=>per_incomestatus2_80 then e10=5;

if b=1 and c=1 and d=1 and e=1 and f=1 and g=1 and h=1 and i=1 and j=1 and k=1 and l=1;
run;



